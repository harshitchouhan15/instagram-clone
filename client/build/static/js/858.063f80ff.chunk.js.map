{"version":3,"file":"static/js/858.063f80ff.chunk.js","mappings":"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","sources":["../node_modules/@firebase/util/src/crypt.ts","../node_modules/@firebase/util/src/defaults.ts","../node_modules/@firebase/util/src/global.ts","../node_modules/@firebase/util/src/deferred.ts","../node_modules/@firebase/util/src/emulator.ts","../node_modules/@firebase/util/src/environment.ts","../node_modules/@firebase/util/src/errors.ts","../node_modules/@firebase/util/src/obj.ts","../node_modules/@firebase/util/src/compat.ts","../node_modules/@mui/icons-material/ChevronLeft.js","../node_modules/@mui/icons-material/ChevronRight.js","../node_modules/@mui/icons-material/Close.js","../node_modules/@mui/icons-material/Favorite.js","../node_modules/@mui/icons-material/FavoriteBorder.js","../node_modules/@mui/icons-material/KeyboardBackspace.js","../node_modules/@mui/icons-material/PowerSettingsNewOutlined.js","../node_modules/@mui/icons-material/VolumeOff.js","../node_modules/@mui/icons-material/VolumeUp.js","../node_modules/@mui/material/internal/svg-icons/Person.js","../node_modules/@mui/material/Avatar/avatarClasses.js","../node_modules/@mui/material/Avatar/Avatar.js","../node_modules/@mui/utils/esm/usePreviousProps.js","../node_modules/@mui/material/Badge/badgeClasses.js","../node_modules/@mui/material/Badge/Badge.js","../node_modules/@mui/base/useBadge/useBadge.js","../node_modules/jwt-decode/lib/atob.js","../node_modules/jwt-decode/lib/base64_url_decode.js","../node_modules/jwt-decode/lib/index.js","../../../src/lang/en_US.ts","../../../src/lang/zh_CN.ts","../../src/register.ts","../../../src/utils/date.ts","../../src/format.ts","../../src/index.ts","../node_modules/@firebase/logger/src/logger.ts","../node_modules/idb/build/wrap-idb-value.js","../node_modules/idb/build/index.js","../node_modules/@firebase/app/src/platformLoggerService.ts","../node_modules/@firebase/app/src/logger.ts","../node_modules/@firebase/app/src/constants.ts","../node_modules/@firebase/app/src/internal.ts","../node_modules/@firebase/app/src/errors.ts","../node_modules/@firebase/app/src/firebaseApp.ts","../node_modules/@firebase/app/src/api.ts","../node_modules/@firebase/app/src/indexeddb.ts","../node_modules/@firebase/app/src/heartbeatService.ts","../node_modules/@firebase/app/src/registerCoreComponents.ts","../node_modules/@firebase/app/src/index.ts","../node_modules/@firebase/component/src/component.ts","../node_modules/@firebase/component/src/constants.ts","../node_modules/@firebase/component/src/provider.ts","../node_modules/@firebase/component/src/component_container.ts","../node_modules/firebase/app/index.ts","../node_modules/@firebase/storage/src/implementation/error.ts","../node_modules/@firebase/storage/src/implementation/constants.ts","../node_modules/@firebase/storage/src/implementation/location.ts","../node_modules/@firebase/storage/src/implementation/connection.ts","../node_modules/@firebase/storage/src/implementation/failrequest.ts","../node_modules/@firebase/storage/src/implementation/type.ts","../node_modules/@firebase/storage/src/implementation/url.ts","../node_modules/@firebase/storage/src/implementation/utils.ts","../node_modules/@firebase/storage/src/implementation/request.ts","../node_modules/@firebase/storage/src/implementation/backoff.ts","../node_modules/@firebase/storage/src/implementation/fs.ts","../node_modules/@firebase/storage/src/platform/browser/base64.ts","../node_modules/@firebase/storage/src/implementation/string.ts","../node_modules/@firebase/storage/src/implementation/blob.ts","../node_modules/@firebase/storage/src/implementation/json.ts","../node_modules/@firebase/storage/src/implementation/path.ts","../node_modules/@firebase/storage/src/implementation/metadata.ts","../node_modules/@firebase/storage/src/implementation/requestinfo.ts","../node_modules/@firebase/storage/src/implementation/requests.ts","../node_modules/@firebase/storage/src/implementation/taskenums.ts","../node_modules/@firebase/storage/src/implementation/observer.ts","../node_modules/@firebase/storage/src/implementation/async.ts","../node_modules/@firebase/storage/src/platform/browser/connection.ts","../node_modules/@firebase/storage/src/task.ts","../node_modules/@firebase/storage/src/reference.ts","../node_modules/@firebase/storage/src/service.ts","../node_modules/@firebase/storage/src/constants.ts","../node_modules/@firebase/storage/src/api.ts","../node_modules/@firebase/storage/src/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst stringToByteArray = function (str: string): number[] {\n  // TODO(user): Use native implementations if/when available\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (\n      (c & 0xfc00) === 0xd800 &&\n      i + 1 < str.length &&\n      (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00\n    ) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param bytes Array of numbers representing characters.\n * @return Stringification of the array.\n */\nconst byteArrayToString = function (bytes: number[]): string {\n  // TODO(user): Use native implementations if/when available\n  const out: string[] = [];\n  let pos = 0,\n    c = 0;\n  while (pos < bytes.length) {\n    const c1 = bytes[pos++];\n    if (c1 < 128) {\n      out[c++] = String.fromCharCode(c1);\n    } else if (c1 > 191 && c1 < 224) {\n      const c2 = bytes[pos++];\n      out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n    } else if (c1 > 239 && c1 < 365) {\n      // Surrogate Pair\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      const c4 = bytes[pos++];\n      const u =\n        (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\n        0x10000;\n      out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n      out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n    } else {\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      out[c++] = String.fromCharCode(\n        ((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63)\n      );\n    }\n  }\n  return out.join('');\n};\n\ninterface Base64 {\n  byteToCharMap_: { [key: number]: string } | null;\n  charToByteMap_: { [key: string]: number } | null;\n  byteToCharMapWebSafe_: { [key: number]: string } | null;\n  charToByteMapWebSafe_: { [key: string]: number } | null;\n  ENCODED_VALS_BASE: string;\n  readonly ENCODED_VALS: string;\n  readonly ENCODED_VALS_WEBSAFE: string;\n  HAS_NATIVE_SUPPORT: boolean;\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string;\n  encodeString(input: string, webSafe?: boolean): string;\n  decodeString(input: string, webSafe: boolean): string;\n  decodeStringToByteArray(input: string, webSafe: boolean): number[];\n  init_(): void;\n}\n\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\n// Static lookup maps, lazily populated by init_()\nexport const base64: Base64 = {\n  /**\n   * Maps bytes to characters.\n   */\n  byteToCharMap_: null,\n\n  /**\n   * Maps characters to bytes.\n   */\n  charToByteMap_: null,\n\n  /**\n   * Maps bytes to websafe characters.\n   * @private\n   */\n  byteToCharMapWebSafe_: null,\n\n  /**\n   * Maps websafe characters to bytes.\n   * @private\n   */\n  charToByteMapWebSafe_: null,\n\n  /**\n   * Our default alphabet, shared between\n   * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n   */\n  ENCODED_VALS_BASE:\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n\n  /**\n   * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n   */\n  get ENCODED_VALS() {\n    return this.ENCODED_VALS_BASE + '+/=';\n  },\n\n  /**\n   * Our websafe alphabet.\n   */\n  get ENCODED_VALS_WEBSAFE() {\n    return this.ENCODED_VALS_BASE + '-_.';\n  },\n\n  /**\n   * Whether this browser supports the atob and btoa functions. This extension\n   * started at Mozilla but is now implemented by many browsers. We use the\n   * ASSUME_* variables to avoid pulling in the full useragent detection library\n   * but still allowing the standard per-browser compilations.\n   *\n   */\n  HAS_NATIVE_SUPPORT: typeof atob === 'function',\n\n  /**\n   * Base64-encode an array of bytes.\n   *\n   * @param input An array of bytes (numbers with\n   *     value in [0, 255]) to encode.\n   * @param webSafe Boolean indicating we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string {\n    if (!Array.isArray(input)) {\n      throw Error('encodeByteArray takes an array as a parameter');\n    }\n\n    this.init_();\n\n    const byteToCharMap = webSafe\n      ? this.byteToCharMapWebSafe_!\n      : this.byteToCharMap_!;\n\n    const output = [];\n\n    for (let i = 0; i < input.length; i += 3) {\n      const byte1 = input[i];\n      const haveByte2 = i + 1 < input.length;\n      const byte2 = haveByte2 ? input[i + 1] : 0;\n      const haveByte3 = i + 2 < input.length;\n      const byte3 = haveByte3 ? input[i + 2] : 0;\n\n      const outByte1 = byte1 >> 2;\n      const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\n      let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\n      let outByte4 = byte3 & 0x3f;\n\n      if (!haveByte3) {\n        outByte4 = 64;\n\n        if (!haveByte2) {\n          outByte3 = 64;\n        }\n      }\n\n      output.push(\n        byteToCharMap[outByte1],\n        byteToCharMap[outByte2],\n        byteToCharMap[outByte3],\n        byteToCharMap[outByte4]\n      );\n    }\n\n    return output.join('');\n  },\n\n  /**\n   * Base64-encode a string.\n   *\n   * @param input A string to encode.\n   * @param webSafe If true, we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeString(input: string, webSafe?: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return btoa(input);\n    }\n    return this.encodeByteArray(stringToByteArray(input), webSafe);\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * @param input to decode.\n   * @param webSafe True if we should use the\n   *     alternative alphabet.\n   * @return string representing the decoded value.\n   */\n  decodeString(input: string, webSafe: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return atob(input);\n    }\n    return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * In base-64 decoding, groups of four characters are converted into three\n   * bytes.  If the encoder did not apply padding, the input length may not\n   * be a multiple of 4.\n   *\n   * In this case, the last group will have fewer than 4 characters, and\n   * padding will be inferred.  If the group has one or two characters, it decodes\n   * to one byte.  If the group has three characters, it decodes to two bytes.\n   *\n   * @param input Input to decode.\n   * @param webSafe True if we should use the web-safe alphabet.\n   * @return bytes representing the decoded value.\n   */\n  decodeStringToByteArray(input: string, webSafe: boolean): number[] {\n    this.init_();\n\n    const charToByteMap = webSafe\n      ? this.charToByteMapWebSafe_!\n      : this.charToByteMap_!;\n\n    const output: number[] = [];\n\n    for (let i = 0; i < input.length; ) {\n      const byte1 = charToByteMap[input.charAt(i++)];\n\n      const haveByte2 = i < input.length;\n      const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n      ++i;\n\n      const haveByte3 = i < input.length;\n      const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      const haveByte4 = i < input.length;\n      const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n        throw new DecodeBase64StringError();\n      }\n\n      const outByte1 = (byte1 << 2) | (byte2 >> 4);\n      output.push(outByte1);\n\n      if (byte3 !== 64) {\n        const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\n        output.push(outByte2);\n\n        if (byte4 !== 64) {\n          const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\n          output.push(outByte3);\n        }\n      }\n    }\n\n    return output;\n  },\n\n  /**\n   * Lazy static initialization function. Called before\n   * accessing any of the static map variables.\n   * @private\n   */\n  init_() {\n    if (!this.byteToCharMap_) {\n      this.byteToCharMap_ = {};\n      this.charToByteMap_ = {};\n      this.byteToCharMapWebSafe_ = {};\n      this.charToByteMapWebSafe_ = {};\n\n      // We want quick mappings back and forth, so we precompute two maps.\n      for (let i = 0; i < this.ENCODED_VALS.length; i++) {\n        this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n        this.charToByteMap_[this.byteToCharMap_[i]] = i;\n        this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n        this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n\n        // Be forgiving when decoding and correctly decode both encodings.\n        if (i >= this.ENCODED_VALS_BASE.length) {\n          this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n          this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n        }\n      }\n    }\n  }\n};\n\n/**\n * An error encountered while decoding base64 string.\n */\nexport class DecodeBase64StringError extends Error {\n  readonly name = 'DecodeBase64StringError';\n}\n\n/**\n * URL-safe base64 encoding\n */\nexport const base64Encode = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  return base64.encodeByteArray(utf8Bytes, true);\n};\n\n/**\n * URL-safe base64 encoding (without \".\" padding in the end).\n * e.g. Used in JSON Web Token (JWT) parts.\n */\nexport const base64urlEncodeWithoutPadding = function (str: string): string {\n  // Use base64url encoding and remove padding in the end (dot characters).\n  return base64Encode(str).replace(/\\./g, '');\n};\n\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param str To be decoded\n * @return Decoded result, if possible\n */\nexport const base64Decode = function (str: string): string | null {\n  try {\n    return base64.decodeString(str, true);\n  } catch (e) {\n    console.error('base64Decode failed: ', e);\n  }\n  return null;\n};\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { getGlobal } from './global';\n\n/**\n * Keys for experimental properties on the `FirebaseDefaults` object.\n * @public\n */\nexport type ExperimentalKey = 'authTokenSyncURL' | 'authIdTokenMaxAge';\n\n/**\n * An object that can be injected into the environment as __FIREBASE_DEFAULTS__,\n * either as a property of globalThis, a shell environment variable, or a\n * cookie.\n *\n * This object can be used to automatically configure and initialize\n * a Firebase app as well as any emulators.\n *\n * @public\n */\nexport interface FirebaseDefaults {\n  config?: Record<string, string>;\n  emulatorHosts?: Record<string, string>;\n  _authTokenSyncURL?: string;\n  _authIdTokenMaxAge?: number;\n  /**\n   * Override Firebase's runtime environment detection and\n   * force the SDK to act as if it were in the specified environment.\n   */\n  forceEnvironment?: 'browser' | 'node';\n  [key: string]: unknown;\n}\n\ndeclare global {\n  // Need `var` for this to work.\n  // eslint-disable-next-line no-var\n  var __FIREBASE_DEFAULTS__: FirebaseDefaults | undefined;\n}\n\nconst getDefaultsFromGlobal = (): FirebaseDefaults | undefined =>\n  getGlobal().__FIREBASE_DEFAULTS__;\n\n/**\n * Attempt to read defaults from a JSON string provided to\n * process(.)env(.)__FIREBASE_DEFAULTS__ or a JSON file whose path is in\n * process(.)env(.)__FIREBASE_DEFAULTS_PATH__\n * The dots are in parens because certain compilers (Vite?) cannot\n * handle seeing that variable in comments.\n * See https://github.com/firebase/firebase-js-sdk/issues/6838\n */\nconst getDefaultsFromEnvVariable = (): FirebaseDefaults | undefined => {\n  if (typeof process === 'undefined' || typeof process.env === 'undefined') {\n    return;\n  }\n  const defaultsJsonString = process.env.__FIREBASE_DEFAULTS__;\n  if (defaultsJsonString) {\n    return JSON.parse(defaultsJsonString);\n  }\n};\n\nconst getDefaultsFromCookie = (): FirebaseDefaults | undefined => {\n  if (typeof document === 'undefined') {\n    return;\n  }\n  let match;\n  try {\n    match = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);\n  } catch (e) {\n    // Some environments such as Angular Universal SSR have a\n    // `document` object but error on accessing `document.cookie`.\n    return;\n  }\n  const decoded = match && base64Decode(match[1]);\n  return decoded && JSON.parse(decoded);\n};\n\n/**\n * Get the __FIREBASE_DEFAULTS__ object. It checks in order:\n * (1) if such an object exists as a property of `globalThis`\n * (2) if such an object was provided on a shell environment variable\n * (3) if such an object exists in a cookie\n * @public\n */\nexport const getDefaults = (): FirebaseDefaults | undefined => {\n  try {\n    return (\n      getDefaultsFromGlobal() ||\n      getDefaultsFromEnvVariable() ||\n      getDefaultsFromCookie()\n    );\n  } catch (e) {\n    /**\n     * Catch-all for being unable to get __FIREBASE_DEFAULTS__ due\n     * to any environment case we have not accounted for. Log to\n     * info instead of swallowing so we can find these unknown cases\n     * and add paths for them if needed.\n     */\n    console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`);\n    return;\n  }\n};\n\n/**\n * Returns emulator host stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a URL host formatted like `127.0.0.1:9999` or `[::1]:4000` if available\n * @public\n */\nexport const getDefaultEmulatorHost = (\n  productName: string\n): string | undefined => getDefaults()?.emulatorHosts?.[productName];\n\n/**\n * Returns emulator hostname and port stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a pair of hostname and port like `[\"::1\", 4000]` if available\n * @public\n */\nexport const getDefaultEmulatorHostnameAndPort = (\n  productName: string\n): [hostname: string, port: number] | undefined => {\n  const host = getDefaultEmulatorHost(productName);\n  if (!host) {\n    return undefined;\n  }\n  const separatorIndex = host.lastIndexOf(':'); // Finding the last since IPv6 addr also has colons.\n  if (separatorIndex <= 0 || separatorIndex + 1 === host.length) {\n    throw new Error(`Invalid host ${host} with no separate hostname and port!`);\n  }\n  // eslint-disable-next-line no-restricted-globals\n  const port = parseInt(host.substring(separatorIndex + 1), 10);\n  if (host[0] === '[') {\n    // Bracket-quoted `[ipv6addr]:port` => return \"ipv6addr\" (without brackets).\n    return [host.substring(1, separatorIndex - 1), port];\n  } else {\n    return [host.substring(0, separatorIndex), port];\n  }\n};\n\n/**\n * Returns Firebase app config stored in the __FIREBASE_DEFAULTS__ object.\n * @public\n */\nexport const getDefaultAppConfig = (): Record<string, string> | undefined =>\n  getDefaults()?.config;\n\n/**\n * Returns an experimental setting on the __FIREBASE_DEFAULTS__ object (properties\n * prefixed by \"_\")\n * @public\n */\nexport const getExperimentalSetting = <T extends ExperimentalKey>(\n  name: T\n): FirebaseDefaults[`_${T}`] =>\n  getDefaults()?.[`_${name}`] as FirebaseDefaults[`_${T}`];\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Polyfill for `globalThis` object.\n * @returns the `globalThis` object for the given environment.\n * @public\n */\nexport function getGlobal(): typeof globalThis {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('Unable to locate global object.');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<R> {\n  promise: Promise<R>;\n  reject: (value?: unknown) => void = () => {};\n  resolve: (value?: unknown) => void = () => {};\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve as (value?: unknown) => void;\n      this.reject = reject as (value?: unknown) => void;\n    });\n  }\n\n  /**\n   * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\n   * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\n   * and returns a node-style callback which will resolve or reject the Deferred's promise.\n   */\n  wrapCallback(\n    callback?: (error?: unknown, value?: unknown) => void\n  ): (error: unknown, value?: unknown) => void {\n    return (error, value?) => {\n      if (error) {\n        this.reject(error);\n      } else {\n        this.resolve(value);\n      }\n      if (typeof callback === 'function') {\n        // Attaching noop handler just in case developer wasn't expecting\n        // promises\n        this.promise.catch(() => {});\n\n        // Some of our callbacks don't expect a value and our own tests\n        // assert that the parameter length is 1\n        if (callback.length === 1) {\n          callback(error);\n        } else {\n          callback(error, value);\n        }\n      }\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64urlEncodeWithoutPadding } from './crypt';\n\n// Firebase Auth tokens contain snake_case claims following the JWT standard / convention.\n/* eslint-disable camelcase */\n\nexport type FirebaseSignInProvider =\n  | 'custom'\n  | 'email'\n  | 'password'\n  | 'phone'\n  | 'anonymous'\n  | 'google.com'\n  | 'facebook.com'\n  | 'github.com'\n  | 'twitter.com'\n  | 'microsoft.com'\n  | 'apple.com';\n\ninterface FirebaseIdToken {\n  // Always set to https://securetoken.google.com/PROJECT_ID\n  iss: string;\n\n  // Always set to PROJECT_ID\n  aud: string;\n\n  // The user's unique ID\n  sub: string;\n\n  // The token issue time, in seconds since epoch\n  iat: number;\n\n  // The token expiry time, normally 'iat' + 3600\n  exp: number;\n\n  // The user's unique ID. Must be equal to 'sub'\n  user_id: string;\n\n  // The time the user authenticated, normally 'iat'\n  auth_time: number;\n\n  // The sign in provider, only set when the provider is 'anonymous'\n  provider_id?: 'anonymous';\n\n  // The user's primary email\n  email?: string;\n\n  // The user's email verification status\n  email_verified?: boolean;\n\n  // The user's primary phone number\n  phone_number?: string;\n\n  // The user's display name\n  name?: string;\n\n  // The user's profile photo URL\n  picture?: string;\n\n  // Information on all identities linked to this user\n  firebase: {\n    // The primary sign-in provider\n    sign_in_provider: FirebaseSignInProvider;\n\n    // A map of providers to the user's list of unique identifiers from\n    // each provider\n    identities?: { [provider in FirebaseSignInProvider]?: string[] };\n  };\n\n  // Custom claims set by the developer\n  [claim: string]: unknown;\n\n  uid?: never; // Try to catch a common mistake of \"uid\" (should be \"sub\" instead).\n}\n\nexport type EmulatorMockTokenOptions = ({ user_id: string } | { sub: string }) &\n  Partial<FirebaseIdToken>;\n\nexport function createMockUserToken(\n  token: EmulatorMockTokenOptions,\n  projectId?: string\n): string {\n  if (token.uid) {\n    throw new Error(\n      'The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.'\n    );\n  }\n  // Unsecured JWTs use \"none\" as the algorithm.\n  const header = {\n    alg: 'none',\n    type: 'JWT'\n  };\n\n  const project = projectId || 'demo-project';\n  const iat = token.iat || 0;\n  const sub = token.sub || token.user_id;\n  if (!sub) {\n    throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\n  }\n\n  const payload: FirebaseIdToken = {\n    // Set all required fields to decent defaults\n    iss: `https://securetoken.google.com/${project}`,\n    aud: project,\n    iat,\n    exp: iat + 3600,\n    auth_time: iat,\n    sub,\n    user_id: sub,\n    firebase: {\n      sign_in_provider: 'custom',\n      identities: {}\n    },\n\n    // Override with user options\n    ...token\n  };\n\n  // Unsecured JWTs use the empty string as a signature.\n  const signature = '';\n  return [\n    base64urlEncodeWithoutPadding(JSON.stringify(header)),\n    base64urlEncodeWithoutPadding(JSON.stringify(payload)),\n    signature\n  ].join('.');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\nimport { getDefaults } from './defaults';\n\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return user agent string\n */\nexport function getUA(): string {\n  if (\n    typeof navigator !== 'undefined' &&\n    typeof navigator['userAgent'] === 'string'\n  ) {\n    return navigator['userAgent'];\n  } else {\n    return '';\n  }\n}\n\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\n * wait for a callback.\n */\nexport function isMobileCordova(): boolean {\n  return (\n    typeof window !== 'undefined' &&\n    // @ts-ignore Setting up an broadly applicable index signature for Window\n    // just to deal with this case would probably be a bad idea.\n    !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\n    /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA())\n  );\n}\n\n/**\n * Detect Node.js.\n *\n * @return true if Node.js environment is detected or specified.\n */\n// Node detection logic from: https://github.com/iliakan/detect-node/\nexport function isNode(): boolean {\n  const forceEnvironment = getDefaults()?.forceEnvironment;\n  if (forceEnvironment === 'node') {\n    return true;\n  } else if (forceEnvironment === 'browser') {\n    return false;\n  }\n\n  try {\n    return (\n      Object.prototype.toString.call(global.process) === '[object process]'\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Detect Browser Environment\n */\nexport function isBrowser(): boolean {\n  return typeof self === 'object' && self.self === self;\n}\n\n/**\n * Detect browser extensions (Chrome and Firefox at least).\n */\ninterface BrowserRuntime {\n  id?: unknown;\n}\ndeclare const chrome: { runtime?: BrowserRuntime };\ndeclare const browser: { runtime?: BrowserRuntime };\nexport function isBrowserExtension(): boolean {\n  const runtime =\n    typeof chrome === 'object'\n      ? chrome.runtime\n      : typeof browser === 'object'\n      ? browser.runtime\n      : undefined;\n  return typeof runtime === 'object' && runtime.id !== undefined;\n}\n\n/**\n * Detect React Native.\n *\n * @return true if ReactNative environment is detected.\n */\nexport function isReactNative(): boolean {\n  return (\n    typeof navigator === 'object' && navigator['product'] === 'ReactNative'\n  );\n}\n\n/** Detects Electron apps. */\nexport function isElectron(): boolean {\n  return getUA().indexOf('Electron/') >= 0;\n}\n\n/** Detects Internet Explorer. */\nexport function isIE(): boolean {\n  const ua = getUA();\n  return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n}\n\n/** Detects Universal Windows Platform apps. */\nexport function isUWP(): boolean {\n  return getUA().indexOf('MSAppHost/') >= 0;\n}\n\n/**\n * Detect whether the current SDK build is the Node version.\n *\n * @return true if it's the Node SDK build.\n */\nexport function isNodeSdk(): boolean {\n  return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\n}\n\n/** Returns true if we are running in Safari. */\nexport function isSafari(): boolean {\n  return (\n    !isNode() &&\n    navigator.userAgent.includes('Safari') &&\n    !navigator.userAgent.includes('Chrome')\n  );\n}\n\n/**\n * This method checks if indexedDB is supported by current browser/service worker context\n * @return true if indexedDB is supported by current browser/service worker context\n */\nexport function isIndexedDBAvailable(): boolean {\n  try {\n    return typeof indexedDB === 'object';\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\n * if errors occur during the database open operation.\n *\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\n * private browsing)\n */\nexport function validateIndexedDBOpenable(): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      let preExist: boolean = true;\n      const DB_CHECK_NAME =\n        'validate-browser-context-for-indexeddb-analytics-module';\n      const request = self.indexedDB.open(DB_CHECK_NAME);\n      request.onsuccess = () => {\n        request.result.close();\n        // delete database only when it doesn't pre-exist\n        if (!preExist) {\n          self.indexedDB.deleteDatabase(DB_CHECK_NAME);\n        }\n        resolve(true);\n      };\n      request.onupgradeneeded = () => {\n        preExist = false;\n      };\n\n      request.onerror = () => {\n        reject(request.error?.message || '');\n      };\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n\n/**\n *\n * This method checks whether cookie is enabled within current browser\n * @return true if cookie is enabled within current browser\n */\nexport function areCookiesEnabled(): boolean {\n  if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\n    return false;\n  }\n  return true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // Typescript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: unknown;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  /** The custom name for all FirebaseErrors. */\n  readonly name: string = ERROR_NAME;\n\n  constructor(\n    /** The error code for this error. */\n    readonly code: string,\n    message: string,\n    /** Custom data for this error. */\n    public customData?: Record<string, unknown>\n  ) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage, customData);\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? String(value) : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function contains<T extends object>(obj: T, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function safeGet<T extends object, K extends keyof T>(\n  obj: T,\n  key: K\n): T[K] | undefined {\n  if (Object.prototype.hasOwnProperty.call(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\nexport function isEmpty(obj: object): obj is {} {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function map<K extends string, V, U>(\n  obj: { [key in K]: V },\n  fn: (value: V, key: K, obj: { [key in K]: V }) => U,\n  contextObj?: unknown\n): { [key in K]: U } {\n  const res: Partial<{ [key in K]: U }> = {};\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      res[key] = fn.call(contextObj, obj[key], key, obj);\n    }\n  }\n  return res as { [key in K]: U };\n}\n\n/**\n * Deep equal two objects. Support Arrays and Objects.\n */\nexport function deepEqual(a: object, b: object): boolean {\n  if (a === b) {\n    return true;\n  }\n\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n  for (const k of aKeys) {\n    if (!bKeys.includes(k)) {\n      return false;\n    }\n\n    const aProp = (a as Record<string, unknown>)[k];\n    const bProp = (b as Record<string, unknown>)[k];\n    if (isObject(aProp) && isObject(bProp)) {\n      if (!deepEqual(aProp, bProp)) {\n        return false;\n      }\n    } else if (aProp !== bProp) {\n      return false;\n    }\n  }\n\n  for (const k of bKeys) {\n    if (!aKeys.includes(k)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isObject(thing: unknown): thing is object {\n  return thing !== null && typeof thing === 'object';\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Compat<T> {\n  _delegate: T;\n}\n\nexport function getModularInstance<ExpService>(\n  service: Compat<ExpService> | ExpService\n): ExpService {\n  if (service && (service as Compat<ExpService>)._delegate) {\n    return (service as Compat<ExpService>)._delegate;\n  } else {\n    return service as ExpService;\n  }\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.41 7.41 14 6l-6 6 6 6 1.41-1.41L10.83 12z\"\n}), 'ChevronLeft');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M10 6 8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n}), 'ChevronRight');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m12 21.35-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\"\n}), 'Favorite');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16.5 3c-1.74 0-3.41.81-4.5 2.09C10.91 3.81 9.24 3 7.5 3 4.42 3 2 5.42 2 8.5c0 3.78 3.4 6.86 8.55 11.54L12 21.35l1.45-1.32C18.6 15.36 22 12.28 22 8.5 22 5.42 19.58 3 16.5 3zm-4.4 15.55-.1.1-.1-.1C7.14 14.24 4 11.39 4 8.5 4 6.5 5.5 5 7.5 5c1.54 0 3.04.99 3.57 2.36h1.87C13.46 5.99 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5 0 2.89-3.14 5.74-7.9 10.05z\"\n}), 'FavoriteBorder');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M21 11H6.83l3.58-3.59L9 6l-6 6 6 6 1.41-1.41L6.83 13H21z\"\n}), 'KeyboardBackspace');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M13 3h-2v10h2V3zm4.83 2.17-1.42 1.42C17.99 7.86 19 9.81 19 12c0 3.87-3.13 7-7 7s-7-3.13-7-7c0-2.19 1.01-4.14 2.58-5.42L6.17 5.17C4.23 6.82 3 9.26 3 12c0 4.97 4.03 9 9 9s9-4.03 9-9c0-2.74-1.23-5.18-3.17-6.83z\"\n}), 'PowerSettingsNewOutlined');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16.5 12c0-1.77-1.02-3.29-2.5-4.03v2.21l2.45 2.45c.03-.2.05-.41.05-.63zm2.5 0c0 .94-.2 1.82-.54 2.64l1.51 1.51C20.63 14.91 21 13.5 21 12c0-4.28-2.99-7.86-7-8.77v2.06c2.89.86 5 3.54 5 6.71zM4.27 3 3 4.27 7.73 9H3v6h4l5 5v-6.73l4.25 4.25c-.67.52-1.42.93-2.25 1.18v2.06c1.38-.31 2.63-.95 3.69-1.81L19.73 21 21 19.73l-9-9L4.27 3zM12 4 9.91 6.09 12 8.18V4z\"\n}), 'VolumeOff');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 9v6h4l5 5V4L7 9H3zm13.5 3c0-1.77-1.02-3.29-2.5-4.03v8.05c1.48-.73 2.5-2.25 2.5-4.02zM14 3.23v2.06c2.89.86 5 3.54 5 6.71s-2.11 5.85-5 6.71v2.06c4.01-.91 7-4.49 7-8.77s-2.99-7.86-7-8.77z\"\n}), 'VolumeUp');\nexports.default = _default;","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getAvatarUtilityClass(slot) {\n  return generateUtilityClass('MuiAvatar', slot);\n}\nconst avatarClasses = generateUtilityClasses('MuiAvatar', ['root', 'colorDefault', 'circular', 'rounded', 'square', 'img', 'fallback']);\nexport default avatarClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"alt\", \"children\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Person from '../internal/svg-icons/Person';\nimport { getAvatarUtilityClass } from './avatarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    colorDefault\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, colorDefault && 'colorDefault'],\n    img: ['img'],\n    fallback: ['fallback']\n  };\n  return composeClasses(slots, getAvatarUtilityClass, classes);\n};\nconst AvatarRoot = styled('div', {\n  name: 'MuiAvatar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.colorDefault && styles.colorDefault];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexShrink: 0,\n  width: 40,\n  height: 40,\n  fontFamily: theme.typography.fontFamily,\n  fontSize: theme.typography.pxToRem(20),\n  lineHeight: 1,\n  borderRadius: '50%',\n  overflow: 'hidden',\n  userSelect: 'none'\n}, ownerState.variant === 'rounded' && {\n  borderRadius: (theme.vars || theme).shape.borderRadius\n}, ownerState.variant === 'square' && {\n  borderRadius: 0\n}, ownerState.colorDefault && _extends({\n  color: (theme.vars || theme).palette.background.default\n}, theme.vars ? {\n  backgroundColor: theme.vars.palette.Avatar.defaultBg\n} : {\n  backgroundColor: theme.palette.mode === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n})));\nconst AvatarImg = styled('img', {\n  name: 'MuiAvatar',\n  slot: 'Img',\n  overridesResolver: (props, styles) => styles.img\n})({\n  width: '100%',\n  height: '100%',\n  textAlign: 'center',\n  // Handle non-square image. The property isn't supported by IE11.\n  objectFit: 'cover',\n  // Hide alt text.\n  color: 'transparent',\n  // Hide the image broken icon, only works on Chrome.\n  textIndent: 10000\n});\nconst AvatarFallback = styled(Person, {\n  name: 'MuiAvatar',\n  slot: 'Fallback',\n  overridesResolver: (props, styles) => styles.fallback\n})({\n  width: '75%',\n  height: '75%'\n});\nfunction useLoaded({\n  crossOrigin,\n  referrerPolicy,\n  src,\n  srcSet\n}) {\n  const [loaded, setLoaded] = React.useState(false);\n  React.useEffect(() => {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n    setLoaded(false);\n    let active = true;\n    const image = new Image();\n    image.onload = () => {\n      if (!active) {\n        return;\n      }\n      setLoaded('loaded');\n    };\n    image.onerror = () => {\n      if (!active) {\n        return;\n      }\n      setLoaded('error');\n    };\n    image.crossOrigin = crossOrigin;\n    image.referrerPolicy = referrerPolicy;\n    image.src = src;\n    if (srcSet) {\n      image.srcset = srcSet;\n    }\n    return () => {\n      active = false;\n    };\n  }, [crossOrigin, referrerPolicy, src, srcSet]);\n  return loaded;\n}\nconst Avatar = /*#__PURE__*/React.forwardRef(function Avatar(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAvatar'\n  });\n  const {\n      alt,\n      children: childrenProp,\n      className,\n      component = 'div',\n      imgProps,\n      sizes,\n      src,\n      srcSet,\n      variant = 'circular'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  let children = null;\n\n  // Use a hook instead of onError on the img element to support server-side rendering.\n  const loaded = useLoaded(_extends({}, imgProps, {\n    src,\n    srcSet\n  }));\n  const hasImg = src || srcSet;\n  const hasImgNotFailing = hasImg && loaded !== 'error';\n  const ownerState = _extends({}, props, {\n    colorDefault: !hasImgNotFailing,\n    component,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/_jsx(AvatarImg, _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      ownerState: ownerState,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/_jsx(AvatarFallback, {\n      ownerState: ownerState,\n      className: classes.fallback\n    });\n  }\n  return /*#__PURE__*/_jsx(AvatarRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attributes) applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The shape of the avatar.\n   * @default 'circular'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rounded', 'square']), PropTypes.string])\n} : void 0;\nexport default Avatar;","'use client';\n\nimport * as React from 'react';\nconst usePreviousProps = value => {\n  const ref = React.useRef({});\n  React.useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\nexport default usePreviousProps;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getBadgeUtilityClass(slot) {\n  return generateUtilityClass('MuiBadge', slot);\n}\nconst badgeClasses = generateUtilityClasses('MuiBadge', ['root', 'badge', 'dot', 'standard', 'anchorOriginTopRight', 'anchorOriginBottomRight', 'anchorOriginTopLeft', 'anchorOriginBottomLeft', 'invisible', 'colorError', 'colorInfo', 'colorPrimary', 'colorSecondary', 'colorSuccess', 'colorWarning', 'overlapRectangular', 'overlapCircular',\n// TODO: v6 remove the overlap value from these class keys\n'anchorOriginTopLeftCircular', 'anchorOriginTopLeftRectangular', 'anchorOriginTopRightCircular', 'anchorOriginTopRightRectangular', 'anchorOriginBottomLeftCircular', 'anchorOriginBottomLeftRectangular', 'anchorOriginBottomRightCircular', 'anchorOriginBottomRightRectangular']);\nexport default badgeClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"anchorOrigin\", \"className\", \"classes\", \"component\", \"components\", \"componentsProps\", \"children\", \"overlap\", \"color\", \"invisible\", \"max\", \"badgeContent\", \"slots\", \"slotProps\", \"showZero\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { usePreviousProps } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport { useBadge } from '@mui/base/useBadge';\nimport { useSlotProps } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport badgeClasses, { getBadgeUtilityClass } from './badgeClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst RADIUS_STANDARD = 10;\nconst RADIUS_DOT = 4;\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    anchorOrigin,\n    invisible,\n    overlap,\n    variant,\n    classes = {}\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', variant, invisible && 'invisible', `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`, `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}${capitalize(overlap)}`, `overlap${capitalize(overlap)}`, color !== 'default' && `color${capitalize(color)}`]\n  };\n  return composeClasses(slots, getBadgeUtilityClass, classes);\n};\nconst BadgeRoot = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  position: 'relative',\n  display: 'inline-flex',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  flexShrink: 0\n});\nconst BadgeBadge = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Badge',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.badge, styles[ownerState.variant], styles[`anchorOrigin${capitalize(ownerState.anchorOrigin.vertical)}${capitalize(ownerState.anchorOrigin.horizontal)}${capitalize(ownerState.overlap)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], ownerState.invisible && styles.invisible];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  justifyContent: 'center',\n  alignContent: 'center',\n  alignItems: 'center',\n  position: 'absolute',\n  boxSizing: 'border-box',\n  fontFamily: theme.typography.fontFamily,\n  fontWeight: theme.typography.fontWeightMedium,\n  fontSize: theme.typography.pxToRem(12),\n  minWidth: RADIUS_STANDARD * 2,\n  lineHeight: 1,\n  padding: '0 6px',\n  height: RADIUS_STANDARD * 2,\n  borderRadius: RADIUS_STANDARD,\n  zIndex: 1,\n  // Render the badge on top of potential ripples.\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.enteringScreen\n  })\n}, ownerState.color !== 'default' && {\n  backgroundColor: (theme.vars || theme).palette[ownerState.color].main,\n  color: (theme.vars || theme).palette[ownerState.color].contrastText\n}, ownerState.variant === 'dot' && {\n  borderRadius: RADIUS_DOT,\n  height: RADIUS_DOT * 2,\n  minWidth: RADIUS_DOT * 2,\n  padding: 0\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular' && {\n  top: 0,\n  right: 0,\n  transform: 'scale(1) translate(50%, -50%)',\n  transformOrigin: '100% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular' && {\n  bottom: 0,\n  right: 0,\n  transform: 'scale(1) translate(50%, 50%)',\n  transformOrigin: '100% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, 50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular' && {\n  top: 0,\n  left: 0,\n  transform: 'scale(1) translate(-50%, -50%)',\n  transformOrigin: '0% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular' && {\n  bottom: 0,\n  left: 0,\n  transform: 'scale(1) translate(-50%, 50%)',\n  transformOrigin: '0% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, 50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular' && {\n  top: '14%',\n  right: '14%',\n  transform: 'scale(1) translate(50%, -50%)',\n  transformOrigin: '100% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular' && {\n  bottom: '14%',\n  right: '14%',\n  transform: 'scale(1) translate(50%, 50%)',\n  transformOrigin: '100% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, 50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular' && {\n  top: '14%',\n  left: '14%',\n  transform: 'scale(1) translate(-50%, -50%)',\n  transformOrigin: '0% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular' && {\n  bottom: '14%',\n  left: '14%',\n  transform: 'scale(1) translate(-50%, 50%)',\n  transformOrigin: '0% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, 50%)'\n  }\n}, ownerState.invisible && {\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.leavingScreen\n  })\n}));\nconst Badge = /*#__PURE__*/React.forwardRef(function Badge(inProps, ref) {\n  var _ref, _slots$root, _ref2, _slots$badge, _slotProps$root, _slotProps$badge;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBadge'\n  });\n  const {\n      anchorOrigin: anchorOriginProp = {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      className,\n      component,\n      components = {},\n      componentsProps = {},\n      children,\n      overlap: overlapProp = 'rectangular',\n      color: colorProp = 'default',\n      invisible: invisibleProp = false,\n      max: maxProp = 99,\n      badgeContent: badgeContentProp,\n      slots,\n      slotProps,\n      showZero = false,\n      variant: variantProp = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    badgeContent,\n    invisible: invisibleFromHook,\n    max,\n    displayValue: displayValueFromHook\n  } = useBadge({\n    max: maxProp,\n    invisible: invisibleProp,\n    badgeContent: badgeContentProp,\n    showZero\n  });\n  const prevProps = usePreviousProps({\n    anchorOrigin: anchorOriginProp,\n    color: colorProp,\n    overlap: overlapProp,\n    variant: variantProp,\n    badgeContent: badgeContentProp\n  });\n  const invisible = invisibleFromHook || badgeContent == null && variantProp !== 'dot';\n  const {\n    color = colorProp,\n    overlap = overlapProp,\n    anchorOrigin = anchorOriginProp,\n    variant = variantProp\n  } = invisible ? prevProps : props;\n  const displayValue = variant !== 'dot' ? displayValueFromHook : undefined;\n  const ownerState = _extends({}, props, {\n    badgeContent,\n    invisible,\n    max,\n    displayValue,\n    showZero,\n    anchorOrigin,\n    color,\n    overlap,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n\n  // support both `slots` and `components` for backward compatibility\n  const RootSlot = (_ref = (_slots$root = slots == null ? void 0 : slots.root) != null ? _slots$root : components.Root) != null ? _ref : BadgeRoot;\n  const BadgeSlot = (_ref2 = (_slots$badge = slots == null ? void 0 : slots.badge) != null ? _slots$badge : components.Badge) != null ? _ref2 : BadgeBadge;\n  const rootSlotProps = (_slotProps$root = slotProps == null ? void 0 : slotProps.root) != null ? _slotProps$root : componentsProps.root;\n  const badgeSlotProps = (_slotProps$badge = slotProps == null ? void 0 : slotProps.badge) != null ? _slotProps$badge : componentsProps.badge;\n  const rootProps = useSlotProps({\n    elementType: RootSlot,\n    externalSlotProps: rootSlotProps,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref,\n      as: component\n    },\n    ownerState,\n    className: clsx(rootSlotProps == null ? void 0 : rootSlotProps.className, classes.root, className)\n  });\n  const badgeProps = useSlotProps({\n    elementType: BadgeSlot,\n    externalSlotProps: badgeSlotProps,\n    ownerState,\n    className: clsx(classes.badge, badgeSlotProps == null ? void 0 : badgeSlotProps.className)\n  });\n  return /*#__PURE__*/_jsxs(RootSlot, _extends({}, rootProps, {\n    children: [children, /*#__PURE__*/_jsx(BadgeSlot, _extends({}, badgeProps, {\n      children: displayValue\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The anchor of the badge.\n   * @default {\n   *   vertical: 'top',\n   *   horizontal: 'right',\n   * }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'default'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The components used for each slot inside.\n   *\n   * This prop is an alias for the `slots` prop.\n   * It's recommended to use the `slots` prop instead.\n   *\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Badge: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `slotProps` prop.\n   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n  /**\n   * Wrapped shape the badge should overlap.\n   * @default 'rectangular'\n   */\n  overlap: PropTypes.oneOf(['circular', 'rectangular']),\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n  /**\n   * The props used for each slot inside the Badge.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Badge.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    badge: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['dot', 'standard']), PropTypes.string])\n} : void 0;\nexport default Badge;","'use client';\n\nimport { usePreviousProps } from '@mui/utils';\n/**\n *\n * Demos:\n *\n * - [Badge](https://mui.com/base-ui/react-badge/#hook)\n *\n * API:\n *\n * - [useBadge API](https://mui.com/base-ui/react-badge/hooks-api/#use-badge)\n */\nexport function useBadge(parameters) {\n  const {\n    badgeContent: badgeContentProp,\n    invisible: invisibleProp = false,\n    max: maxProp = 99,\n    showZero = false\n  } = parameters;\n  const prevProps = usePreviousProps({\n    badgeContent: badgeContentProp,\n    max: maxProp\n  });\n  let invisible = invisibleProp;\n  if (invisibleProp === false && badgeContentProp === 0 && !showZero) {\n    invisible = true;\n  }\n  const {\n    badgeContent,\n    max = maxProp\n  } = invisible ? prevProps : parameters;\n  const displayValue = badgeContent && Number(badgeContent) > max ? `${max}+` : badgeContent;\n  return {\n    badgeContent,\n    invisible,\n    max,\n    displayValue\n  };\n}","/**\n * The code was extracted from:\n * https://github.com/davidchambers/Base64.js\n */\n\nvar chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\nfunction InvalidCharacterError(message) {\n    this.message = message;\n}\n\nInvalidCharacterError.prototype = new Error();\nInvalidCharacterError.prototype.name = \"InvalidCharacterError\";\n\nfunction polyfill(input) {\n    var str = String(input).replace(/=+$/, \"\");\n    if (str.length % 4 == 1) {\n        throw new InvalidCharacterError(\n            \"'atob' failed: The string to be decoded is not correctly encoded.\"\n        );\n    }\n    for (\n        // initialize result and counters\n        var bc = 0, bs, buffer, idx = 0, output = \"\";\n        // get next character\n        (buffer = str.charAt(idx++));\n        // character found in table? initialize bit storage and add its ascii value;\n        ~buffer &&\n        ((bs = bc % 4 ? bs * 64 + buffer : buffer),\n            // and if not first of each 4 characters,\n            // convert the first 8 bits to one ascii character\n            bc++ % 4) ?\n        (output += String.fromCharCode(255 & (bs >> ((-2 * bc) & 6)))) :\n        0\n    ) {\n        // try to find character in table (0-63, not found => -1)\n        buffer = chars.indexOf(buffer);\n    }\n    return output;\n}\n\nexport default (typeof window !== \"undefined\" &&\n    window.atob &&\n    window.atob.bind(window)) ||\npolyfill;","import atob from \"./atob\";\n\nfunction b64DecodeUnicode(str) {\n    return decodeURIComponent(\n        atob(str).replace(/(.)/g, function(m, p) {\n            var code = p.charCodeAt(0).toString(16).toUpperCase();\n            if (code.length < 2) {\n                code = \"0\" + code;\n            }\n            return \"%\" + code;\n        })\n    );\n}\n\nexport default function(str) {\n    var output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n        case 0:\n            break;\n        case 2:\n            output += \"==\";\n            break;\n        case 3:\n            output += \"=\";\n            break;\n        default:\n            throw \"Illegal base64url string!\";\n    }\n\n    try {\n        return b64DecodeUnicode(output);\n    } catch (err) {\n        return atob(output);\n    }\n}","\"use strict\";\n\nimport base64_url_decode from \"./base64_url_decode\";\n\nexport function InvalidTokenError(message) {\n    this.message = message;\n}\n\nInvalidTokenError.prototype = new Error();\nInvalidTokenError.prototype.name = \"InvalidTokenError\";\n\nexport default function(token, options) {\n    if (typeof token !== \"string\") {\n        throw new InvalidTokenError(\"Invalid token specified\");\n    }\n\n    options = options || {};\n    var pos = options.header === true ? 0 : 1;\n    try {\n        return JSON.parse(base64_url_decode(token.split(\".\")[pos]));\n    } catch (e) {\n        throw new InvalidTokenError(\"Invalid token specified: \" + e.message);\n    }\n}",null,null,null,null,null,null,"/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type LogLevelString =\n  | 'debug'\n  | 'verbose'\n  | 'info'\n  | 'warn'\n  | 'error'\n  | 'silent';\n\nexport interface LogOptions {\n  level: LogLevelString;\n}\n\nexport type LogCallback = (callbackParams: LogCallbackParams) => void;\n\nexport interface LogCallbackParams {\n  level: LogLevelString;\n  message: string;\n  args: unknown[];\n  type: string;\n}\n\n/**\n * A container for all of the Logger instances\n */\nexport const instances: Logger[] = [];\n\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nexport enum LogLevel {\n  DEBUG,\n  VERBOSE,\n  INFO,\n  WARN,\n  ERROR,\n  SILENT\n}\n\nconst levelStringToEnum: { [key in LogLevelString]: LogLevel } = {\n  'debug': LogLevel.DEBUG,\n  'verbose': LogLevel.VERBOSE,\n  'info': LogLevel.INFO,\n  'warn': LogLevel.WARN,\n  'error': LogLevel.ERROR,\n  'silent': LogLevel.SILENT\n};\n\n/**\n * The default log level\n */\nconst defaultLogLevel: LogLevel = LogLevel.INFO;\n\n/**\n * We allow users the ability to pass their own log handler. We will pass the\n * type of log, the current log level, and any other arguments passed (i.e. the\n * messages that the user wants to log) to this function.\n */\nexport type LogHandler = (\n  loggerInstance: Logger,\n  logType: LogLevel,\n  ...args: unknown[]\n) => void;\n\n/**\n * By default, `console.debug` is not displayed in the developer console (in\n * chrome). To avoid forcing users to have to opt-in to these logs twice\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n * logs to the `console.log` function.\n */\nconst ConsoleMethod = {\n  [LogLevel.DEBUG]: 'log',\n  [LogLevel.VERBOSE]: 'log',\n  [LogLevel.INFO]: 'info',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error'\n};\n\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nconst defaultLogHandler: LogHandler = (instance, logType, ...args): void => {\n  if (logType < instance.logLevel) {\n    return;\n  }\n  const now = new Date().toISOString();\n  const method = ConsoleMethod[logType as keyof typeof ConsoleMethod];\n  if (method) {\n    console[method as 'log' | 'info' | 'warn' | 'error'](\n      `[${now}]  ${instance.name}:`,\n      ...args\n    );\n  } else {\n    throw new Error(\n      `Attempted to log a message with an invalid logType (value: ${logType})`\n    );\n  }\n};\n\nexport class Logger {\n  /**\n   * Gives you an instance of a Logger to capture messages according to\n   * Firebase's logging scheme.\n   *\n   * @param name The name that the logs will be associated with\n   */\n  constructor(public name: string) {\n    /**\n     * Capture the current instance for later use\n     */\n    instances.push(this);\n  }\n\n  /**\n   * The log level of the given Logger instance.\n   */\n  private _logLevel = defaultLogLevel;\n\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n\n  set logLevel(val: LogLevel) {\n    if (!(val in LogLevel)) {\n      throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n    }\n    this._logLevel = val;\n  }\n\n  // Workaround for setter/getter having to be the same type.\n  setLogLevel(val: LogLevel | LogLevelString): void {\n    this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n  }\n\n  /**\n   * The main (internal) log handler for the Logger instance.\n   * Can be set to a new function in internal package code but not by user.\n   */\n  private _logHandler: LogHandler = defaultLogHandler;\n  get logHandler(): LogHandler {\n    return this._logHandler;\n  }\n  set logHandler(val: LogHandler) {\n    if (typeof val !== 'function') {\n      throw new TypeError('Value assigned to `logHandler` must be a function');\n    }\n    this._logHandler = val;\n  }\n\n  /**\n   * The optional, additional, user-defined log handler for the Logger instance.\n   */\n  private _userLogHandler: LogHandler | null = null;\n  get userLogHandler(): LogHandler | null {\n    return this._userLogHandler;\n  }\n  set userLogHandler(val: LogHandler | null) {\n    this._userLogHandler = val;\n  }\n\n  /**\n   * The functions below are all based on the `console` interface\n   */\n\n  debug(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\n    this._logHandler(this, LogLevel.DEBUG, ...args);\n  }\n  log(...args: unknown[]): void {\n    this._userLogHandler &&\n      this._userLogHandler(this, LogLevel.VERBOSE, ...args);\n    this._logHandler(this, LogLevel.VERBOSE, ...args);\n  }\n  info(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\n    this._logHandler(this, LogLevel.INFO, ...args);\n  }\n  warn(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\n    this._logHandler(this, LogLevel.WARN, ...args);\n  }\n  error(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\n    this._logHandler(this, LogLevel.ERROR, ...args);\n  }\n}\n\nexport function setLogLevel(level: LogLevelString | LogLevel): void {\n  instances.forEach(inst => {\n    inst.setLogLevel(level);\n  });\n}\n\nexport function setUserLogHandler(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  for (const instance of instances) {\n    let customLogLevel: LogLevel | null = null;\n    if (options && options.level) {\n      customLogLevel = levelStringToEnum[options.level];\n    }\n    if (logCallback === null) {\n      instance.userLogHandler = null;\n    } else {\n      instance.userLogHandler = (\n        instance: Logger,\n        level: LogLevel,\n        ...args: unknown[]\n      ) => {\n        const message = args\n          .map(arg => {\n            if (arg == null) {\n              return null;\n            } else if (typeof arg === 'string') {\n              return arg;\n            } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n              return arg.toString();\n            } else if (arg instanceof Error) {\n              return arg.message;\n            } else {\n              try {\n                return JSON.stringify(arg);\n              } catch (ignored) {\n                return null;\n              }\n            }\n          })\n          .filter(arg => arg)\n          .join(' ');\n        if (level >= (customLogLevel ?? instance.logLevel)) {\n          logCallback({\n            level: LogLevel[level].toLowerCase() as LogLevelString,\n            message,\n            args,\n            type: instance.name\n          });\n        }\n      };\n    }\n  }\n}\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ComponentContainer,\n  ComponentType,\n  Provider,\n  Name\n} from '@firebase/component';\nimport { PlatformLoggerService, VersionService } from './types';\n\nexport class PlatformLoggerServiceImpl implements PlatformLoggerService {\n  constructor(private readonly container: ComponentContainer) {}\n  // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n  getPlatformInfoString(): string {\n    const providers = this.container.getProviders();\n    // Loop through providers and get library/version pairs from any that are\n    // version components.\n    return providers\n      .map(provider => {\n        if (isVersionServiceProvider(provider)) {\n          const service = provider.getImmediate() as VersionService;\n          return `${service.library}/${service.version}`;\n        } else {\n          return null;\n        }\n      })\n      .filter(logString => logString)\n      .join(' ');\n  }\n}\n/**\n *\n * @param provider check if this provider provides a VersionService\n *\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n * provides VersionService. The provider is not necessarily a 'app-version'\n * provider.\n */\nfunction isVersionServiceProvider(provider: Provider<Name>): boolean {\n  const component = provider.getComponent();\n  return component?.type === ComponentType.VERSION;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/app');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { name as appName } from '../package.json';\nimport { name as appCompatName } from '../../app-compat/package.json';\nimport { name as analyticsCompatName } from '../../../packages/analytics-compat/package.json';\nimport { name as analyticsName } from '../../../packages/analytics/package.json';\nimport { name as appCheckCompatName } from '../../../packages/app-check-compat/package.json';\nimport { name as appCheckName } from '../../../packages/app-check/package.json';\nimport { name as authName } from '../../../packages/auth/package.json';\nimport { name as authCompatName } from '../../../packages/auth-compat/package.json';\nimport { name as databaseName } from '../../../packages/database/package.json';\nimport { name as databaseCompatName } from '../../../packages/database-compat/package.json';\nimport { name as functionsName } from '../../../packages/functions/package.json';\nimport { name as functionsCompatName } from '../../../packages/functions-compat/package.json';\nimport { name as installationsName } from '../../../packages/installations/package.json';\nimport { name as installationsCompatName } from '../../../packages/installations-compat/package.json';\nimport { name as messagingName } from '../../../packages/messaging/package.json';\nimport { name as messagingCompatName } from '../../../packages/messaging-compat/package.json';\nimport { name as performanceName } from '../../../packages/performance/package.json';\nimport { name as performanceCompatName } from '../../../packages/performance-compat/package.json';\nimport { name as remoteConfigName } from '../../../packages/remote-config/package.json';\nimport { name as remoteConfigCompatName } from '../../../packages/remote-config-compat/package.json';\nimport { name as storageName } from '../../../packages/storage/package.json';\nimport { name as storageCompatName } from '../../../packages/storage-compat/package.json';\nimport { name as firestoreName } from '../../../packages/firestore/package.json';\nimport { name as firestoreCompatName } from '../../../packages/firestore-compat/package.json';\nimport { name as packageName } from '../../../packages/firebase/package.json';\n\n/**\n * The default app name\n *\n * @internal\n */\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\nexport const PLATFORM_LOG_STRING = {\n  [appName]: 'fire-core',\n  [appCompatName]: 'fire-core-compat',\n  [analyticsName]: 'fire-analytics',\n  [analyticsCompatName]: 'fire-analytics-compat',\n  [appCheckName]: 'fire-app-check',\n  [appCheckCompatName]: 'fire-app-check-compat',\n  [authName]: 'fire-auth',\n  [authCompatName]: 'fire-auth-compat',\n  [databaseName]: 'fire-rtdb',\n  [databaseCompatName]: 'fire-rtdb-compat',\n  [functionsName]: 'fire-fn',\n  [functionsCompatName]: 'fire-fn-compat',\n  [installationsName]: 'fire-iid',\n  [installationsCompatName]: 'fire-iid-compat',\n  [messagingName]: 'fire-fcm',\n  [messagingCompatName]: 'fire-fcm-compat',\n  [performanceName]: 'fire-perf',\n  [performanceCompatName]: 'fire-perf-compat',\n  [remoteConfigName]: 'fire-rc',\n  [remoteConfigCompatName]: 'fire-rc-compat',\n  [storageName]: 'fire-gcs',\n  [storageCompatName]: 'fire-gcs-compat',\n  [firestoreName]: 'fire-fst',\n  [firestoreCompatName]: 'fire-fst-compat',\n  'fire-js': 'fire-js', // Platform identifier for JS SDK.\n  [packageName]: 'fire-js-all'\n} as const;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from './public-types';\nimport { Component, Provider, Name } from '@firebase/component';\nimport { logger } from './logger';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport { FirebaseAppImpl } from './firebaseApp';\n\n/**\n * @internal\n */\nexport const _apps = new Map<string, FirebaseApp>();\n\n/**\n * Registered components.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const _components = new Map<string, Component<any>>();\n\n/**\n * @param component - the component being added to this app's container\n *\n * @internal\n */\nexport function _addComponent<T extends Name>(\n  app: FirebaseApp,\n  component: Component<T>\n): void {\n  try {\n    (app as FirebaseAppImpl).container.addComponent(component);\n  } catch (e) {\n    logger.debug(\n      `Component ${component.name} failed to register with FirebaseApp ${app.name}`,\n      e\n    );\n  }\n}\n\n/**\n *\n * @internal\n */\nexport function _addOrOverwriteComponent(\n  app: FirebaseApp,\n  component: Component\n): void {\n  (app as FirebaseAppImpl).container.addOrOverwriteComponent(component);\n}\n\n/**\n *\n * @param component - the component to register\n * @returns whether or not the component is registered successfully\n *\n * @internal\n */\nexport function _registerComponent<T extends Name>(\n  component: Component<T>\n): boolean {\n  const componentName = component.name;\n  if (_components.has(componentName)) {\n    logger.debug(\n      `There were multiple attempts to register component ${componentName}.`\n    );\n\n    return false;\n  }\n\n  _components.set(componentName, component);\n\n  // add the component to existing app instances\n  for (const app of _apps.values()) {\n    _addComponent(app as FirebaseAppImpl, component);\n  }\n\n  return true;\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n *\n * @returns the provider for the service with the matching name\n *\n * @internal\n */\nexport function _getProvider<T extends Name>(\n  app: FirebaseApp,\n  name: T\n): Provider<T> {\n  const heartbeatController = (app as FirebaseAppImpl).container\n    .getProvider('heartbeat')\n    .getImmediate({ optional: true });\n  if (heartbeatController) {\n    void heartbeatController.triggerHeartbeat();\n  }\n  return (app as FirebaseAppImpl).container.getProvider(name);\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\n *\n * @internal\n */\nexport function _removeServiceInstance<T extends Name>(\n  app: FirebaseApp,\n  name: T,\n  instanceIdentifier: string = DEFAULT_ENTRY_NAME\n): void {\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n\n/**\n * Test only\n *\n * @internal\n */\nexport function _clearComponents(): void {\n  _components.clear();\n}\n\n/**\n * Exported in order to be used in app-compat package\n */\nexport { DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  BAD_APP_NAME = 'bad-app-name',\n  DUPLICATE_APP = 'duplicate-app',\n  APP_DELETED = 'app-deleted',\n  NO_OPTIONS = 'no-options',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument',\n  INVALID_LOG_ARGUMENT = 'invalid-log-argument',\n  IDB_OPEN = 'idb-open',\n  IDB_GET = 'idb-get',\n  IDB_WRITE = 'idb-set',\n  IDB_DELETE = 'idb-delete'\n}\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$appName}' has been created - \" +\n    'call initializeApp() first',\n  [AppError.BAD_APP_NAME]: \"Illegal App name: '{$appName}\",\n  [AppError.DUPLICATE_APP]:\n    \"Firebase App named '{$appName}' already exists with different options or config\",\n  [AppError.APP_DELETED]: \"Firebase App named '{$appName}' already deleted\",\n  [AppError.NO_OPTIONS]:\n    'Need to provide options, when not being deployed to hosting via source.',\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$appName}() takes either no argument or a ' +\n    'Firebase App instance.',\n  [AppError.INVALID_LOG_ARGUMENT]:\n    'First argument to `onLog` must be null or a function.',\n  [AppError.IDB_OPEN]:\n    'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_GET]:\n    'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_WRITE]:\n    'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_DELETE]:\n    'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.'\n};\n\ninterface ErrorParams {\n  [AppError.NO_APP]: { appName: string };\n  [AppError.BAD_APP_NAME]: { appName: string };\n  [AppError.DUPLICATE_APP]: { appName: string };\n  [AppError.APP_DELETED]: { appName: string };\n  [AppError.INVALID_APP_ARGUMENT]: { appName: string };\n  [AppError.IDB_OPEN]: { originalErrorMessage?: string };\n  [AppError.IDB_GET]: { originalErrorMessage?: string };\n  [AppError.IDB_WRITE]: { originalErrorMessage?: string };\n  [AppError.IDB_DELETE]: { originalErrorMessage?: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<AppError, ErrorParams>(\n  'app',\n  'Firebase',\n  ERRORS\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport {\n  ComponentContainer,\n  Component,\n  ComponentType\n} from '@firebase/component';\nimport { ERROR_FACTORY, AppError } from './errors';\n\nexport class FirebaseAppImpl implements FirebaseApp {\n  private readonly _options: FirebaseOptions;\n  private readonly _name: string;\n  /**\n   * Original config values passed in as a constructor parameter.\n   * It is only used to compare with another config object to support idempotent initializeApp().\n   *\n   * Updating automaticDataCollectionEnabled on the App instance will not change its value in _config.\n   */\n  private readonly _config: Required<FirebaseAppSettings>;\n  private _automaticDataCollectionEnabled: boolean;\n  private _isDeleted = false;\n  private readonly _container: ComponentContainer;\n\n  constructor(\n    options: FirebaseOptions,\n    config: Required<FirebaseAppSettings>,\n    container: ComponentContainer\n  ) {\n    this._options = { ...options };\n    this._config = { ...config };\n    this._name = config.name;\n    this._automaticDataCollectionEnabled =\n      config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(\n      new Component('app', () => this, ComponentType.PUBLIC)\n    );\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    this.checkDestroyed();\n    return this._automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val: boolean) {\n    this.checkDestroyed();\n    this._automaticDataCollectionEnabled = val;\n  }\n\n  get name(): string {\n    this.checkDestroyed();\n    return this._name;\n  }\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed();\n    return this._options;\n  }\n\n  get config(): Required<FirebaseAppSettings> {\n    this.checkDestroyed();\n    return this._config;\n  }\n\n  get container(): ComponentContainer {\n    return this._container;\n  }\n\n  get isDeleted(): boolean {\n    return this._isDeleted;\n  }\n\n  set isDeleted(val: boolean) {\n    this._isDeleted = val;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  private checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.APP_DELETED, { appName: this._name });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport { DEFAULT_ENTRY_NAME, PLATFORM_LOG_STRING } from './constants';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport {\n  ComponentContainer,\n  Component,\n  Name,\n  ComponentType\n} from '@firebase/component';\nimport { version } from '../../firebase/package.json';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { _apps, _components, _registerComponent } from './internal';\nimport { logger } from './logger';\nimport {\n  LogLevelString,\n  setLogLevel as setLogLevelImpl,\n  LogCallback,\n  LogOptions,\n  setUserLogHandler\n} from '@firebase/logger';\nimport { deepEqual, getDefaultAppConfig } from '@firebase/util';\n\nexport { FirebaseError } from '@firebase/util';\n\n/**\n * The current SDK version.\n *\n * @public\n */\nexport const SDK_VERSION = version;\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseApp} instance.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize default app\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeApp({\n *   apiKey: \"AIza....\",                             // Auth / General Use\n *   authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *   databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *   storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *   messagingSenderId: \"123456789\"                  // Cloud Messaging\n * });\n * ```\n *\n * @example\n * ```javascript\n *\n * // Initialize another app\n * const otherApp = initializeApp({\n *   databaseURL: \"https://<OTHER_DATABASE_NAME>.firebaseio.com\",\n *   storageBucket: \"<OTHER_STORAGE_BUCKET>.appspot.com\"\n * }, \"otherApp\");\n * ```\n *\n * @param options - Options to configure the app's services.\n * @param name - Optional name of the app to initialize. If no name\n *   is provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The initialized app.\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  name?: string\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @param options - Options to configure the app's services.\n * @param config - FirebaseApp Configuration\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  config?: FirebaseAppSettings\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @public\n */\nexport function initializeApp(): FirebaseApp;\nexport function initializeApp(\n  _options?: FirebaseOptions,\n  rawConfig = {}\n): FirebaseApp {\n  let options = _options;\n\n  if (typeof rawConfig !== 'object') {\n    const name = rawConfig;\n    rawConfig = { name };\n  }\n\n  const config: Required<FirebaseAppSettings> = {\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: false,\n    ...rawConfig\n  };\n  const name = config.name;\n\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(AppError.BAD_APP_NAME, {\n      appName: String(name)\n    });\n  }\n\n  options ||= getDefaultAppConfig();\n\n  if (!options) {\n    throw ERROR_FACTORY.create(AppError.NO_OPTIONS);\n  }\n\n  const existingApp = _apps.get(name) as FirebaseAppImpl;\n  if (existingApp) {\n    // return the existing app if options and config deep equal the ones in the existing app.\n    if (\n      deepEqual(options, existingApp.options) &&\n      deepEqual(config, existingApp.config)\n    ) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(AppError.DUPLICATE_APP, { appName: name });\n    }\n  }\n\n  const container = new ComponentContainer(name);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseAppImpl(options, config, container);\n\n  _apps.set(name, newApp);\n\n  return newApp;\n}\n\n/**\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\n *\n * When called with no arguments, the default app is returned. When an app name\n * is provided, the app corresponding to that name is returned.\n *\n * An exception is thrown if the app being retrieved has not yet been\n * initialized.\n *\n * @example\n * ```javascript\n * // Return the default app\n * const app = getApp();\n * ```\n *\n * @example\n * ```javascript\n * // Return a named app\n * const otherApp = getApp(\"otherApp\");\n * ```\n *\n * @param name - Optional name of the app to return. If no name is\n *   provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The app corresponding to the provided app name.\n *   If no app name is provided, the default app is returned.\n *\n * @public\n */\nexport function getApp(name: string = DEFAULT_ENTRY_NAME): FirebaseApp {\n  const app = _apps.get(name);\n  if (!app && name === DEFAULT_ENTRY_NAME && getDefaultAppConfig()) {\n    return initializeApp();\n  }\n  if (!app) {\n    throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n  }\n\n  return app;\n}\n\n/**\n * A (read-only) array of all initialized apps.\n * @public\n */\nexport function getApps(): FirebaseApp[] {\n  return Array.from(_apps.values());\n}\n\n/**\n * Renders this app unusable and frees the resources of all associated\n * services.\n *\n * @example\n * ```javascript\n * deleteApp(app)\n *   .then(function() {\n *     console.log(\"App deleted successfully\");\n *   })\n *   .catch(function(error) {\n *     console.log(\"Error deleting app:\", error);\n *   });\n * ```\n *\n * @public\n */\nexport async function deleteApp(app: FirebaseApp): Promise<void> {\n  const name = app.name;\n  if (_apps.has(name)) {\n    _apps.delete(name);\n    await Promise.all(\n      (app as FirebaseAppImpl).container\n        .getProviders()\n        .map(provider => provider.delete())\n    );\n    (app as FirebaseAppImpl).isDeleted = true;\n  }\n}\n\n/**\n * Registers a library's name and version for platform logging purposes.\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\n * @param version - Current version of that library.\n * @param variant - Bundle variant, e.g., node, rn, etc.\n *\n * @public\n */\nexport function registerVersion(\n  libraryKeyOrName: string,\n  version: string,\n  variant?: string\n): void {\n  // TODO: We can use this check to whitelist strings when/if we set up\n  // a good whitelist system.\n  let library = PLATFORM_LOG_STRING[libraryKeyOrName] ?? libraryKeyOrName;\n  if (variant) {\n    library += `-${variant}`;\n  }\n  const libraryMismatch = library.match(/\\s|\\//);\n  const versionMismatch = version.match(/\\s|\\//);\n  if (libraryMismatch || versionMismatch) {\n    const warning = [\n      `Unable to register library \"${library}\" with version \"${version}\":`\n    ];\n    if (libraryMismatch) {\n      warning.push(\n        `library name \"${library}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n    if (versionMismatch) {\n      warning.push(\n        `version name \"${version}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    logger.warn(warning.join(' '));\n    return;\n  }\n  _registerComponent(\n    new Component(\n      `${library}-version` as Name,\n      () => ({ library, version }),\n      ComponentType.VERSION\n    )\n  );\n}\n\n/**\n * Sets log handler for all Firebase SDKs.\n * @param logCallback - An optional custom log handler that executes user code whenever\n * the Firebase SDK makes a logging call.\n *\n * @public\n */\nexport function onLog(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(AppError.INVALID_LOG_ARGUMENT);\n  }\n  setUserLogHandler(logCallback, options);\n}\n\n/**\n * Sets log level for all Firebase SDKs.\n *\n * All of the log types above the current log level are captured (i.e. if\n * you set the log level to `info`, errors are logged, but `debug` and\n * `verbose` logs are not).\n *\n * @public\n */\nexport function setLogLevel(logLevel: LogLevelString): void {\n  setLogLevelImpl(logLevel);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { DBSchema, openDB, IDBPDatabase } from 'idb';\nimport { AppError, ERROR_FACTORY } from './errors';\nimport { FirebaseApp } from './public-types';\nimport { HeartbeatsInIndexedDB } from './types';\nimport { logger } from './logger';\n\nconst DB_NAME = 'firebase-heartbeat-database';\nconst DB_VERSION = 1;\nconst STORE_NAME = 'firebase-heartbeat-store';\n\ninterface AppDB extends DBSchema {\n  'firebase-heartbeat-store': {\n    key: string;\n    value: HeartbeatsInIndexedDB;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<AppDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<AppDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB<AppDB>(DB_NAME, DB_VERSION, {\n      upgrade: (db, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            db.createObjectStore(STORE_NAME);\n        }\n      }\n    }).catch(e => {\n      throw ERROR_FACTORY.create(AppError.IDB_OPEN, {\n        originalErrorMessage: e.message\n      });\n    });\n  }\n  return dbPromise;\n}\n\nexport async function readHeartbeatsFromIndexedDB(\n  app: FirebaseApp\n): Promise<HeartbeatsInIndexedDB | undefined> {\n  try {\n    const db = await getDbPromise();\n    const result = await db\n      .transaction(STORE_NAME)\n      .objectStore(STORE_NAME)\n      .get(computeKey(app));\n    return result;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_GET, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nexport async function writeHeartbeatsToIndexedDB(\n  app: FirebaseApp,\n  heartbeatObject: HeartbeatsInIndexedDB\n): Promise<void> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME, 'readwrite');\n    const objectStore = tx.objectStore(STORE_NAME);\n    await objectStore.put(heartbeatObject, computeKey(app));\n    await tx.done;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_WRITE, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nfunction computeKey(app: FirebaseApp): string {\n  return `${app.name}!${app.options.appId}`;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ComponentContainer } from '@firebase/component';\nimport {\n  base64urlEncodeWithoutPadding,\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\nimport {\n  readHeartbeatsFromIndexedDB,\n  writeHeartbeatsToIndexedDB\n} from './indexeddb';\nimport { FirebaseApp } from './public-types';\nimport {\n  HeartbeatsByUserAgent,\n  HeartbeatService,\n  HeartbeatsInIndexedDB,\n  HeartbeatStorage,\n  SingleDateHeartbeat\n} from './types';\n\nconst MAX_HEADER_BYTES = 1024;\n// 30 days\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\n\nexport class HeartbeatServiceImpl implements HeartbeatService {\n  /**\n   * The persistence layer for heartbeats\n   * Leave public for easier testing.\n   */\n  _storage: HeartbeatStorageImpl;\n\n  /**\n   * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\n   * the header string.\n   * Stores one record per date. This will be consolidated into the standard\n   * format of one record per user agent string before being sent as a header.\n   * Populated from indexedDB when the controller is instantiated and should\n   * be kept in sync with indexedDB.\n   * Leave public for easier testing.\n   */\n  _heartbeatsCache: HeartbeatsInIndexedDB | null = null;\n\n  /**\n   * the initialization promise for populating heartbeatCache.\n   * If getHeartbeatsHeader() is called before the promise resolves\n   * (hearbeatsCache == null), it should wait for this promise\n   * Leave public for easier testing.\n   */\n  _heartbeatsCachePromise: Promise<HeartbeatsInIndexedDB>;\n  constructor(private readonly container: ComponentContainer) {\n    const app = this.container.getProvider('app').getImmediate();\n    this._storage = new HeartbeatStorageImpl(app);\n    this._heartbeatsCachePromise = this._storage.read().then(result => {\n      this._heartbeatsCache = result;\n      return result;\n    });\n  }\n\n  /**\n   * Called to report a heartbeat. The function will generate\n   * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\n   * to IndexedDB.\n   * Note that we only store one heartbeat per day. So if a heartbeat for today is\n   * already logged, subsequent calls to this function in the same day will be ignored.\n   */\n  async triggerHeartbeat(): Promise<void> {\n    const platformLogger = this.container\n      .getProvider('platform-logger')\n      .getImmediate();\n\n    // This is the \"Firebase user agent\" string from the platform logger\n    // service, not the browser user agent.\n    const agent = platformLogger.getPlatformInfoString();\n    const date = getUTCDateString();\n    if (this._heartbeatsCache === null) {\n      this._heartbeatsCache = await this._heartbeatsCachePromise;\n    }\n    // Do not store a heartbeat if one is already stored for this day\n    // or if a header has already been sent today.\n    if (\n      this._heartbeatsCache.lastSentHeartbeatDate === date ||\n      this._heartbeatsCache.heartbeats.some(\n        singleDateHeartbeat => singleDateHeartbeat.date === date\n      )\n    ) {\n      return;\n    } else {\n      // There is no entry for this date. Create one.\n      this._heartbeatsCache.heartbeats.push({ date, agent });\n    }\n    // Remove entries older than 30 days.\n    this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter(\n      singleDateHeartbeat => {\n        const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\n        const now = Date.now();\n        return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\n      }\n    );\n    return this._storage.overwrite(this._heartbeatsCache);\n  }\n\n  /**\n   * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\n   * It also clears all heartbeats from memory as well as in IndexedDB.\n   *\n   * NOTE: Consuming product SDKs should not send the header if this method\n   * returns an empty string.\n   */\n  async getHeartbeatsHeader(): Promise<string> {\n    if (this._heartbeatsCache === null) {\n      await this._heartbeatsCachePromise;\n    }\n    // If it's still null or the array is empty, there is no data to send.\n    if (\n      this._heartbeatsCache === null ||\n      this._heartbeatsCache.heartbeats.length === 0\n    ) {\n      return '';\n    }\n    const date = getUTCDateString();\n    // Extract as many heartbeats from the cache as will fit under the size limit.\n    const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(\n      this._heartbeatsCache.heartbeats\n    );\n    const headerString = base64urlEncodeWithoutPadding(\n      JSON.stringify({ version: 2, heartbeats: heartbeatsToSend })\n    );\n    // Store last sent date to prevent another being logged/sent for the same day.\n    this._heartbeatsCache.lastSentHeartbeatDate = date;\n    if (unsentEntries.length > 0) {\n      // Store any unsent entries if they exist.\n      this._heartbeatsCache.heartbeats = unsentEntries;\n      // This seems more likely than emptying the array (below) to lead to some odd state\n      // since the cache isn't empty and this will be called again on the next request,\n      // and is probably safest if we await it.\n      await this._storage.overwrite(this._heartbeatsCache);\n    } else {\n      this._heartbeatsCache.heartbeats = [];\n      // Do not wait for this, to reduce latency.\n      void this._storage.overwrite(this._heartbeatsCache);\n    }\n    return headerString;\n  }\n}\n\nfunction getUTCDateString(): string {\n  const today = new Date();\n  // Returns date format 'YYYY-MM-DD'\n  return today.toISOString().substring(0, 10);\n}\n\nexport function extractHeartbeatsForHeader(\n  heartbeatsCache: SingleDateHeartbeat[],\n  maxSize = MAX_HEADER_BYTES\n): {\n  heartbeatsToSend: HeartbeatsByUserAgent[];\n  unsentEntries: SingleDateHeartbeat[];\n} {\n  // Heartbeats grouped by user agent in the standard format to be sent in\n  // the header.\n  const heartbeatsToSend: HeartbeatsByUserAgent[] = [];\n  // Single date format heartbeats that are not sent.\n  let unsentEntries = heartbeatsCache.slice();\n  for (const singleDateHeartbeat of heartbeatsCache) {\n    // Look for an existing entry with the same user agent.\n    const heartbeatEntry = heartbeatsToSend.find(\n      hb => hb.agent === singleDateHeartbeat.agent\n    );\n    if (!heartbeatEntry) {\n      // If no entry for this user agent exists, create one.\n      heartbeatsToSend.push({\n        agent: singleDateHeartbeat.agent,\n        dates: [singleDateHeartbeat.date]\n      });\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        // If the header would exceed max size, remove the added heartbeat\n        // entry and stop adding to the header.\n        heartbeatsToSend.pop();\n        break;\n      }\n    } else {\n      heartbeatEntry.dates.push(singleDateHeartbeat.date);\n      // If the header would exceed max size, remove the added date\n      // and stop adding to the header.\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        heartbeatEntry.dates.pop();\n        break;\n      }\n    }\n    // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n    // quota and the loop breaks early.)\n    unsentEntries = unsentEntries.slice(1);\n  }\n  return {\n    heartbeatsToSend,\n    unsentEntries\n  };\n}\n\nexport class HeartbeatStorageImpl implements HeartbeatStorage {\n  private _canUseIndexedDBPromise: Promise<boolean>;\n  constructor(public app: FirebaseApp) {\n    this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n  }\n  async runIndexedDBEnvironmentCheck(): Promise<boolean> {\n    if (!isIndexedDBAvailable()) {\n      return false;\n    } else {\n      return validateIndexedDBOpenable()\n        .then(() => true)\n        .catch(() => false);\n    }\n  }\n  /**\n   * Read all heartbeats.\n   */\n  async read(): Promise<HeartbeatsInIndexedDB> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return { heartbeats: [] };\n    } else {\n      const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\n      return idbHeartbeatObject || { heartbeats: [] };\n    }\n  }\n  // overwrite the storage with the provided heartbeats\n  async overwrite(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: heartbeatsObject.heartbeats\n      });\n    }\n  }\n  // add heartbeats\n  async add(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: [\n          ...existingHeartbeatsObject.heartbeats,\n          ...heartbeatsObject.heartbeats\n        ]\n      });\n    }\n  }\n}\n\n/**\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\n * in a platform logging header JSON object, stringified, and converted\n * to base 64.\n */\nexport function countBytes(heartbeatsCache: HeartbeatsByUserAgent[]): number {\n  // base64 has a restricted set of characters, all of which should be 1 byte.\n  return base64urlEncodeWithoutPadding(\n    // heartbeatsCache wrapper properties\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })\n  ).length;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ComponentType } from '@firebase/component';\nimport { PlatformLoggerServiceImpl } from './platformLoggerService';\nimport { name, version } from '../package.json';\nimport { _registerComponent } from './internal';\nimport { registerVersion } from './api';\nimport { HeartbeatServiceImpl } from './heartbeatService';\n\nexport function registerCoreComponents(variant?: string): void {\n  _registerComponent(\n    new Component(\n      'platform-logger',\n      container => new PlatformLoggerServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n  _registerComponent(\n    new Component(\n      'heartbeat',\n      container => new HeartbeatServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n\n  // Register `app` package.\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n  // Register platform SDK identifier (no version).\n  registerVersion('fire-js', '');\n}\n","/**\n * Firebase App\n *\n * @remarks This package coordinates the communication between the different Firebase components\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerCoreComponents } from './registerCoreComponents';\n\nexport * from './api';\nexport * from './internal';\nexport * from './public-types';\n\nregisterCoreComponents('__RUNTIME_ENV__');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  InstantiationMode,\n  InstanceFactory,\n  ComponentType,\n  Dictionary,\n  Name,\n  onInstanceCreatedCallback\n} from './types';\n\n/**\n * Component for service name T, e.g. `auth`, `auth-internal`\n */\nexport class Component<T extends Name = Name> {\n  multipleInstances = false;\n  /**\n   * Properties to be added to the service namespace\n   */\n  serviceProps: Dictionary = {};\n\n  instantiationMode = InstantiationMode.LAZY;\n\n  onInstanceCreated: onInstanceCreatedCallback<T> | null = null;\n\n  /**\n   *\n   * @param name The public service name, e.g. app, auth, firestore, database\n   * @param instanceFactory Service factory responsible for creating the public interface\n   * @param type whether the service provided by the component is public or private\n   */\n  constructor(\n    readonly name: T,\n    readonly instanceFactory: InstanceFactory<T>,\n    readonly type: ComponentType\n  ) {}\n\n  setInstantiationMode(mode: InstantiationMode): this {\n    this.instantiationMode = mode;\n    return this;\n  }\n\n  setMultipleInstances(multipleInstances: boolean): this {\n    this.multipleInstances = multipleInstances;\n    return this;\n  }\n\n  setServiceProps(props: Dictionary): this {\n    this.serviceProps = props;\n    return this;\n  }\n\n  setInstanceCreatedCallback(callback: onInstanceCreatedCallback<T>): this {\n    this.onInstanceCreated = callback;\n    return this;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\nimport { ComponentContainer } from './component_container';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport {\n  InitializeOptions,\n  InstantiationMode,\n  Name,\n  NameServiceMapping,\n  OnInitCallBack\n} from './types';\nimport { Component } from './component';\n\n/**\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\n * NameServiceMapping[T] is an alias for the type of the instance\n */\nexport class Provider<T extends Name> {\n  private component: Component<T> | null = null;\n  private readonly instances: Map<string, NameServiceMapping[T]> = new Map();\n  private readonly instancesDeferred: Map<\n    string,\n    Deferred<NameServiceMapping[T]>\n  > = new Map();\n  private readonly instancesOptions: Map<string, Record<string, unknown>> =\n    new Map();\n  private onInitCallbacks: Map<string, Set<OnInitCallBack<T>>> = new Map();\n\n  constructor(\n    private readonly name: T,\n    private readonly container: ComponentContainer\n  ) {}\n\n  /**\n   * @param identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   */\n  get(identifier?: string): Promise<NameServiceMapping[T]> {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n\n    if (!this.instancesDeferred.has(normalizedIdentifier)) {\n      const deferred = new Deferred<NameServiceMapping[T]>();\n      this.instancesDeferred.set(normalizedIdentifier, deferred);\n\n      if (\n        this.isInitialized(normalizedIdentifier) ||\n        this.shouldAutoInitialize()\n      ) {\n        // initialize the service if it can be auto-initialized\n        try {\n          const instance = this.getOrInitializeService({\n            instanceIdentifier: normalizedIdentifier\n          });\n          if (instance) {\n            deferred.resolve(instance);\n          }\n        } catch (e) {\n          // when the instance factory throws an exception during get(), it should not cause\n          // a fatal error. We just return the unresolved promise in this case.\n        }\n      }\n    }\n\n    return this.instancesDeferred.get(normalizedIdentifier)!.promise;\n  }\n\n  /**\n   *\n   * @param options.identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   * @param options.optional If optional is false or not provided, the method throws an error when\n   * the service is not immediately available.\n   * If optional is true, the method returns null if the service is not immediately available.\n   */\n  getImmediate(options: {\n    identifier?: string;\n    optional: true;\n  }): NameServiceMapping[T] | null;\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: false;\n  }): NameServiceMapping[T];\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: boolean;\n  }): NameServiceMapping[T] | null {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      options?.identifier\n    );\n    const optional = options?.optional ?? false;\n\n    if (\n      this.isInitialized(normalizedIdentifier) ||\n      this.shouldAutoInitialize()\n    ) {\n      try {\n        return this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        });\n      } catch (e) {\n        if (optional) {\n          return null;\n        } else {\n          throw e;\n        }\n      }\n    } else {\n      // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\n      if (optional) {\n        return null;\n      } else {\n        throw Error(`Service ${this.name} is not available`);\n      }\n    }\n  }\n\n  getComponent(): Component<T> | null {\n    return this.component;\n  }\n\n  setComponent(component: Component<T>): void {\n    if (component.name !== this.name) {\n      throw Error(\n        `Mismatching Component ${component.name} for Provider ${this.name}.`\n      );\n    }\n\n    if (this.component) {\n      throw Error(`Component for ${this.name} has already been provided`);\n    }\n\n    this.component = component;\n\n    // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\n    if (!this.shouldAutoInitialize()) {\n      return;\n    }\n\n    // if the service is eager, initialize the default instance\n    if (isComponentEager(component)) {\n      try {\n        this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\n      } catch (e) {\n        // when the instance factory for an eager Component throws an exception during the eager\n        // initialization, it should not cause a fatal error.\n        // TODO: Investigate if we need to make it configurable, because some component may want to cause\n        // a fatal error in this case?\n      }\n    }\n\n    // Create service instances for the pending promises and resolve them\n    // NOTE: if this.multipleInstances is false, only the default instance will be created\n    // and all promises with resolve with it regardless of the identifier.\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n\n      try {\n        // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\n        const instance = this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        })!;\n        instanceDeferred.resolve(instance);\n      } catch (e) {\n        // when the instance factory throws an exception, it should not cause\n        // a fatal error. We just leave the promise unresolved.\n      }\n    }\n  }\n\n  clearInstance(identifier: string = DEFAULT_ENTRY_NAME): void {\n    this.instancesDeferred.delete(identifier);\n    this.instancesOptions.delete(identifier);\n    this.instances.delete(identifier);\n  }\n\n  // app.delete() will call this method on every provider to delete the services\n  // TODO: should we mark the provider as deleted?\n  async delete(): Promise<void> {\n    const services = Array.from(this.instances.values());\n\n    await Promise.all([\n      ...services\n        .filter(service => 'INTERNAL' in service) // legacy services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any).INTERNAL!.delete()),\n      ...services\n        .filter(service => '_delete' in service) // modularized services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any)._delete())\n    ]);\n  }\n\n  isComponentSet(): boolean {\n    return this.component != null;\n  }\n\n  isInitialized(identifier: string = DEFAULT_ENTRY_NAME): boolean {\n    return this.instances.has(identifier);\n  }\n\n  getOptions(identifier: string = DEFAULT_ENTRY_NAME): Record<string, unknown> {\n    return this.instancesOptions.get(identifier) || {};\n  }\n\n  initialize(opts: InitializeOptions = {}): NameServiceMapping[T] {\n    const { options = {} } = opts;\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      opts.instanceIdentifier\n    );\n    if (this.isInitialized(normalizedIdentifier)) {\n      throw Error(\n        `${this.name}(${normalizedIdentifier}) has already been initialized`\n      );\n    }\n\n    if (!this.isComponentSet()) {\n      throw Error(`Component ${this.name} has not been registered yet`);\n    }\n\n    const instance = this.getOrInitializeService({\n      instanceIdentifier: normalizedIdentifier,\n      options\n    })!;\n\n    // resolve any pending promise waiting for the service instance\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedDeferredIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n      if (normalizedIdentifier === normalizedDeferredIdentifier) {\n        instanceDeferred.resolve(instance);\n      }\n    }\n\n    return instance;\n  }\n\n  /**\n   *\n   * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\n   * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\n   *\n   * @param identifier An optional instance identifier\n   * @returns a function to unregister the callback\n   */\n  onInit(callback: OnInitCallBack<T>, identifier?: string): () => void {\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n    const existingCallbacks =\n      this.onInitCallbacks.get(normalizedIdentifier) ??\n      new Set<OnInitCallBack<T>>();\n    existingCallbacks.add(callback);\n    this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\n\n    const existingInstance = this.instances.get(normalizedIdentifier);\n    if (existingInstance) {\n      callback(existingInstance, normalizedIdentifier);\n    }\n\n    return () => {\n      existingCallbacks.delete(callback);\n    };\n  }\n\n  /**\n   * Invoke onInit callbacks synchronously\n   * @param instance the service instance`\n   */\n  private invokeOnInitCallbacks(\n    instance: NameServiceMapping[T],\n    identifier: string\n  ): void {\n    const callbacks = this.onInitCallbacks.get(identifier);\n    if (!callbacks) {\n      return;\n    }\n    for (const callback of callbacks) {\n      try {\n        callback(instance, identifier);\n      } catch {\n        // ignore errors in the onInit callback\n      }\n    }\n  }\n\n  private getOrInitializeService({\n    instanceIdentifier,\n    options = {}\n  }: {\n    instanceIdentifier: string;\n    options?: Record<string, unknown>;\n  }): NameServiceMapping[T] | null {\n    let instance = this.instances.get(instanceIdentifier);\n    if (!instance && this.component) {\n      instance = this.component.instanceFactory(this.container, {\n        instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\n        options\n      });\n      this.instances.set(instanceIdentifier, instance);\n      this.instancesOptions.set(instanceIdentifier, options);\n\n      /**\n       * Invoke onInit listeners.\n       * Note this.component.onInstanceCreated is different, which is used by the component creator,\n       * while onInit listeners are registered by consumers of the provider.\n       */\n      this.invokeOnInitCallbacks(instance, instanceIdentifier);\n\n      /**\n       * Order is important\n       * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\n       * makes `isInitialized()` return true.\n       */\n      if (this.component.onInstanceCreated) {\n        try {\n          this.component.onInstanceCreated(\n            this.container,\n            instanceIdentifier,\n            instance\n          );\n        } catch {\n          // ignore errors in the onInstanceCreatedCallback\n        }\n      }\n    }\n\n    return instance || null;\n  }\n\n  private normalizeInstanceIdentifier(\n    identifier: string = DEFAULT_ENTRY_NAME\n  ): string {\n    if (this.component) {\n      return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\n    } else {\n      return identifier; // assume multiple instances are supported before the component is provided.\n    }\n  }\n\n  private shouldAutoInitialize(): boolean {\n    return (\n      !!this.component &&\n      this.component.instantiationMode !== InstantiationMode.EXPLICIT\n    );\n  }\n}\n\n// undefined should be passed to the service factory for the default instance\nfunction normalizeIdentifierForFactory(identifier: string): string | undefined {\n  return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\n}\n\nfunction isComponentEager<T extends Name>(component: Component<T>): boolean {\n  return component.instantiationMode === InstantiationMode.EAGER;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Provider } from './provider';\nimport { Component } from './component';\nimport { Name } from './types';\n\n/**\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\n */\nexport class ComponentContainer {\n  private readonly providers = new Map<string, Provider<Name>>();\n\n  constructor(private readonly name: string) {}\n\n  /**\n   *\n   * @param component Component being added\n   * @param overwrite When a component with the same name has already been registered,\n   * if overwrite is true: overwrite the existing component with the new component and create a new\n   * provider with the new component. It can be useful in tests where you want to use different mocks\n   * for different tests.\n   * if overwrite is false: throw an exception\n   */\n  addComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      throw new Error(\n        `Component ${component.name} has already been registered with ${this.name}`\n      );\n    }\n\n    provider.setComponent(component);\n  }\n\n  addOrOverwriteComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      // delete the existing provider from the container, so we can register the new component\n      this.providers.delete(component.name);\n    }\n\n    this.addComponent(component);\n  }\n\n  /**\n   * getProvider provides a type safe interface where it can only be called with a field name\n   * present in NameServiceMapping interface.\n   *\n   * Firebase SDKs providing services should extend NameServiceMapping interface to register\n   * themselves.\n   */\n  getProvider<T extends Name>(name: T): Provider<T> {\n    if (this.providers.has(name)) {\n      return this.providers.get(name) as unknown as Provider<T>;\n    }\n\n    // create a Provider for a service that hasn't registered with Firebase\n    const provider = new Provider<T>(name, this);\n    this.providers.set(name, provider as unknown as Provider<Name>);\n\n    return provider as Provider<T>;\n  }\n\n  getProviders(): Array<Provider<Name>> {\n    return Array.from(this.providers.values());\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerVersion } from '@firebase/app';\nimport { name, version } from '../package.json';\n\nregisterVersion(name, version, 'app');\nexport * from '@firebase/app';\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\n\nimport { CONFIG_STORAGE_BUCKET_KEY } from './constants';\n\n/**\n * An error returned by the Firebase Storage SDK.\n * @public\n */\nexport class StorageError extends FirebaseError {\n  private readonly _baseMessage: string;\n  /**\n   * Stores custom error data unique to the `StorageError`.\n   */\n  customData: { serverResponse: string | null } = { serverResponse: null };\n\n  /**\n   * @param code - A `StorageErrorCode` string to be prefixed with 'storage/' and\n   *  added to the end of the message.\n   * @param message  - Error message.\n   * @param status_ - Corresponding HTTP Status Code\n   */\n  constructor(code: StorageErrorCode, message: string, private status_ = 0) {\n    super(\n      prependCode(code),\n      `Firebase Storage: ${message} (${prependCode(code)})`\n    );\n    this._baseMessage = this.message;\n    // Without this, `instanceof StorageError`, in tests for example,\n    // returns false.\n    Object.setPrototypeOf(this, StorageError.prototype);\n  }\n\n  get status(): number {\n    return this.status_;\n  }\n\n  set status(status: number) {\n    this.status_ = status;\n  }\n\n  /**\n   * Compares a `StorageErrorCode` against this error's code, filtering out the prefix.\n   */\n  _codeEquals(code: StorageErrorCode): boolean {\n    return prependCode(code) === this.code;\n  }\n\n  /**\n   * Optional response message that was added by the server.\n   */\n  get serverResponse(): null | string {\n    return this.customData.serverResponse;\n  }\n\n  set serverResponse(serverResponse: string | null) {\n    this.customData.serverResponse = serverResponse;\n    if (this.customData.serverResponse) {\n      this.message = `${this._baseMessage}\\n${this.customData.serverResponse}`;\n    } else {\n      this.message = this._baseMessage;\n    }\n  }\n}\n\nexport const errors = {};\n\n/**\n * @public\n * Error codes that can be attached to `StorageError` objects.\n */\nexport enum StorageErrorCode {\n  // Shared between all platforms\n  UNKNOWN = 'unknown',\n  OBJECT_NOT_FOUND = 'object-not-found',\n  BUCKET_NOT_FOUND = 'bucket-not-found',\n  PROJECT_NOT_FOUND = 'project-not-found',\n  QUOTA_EXCEEDED = 'quota-exceeded',\n  UNAUTHENTICATED = 'unauthenticated',\n  UNAUTHORIZED = 'unauthorized',\n  UNAUTHORIZED_APP = 'unauthorized-app',\n  RETRY_LIMIT_EXCEEDED = 'retry-limit-exceeded',\n  INVALID_CHECKSUM = 'invalid-checksum',\n  CANCELED = 'canceled',\n  // JS specific\n  INVALID_EVENT_NAME = 'invalid-event-name',\n  INVALID_URL = 'invalid-url',\n  INVALID_DEFAULT_BUCKET = 'invalid-default-bucket',\n  NO_DEFAULT_BUCKET = 'no-default-bucket',\n  CANNOT_SLICE_BLOB = 'cannot-slice-blob',\n  SERVER_FILE_WRONG_SIZE = 'server-file-wrong-size',\n  NO_DOWNLOAD_URL = 'no-download-url',\n  INVALID_ARGUMENT = 'invalid-argument',\n  INVALID_ARGUMENT_COUNT = 'invalid-argument-count',\n  APP_DELETED = 'app-deleted',\n  INVALID_ROOT_OPERATION = 'invalid-root-operation',\n  INVALID_FORMAT = 'invalid-format',\n  INTERNAL_ERROR = 'internal-error',\n  UNSUPPORTED_ENVIRONMENT = 'unsupported-environment'\n}\n\nexport function prependCode(code: StorageErrorCode): string {\n  return 'storage/' + code;\n}\n\nexport function unknown(): StorageError {\n  const message =\n    'An unknown error occurred, please check the error payload for ' +\n    'server response.';\n  return new StorageError(StorageErrorCode.UNKNOWN, message);\n}\n\nexport function objectNotFound(path: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.OBJECT_NOT_FOUND,\n    \"Object '\" + path + \"' does not exist.\"\n  );\n}\n\nexport function bucketNotFound(bucket: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.BUCKET_NOT_FOUND,\n    \"Bucket '\" + bucket + \"' does not exist.\"\n  );\n}\n\nexport function projectNotFound(project: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.PROJECT_NOT_FOUND,\n    \"Project '\" + project + \"' does not exist.\"\n  );\n}\n\nexport function quotaExceeded(bucket: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.QUOTA_EXCEEDED,\n    \"Quota for bucket '\" +\n      bucket +\n      \"' exceeded, please view quota on \" +\n      'https://firebase.google.com/pricing/.'\n  );\n}\n\nexport function unauthenticated(): StorageError {\n  const message =\n    'User is not authenticated, please authenticate using Firebase ' +\n    'Authentication and try again.';\n  return new StorageError(StorageErrorCode.UNAUTHENTICATED, message);\n}\n\nexport function unauthorizedApp(): StorageError {\n  return new StorageError(\n    StorageErrorCode.UNAUTHORIZED_APP,\n    'This app does not have permission to access Firebase Storage on this project.'\n  );\n}\n\nexport function unauthorized(path: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.UNAUTHORIZED,\n    \"User does not have permission to access '\" + path + \"'.\"\n  );\n}\n\nexport function retryLimitExceeded(): StorageError {\n  return new StorageError(\n    StorageErrorCode.RETRY_LIMIT_EXCEEDED,\n    'Max retry time for operation exceeded, please try again.'\n  );\n}\n\nexport function invalidChecksum(\n  path: string,\n  checksum: string,\n  calculated: string\n): StorageError {\n  return new StorageError(\n    StorageErrorCode.INVALID_CHECKSUM,\n    \"Uploaded/downloaded object '\" +\n      path +\n      \"' has checksum '\" +\n      checksum +\n      \"' which does not match '\" +\n      calculated +\n      \"'. Please retry the upload/download.\"\n  );\n}\n\nexport function canceled(): StorageError {\n  return new StorageError(\n    StorageErrorCode.CANCELED,\n    'User canceled the upload/download.'\n  );\n}\n\nexport function invalidEventName(name: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.INVALID_EVENT_NAME,\n    \"Invalid event name '\" + name + \"'.\"\n  );\n}\n\nexport function invalidUrl(url: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.INVALID_URL,\n    \"Invalid URL '\" + url + \"'.\"\n  );\n}\n\nexport function invalidDefaultBucket(bucket: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.INVALID_DEFAULT_BUCKET,\n    \"Invalid default bucket '\" + bucket + \"'.\"\n  );\n}\n\nexport function noDefaultBucket(): StorageError {\n  return new StorageError(\n    StorageErrorCode.NO_DEFAULT_BUCKET,\n    'No default bucket ' +\n      \"found. Did you set the '\" +\n      CONFIG_STORAGE_BUCKET_KEY +\n      \"' property when initializing the app?\"\n  );\n}\n\nexport function cannotSliceBlob(): StorageError {\n  return new StorageError(\n    StorageErrorCode.CANNOT_SLICE_BLOB,\n    'Cannot slice blob for upload. Please retry the upload.'\n  );\n}\n\nexport function serverFileWrongSize(): StorageError {\n  return new StorageError(\n    StorageErrorCode.SERVER_FILE_WRONG_SIZE,\n    'Server recorded incorrect upload file size, please retry the upload.'\n  );\n}\n\nexport function noDownloadURL(): StorageError {\n  return new StorageError(\n    StorageErrorCode.NO_DOWNLOAD_URL,\n    'The given file does not have any download URLs.'\n  );\n}\n\nexport function missingPolyFill(polyFill: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.UNSUPPORTED_ENVIRONMENT,\n    `${polyFill} is missing. Make sure to install the required polyfills. See https://firebase.google.com/docs/web/environments-js-sdk#polyfills for more information.`\n  );\n}\n\n/**\n * @internal\n */\nexport function invalidArgument(message: string): StorageError {\n  return new StorageError(StorageErrorCode.INVALID_ARGUMENT, message);\n}\n\nexport function invalidArgumentCount(\n  argMin: number,\n  argMax: number,\n  fnName: string,\n  real: number\n): StorageError {\n  let countPart;\n  let plural;\n  if (argMin === argMax) {\n    countPart = argMin;\n    plural = argMin === 1 ? 'argument' : 'arguments';\n  } else {\n    countPart = 'between ' + argMin + ' and ' + argMax;\n    plural = 'arguments';\n  }\n  return new StorageError(\n    StorageErrorCode.INVALID_ARGUMENT_COUNT,\n    'Invalid argument count in `' +\n      fnName +\n      '`: Expected ' +\n      countPart +\n      ' ' +\n      plural +\n      ', received ' +\n      real +\n      '.'\n  );\n}\n\nexport function appDeleted(): StorageError {\n  return new StorageError(\n    StorageErrorCode.APP_DELETED,\n    'The Firebase app was deleted.'\n  );\n}\n\n/**\n * @param name - The name of the operation that was invalid.\n *\n * @internal\n */\nexport function invalidRootOperation(name: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.INVALID_ROOT_OPERATION,\n    \"The operation '\" +\n      name +\n      \"' cannot be performed on a root reference, create a non-root \" +\n      \"reference using child, such as .child('file.png').\"\n  );\n}\n\n/**\n * @param format - The format that was not valid.\n * @param message - A message describing the format violation.\n */\nexport function invalidFormat(format: string, message: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.INVALID_FORMAT,\n    \"String does not match format '\" + format + \"': \" + message\n  );\n}\n\n/**\n * @param message - A message describing the internal error.\n */\nexport function unsupportedEnvironment(message: string): StorageError {\n  throw new StorageError(StorageErrorCode.UNSUPPORTED_ENVIRONMENT, message);\n}\n\n/**\n * @param message - A message describing the internal error.\n */\nexport function internalError(message: string): StorageError {\n  throw new StorageError(\n    StorageErrorCode.INTERNAL_ERROR,\n    'Internal error: ' + message\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Constants used in the Firebase Storage library.\n */\n\n/**\n * Domain name for firebase storage.\n */\nexport const DEFAULT_HOST = 'firebasestorage.googleapis.com';\n\n/**\n * The key in Firebase config json for the storage bucket.\n */\nexport const CONFIG_STORAGE_BUCKET_KEY = 'storageBucket';\n\n/**\n * 2 minutes\n *\n * The timeout for all operations except upload.\n */\nexport const DEFAULT_MAX_OPERATION_RETRY_TIME = 2 * 60 * 1000;\n\n/**\n * 10 minutes\n *\n * The timeout for upload.\n */\nexport const DEFAULT_MAX_UPLOAD_RETRY_TIME = 10 * 60 * 1000;\n\n/**\n * 1 second\n */\nexport const DEFAULT_MIN_SLEEP_TIME_MILLIS = 1000;\n\n/**\n * This is the value of Number.MIN_SAFE_INTEGER, which is not well supported\n * enough for us to use it directly.\n */\nexport const MIN_SAFE_INTEGER = -9007199254740991;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Functionality related to the parsing/composition of bucket/\n * object location.\n */\n\nimport { invalidDefaultBucket, invalidUrl } from './error';\nimport { DEFAULT_HOST } from './constants';\n\n/**\n * Firebase Storage location data.\n *\n * @internal\n */\nexport class Location {\n  private path_: string;\n\n  constructor(public readonly bucket: string, path: string) {\n    this.path_ = path;\n  }\n\n  get path(): string {\n    return this.path_;\n  }\n\n  get isRoot(): boolean {\n    return this.path.length === 0;\n  }\n\n  fullServerUrl(): string {\n    const encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\n  }\n\n  bucketOnlyServerUrl(): string {\n    const encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o';\n  }\n\n  static makeFromBucketSpec(bucketString: string, host: string): Location {\n    let bucketLocation;\n    try {\n      bucketLocation = Location.makeFromUrl(bucketString, host);\n    } catch (e) {\n      // Not valid URL, use as-is. This lets you put bare bucket names in\n      // config.\n      return new Location(bucketString, '');\n    }\n    if (bucketLocation.path === '') {\n      return bucketLocation;\n    } else {\n      throw invalidDefaultBucket(bucketString);\n    }\n  }\n\n  static makeFromUrl(url: string, host: string): Location {\n    let location: Location | null = null;\n    const bucketDomain = '([A-Za-z0-9.\\\\-_]+)';\n\n    function gsModify(loc: Location): void {\n      if (loc.path.charAt(loc.path.length - 1) === '/') {\n        loc.path_ = loc.path_.slice(0, -1);\n      }\n    }\n    const gsPath = '(/(.*))?$';\n    const gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\n    const gsIndices = { bucket: 1, path: 3 };\n\n    function httpModify(loc: Location): void {\n      loc.path_ = decodeURIComponent(loc.path);\n    }\n    const version = 'v[A-Za-z0-9_]+';\n    const firebaseStorageHost = host.replace(/[.]/g, '\\\\.');\n    const firebaseStoragePath = '(/([^?#]*).*)?$';\n    const firebaseStorageRegExp = new RegExp(\n      `^https?://${firebaseStorageHost}/${version}/b/${bucketDomain}/o${firebaseStoragePath}`,\n      'i'\n    );\n    const firebaseStorageIndices = { bucket: 1, path: 3 };\n\n    const cloudStorageHost =\n      host === DEFAULT_HOST\n        ? '(?:storage.googleapis.com|storage.cloud.google.com)'\n        : host;\n    const cloudStoragePath = '([^?#]*)';\n    const cloudStorageRegExp = new RegExp(\n      `^https?://${cloudStorageHost}/${bucketDomain}/${cloudStoragePath}`,\n      'i'\n    );\n    const cloudStorageIndices = { bucket: 1, path: 2 };\n\n    const groups = [\n      { regex: gsRegex, indices: gsIndices, postModify: gsModify },\n      {\n        regex: firebaseStorageRegExp,\n        indices: firebaseStorageIndices,\n        postModify: httpModify\n      },\n      {\n        regex: cloudStorageRegExp,\n        indices: cloudStorageIndices,\n        postModify: httpModify\n      }\n    ];\n    for (let i = 0; i < groups.length; i++) {\n      const group = groups[i];\n      const captures = group.regex.exec(url);\n      if (captures) {\n        const bucketValue = captures[group.indices.bucket];\n        let pathValue = captures[group.indices.path];\n        if (!pathValue) {\n          pathValue = '';\n        }\n        location = new Location(bucketValue, pathValue);\n        group.postModify(location);\n        break;\n      }\n    }\n    if (location == null) {\n      throw invalidUrl(url);\n    }\n    return location;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Network headers */\nexport type Headers = Record<string, string>;\n\n/** Response type exposed by the networking APIs. */\nexport type ConnectionType =\n  | string\n  | ArrayBuffer\n  | Blob\n  | NodeJS.ReadableStream;\n\n/**\n * A lightweight wrapper around XMLHttpRequest with a\n * goog.net.XhrIo-like interface.\n *\n * You can create a new connection by invoking `newTextConnection()`,\n * `newBytesConnection()` or `newStreamConnection()`.\n */\nexport interface Connection<T extends ConnectionType> {\n  /**\n   * Sends a request to the provided URL.\n   *\n   * This method never rejects its promise. In case of encountering an error,\n   * it sets an error code internally which can be accessed by calling\n   * getErrorCode() by callers.\n   */\n  send(\n    url: string,\n    method: string,\n    body?: ArrayBufferView | Blob | string | null,\n    headers?: Headers\n  ): Promise<void>;\n\n  getErrorCode(): ErrorCode;\n\n  getStatus(): number;\n\n  getResponse(): T;\n\n  getErrorText(): string;\n\n  /**\n   * Abort the request.\n   */\n  abort(): void;\n\n  getResponseHeader(header: string): string | null;\n\n  addUploadProgressListener(listener: (p1: ProgressEvent) => void): void;\n\n  removeUploadProgressListener(listener: (p1: ProgressEvent) => void): void;\n}\n\n/**\n * Error codes for requests made by the the XhrIo wrapper.\n */\nexport enum ErrorCode {\n  NO_ERROR = 0,\n  NETWORK_ERROR = 1,\n  ABORT = 2\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { StorageError } from './error';\nimport { Request } from './request';\n\n/**\n * A request whose promise always fails.\n */\nexport class FailRequest<T> implements Request<T> {\n  promise_: Promise<T>;\n\n  constructor(error: StorageError) {\n    this.promise_ = Promise.reject<T>(error);\n  }\n\n  /** @inheritDoc */\n  getPromise(): Promise<T> {\n    return this.promise_;\n  }\n\n  /** @inheritDoc */\n  cancel(_appDelete = false): void {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isNode } from '@firebase/util';\nimport { invalidArgument } from './error';\n\nexport function isJustDef<T>(p: T | null | undefined): p is T | null {\n  return p !== void 0;\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function isFunction(p: unknown): p is Function {\n  return typeof p === 'function';\n}\n\nexport function isNonArrayObject(p: unknown): boolean {\n  return typeof p === 'object' && !Array.isArray(p);\n}\n\nexport function isString(p: unknown): p is string {\n  return typeof p === 'string' || p instanceof String;\n}\n\nexport function isNativeBlob(p: unknown): p is Blob {\n  return isNativeBlobDefined() && p instanceof Blob;\n}\n\nexport function isNativeBlobDefined(): boolean {\n  // Note: The `isNode()` check can be removed when `node-fetch` adds native Blob support\n  // PR: https://github.com/node-fetch/node-fetch/pull/1664\n  return typeof Blob !== 'undefined' && !isNode();\n}\n\nexport function validateNumber(\n  argument: string,\n  minValue: number,\n  maxValue: number,\n  value: number\n): void {\n  if (value < minValue) {\n    throw invalidArgument(\n      `Invalid value for '${argument}'. Expected ${minValue} or greater.`\n    );\n  }\n  if (value > maxValue) {\n    throw invalidArgument(\n      `Invalid value for '${argument}'. Expected ${maxValue} or less.`\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Functions to create and manipulate URLs for the server API.\n */\nimport { UrlParams } from './requestinfo';\n\nexport function makeUrl(\n  urlPart: string,\n  host: string,\n  protocol: string\n): string {\n  let origin = host;\n  if (protocol == null) {\n    origin = `https://${host}`;\n  }\n  return `${protocol}://${origin}/v0${urlPart}`;\n}\n\nexport function makeQueryString(params: UrlParams): string {\n  const encode = encodeURIComponent;\n  let queryPart = '?';\n  for (const key in params) {\n    if (params.hasOwnProperty(key)) {\n      const nextPart = encode(key) + '=' + encode(params[key]);\n      queryPart = queryPart + nextPart + '&';\n    }\n  }\n\n  // Chop off the extra '&' or '?' on the end\n  queryPart = queryPart.slice(0, -1);\n  return queryPart;\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Checks the status code to see if the action should be retried.\n *\n * @param status Current HTTP status code returned by server.\n * @param additionalRetryCodes additional retry codes to check against\n */\nexport function isRetryStatusCode(\n  status: number,\n  additionalRetryCodes: number[]\n): boolean {\n  // The codes for which to retry came from this page:\n  // https://cloud.google.com/storage/docs/exponential-backoff\n  const isFiveHundredCode = status >= 500 && status < 600;\n  const extraRetryCodes = [\n    // Request Timeout: web server didn't receive full request in time.\n    408,\n    // Too Many Requests: you're getting rate-limited, basically.\n    429\n  ];\n  const isExtraRetryCode = extraRetryCodes.indexOf(status) !== -1;\n  const isAdditionalRetryCode = additionalRetryCodes.indexOf(status) !== -1;\n  return isFiveHundredCode || isExtraRetryCode || isAdditionalRetryCode;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines methods used to actually send HTTP requests from\n * abstract representations.\n */\n\nimport { id as backoffId, start, stop } from './backoff';\nimport { appDeleted, canceled, retryLimitExceeded, unknown } from './error';\nimport { ErrorHandler, RequestHandler, RequestInfo } from './requestinfo';\nimport { isJustDef } from './type';\nimport { makeQueryString } from './url';\nimport { Connection, ErrorCode, Headers, ConnectionType } from './connection';\nimport { isRetryStatusCode } from './utils';\n\nexport interface Request<T> {\n  getPromise(): Promise<T>;\n\n  /**\n   * Cancels the request. IMPORTANT: the promise may still be resolved with an\n   * appropriate value (if the request is finished before you call this method,\n   * but the promise has not yet been resolved), so don't just assume it will be\n   * rejected if you call this function.\n   * @param appDelete - True if the cancelation came from the app being deleted.\n   */\n  cancel(appDelete?: boolean): void;\n}\n\n/**\n * Handles network logic for all Storage Requests, including error reporting and\n * retries with backoff.\n *\n * @param I - the type of the backend's network response.\n * @param - O the output type used by the rest of the SDK. The conversion\n * happens in the specified `callback_`.\n */\nclass NetworkRequest<I extends ConnectionType, O> implements Request<O> {\n  private pendingConnection_: Connection<I> | null = null;\n  private backoffId_: backoffId | null = null;\n  private resolve_!: (value?: O | PromiseLike<O>) => void;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private reject_!: (reason?: any) => void;\n  private canceled_: boolean = false;\n  private appDelete_: boolean = false;\n  private promise_: Promise<O>;\n\n  constructor(\n    private url_: string,\n    private method_: string,\n    private headers_: Headers,\n    private body_: string | Blob | Uint8Array | null,\n    private successCodes_: number[],\n    private additionalRetryCodes_: number[],\n    private callback_: RequestHandler<I, O>,\n    private errorCallback_: ErrorHandler | null,\n    private timeout_: number,\n    private progressCallback_: ((p1: number, p2: number) => void) | null,\n    private connectionFactory_: () => Connection<I>,\n    private retry = true\n  ) {\n    this.promise_ = new Promise((resolve, reject) => {\n      this.resolve_ = resolve as (value?: O | PromiseLike<O>) => void;\n      this.reject_ = reject;\n      this.start_();\n    });\n  }\n\n  /**\n   * Actually starts the retry loop.\n   */\n  private start_(): void {\n    const doTheRequest: (\n      backoffCallback: (success: boolean, ...p2: unknown[]) => void,\n      canceled: boolean\n    ) => void = (backoffCallback, canceled) => {\n      if (canceled) {\n        backoffCallback(false, new RequestEndStatus(false, null, true));\n        return;\n      }\n      const connection = this.connectionFactory_();\n      this.pendingConnection_ = connection;\n\n      const progressListener: (\n        progressEvent: ProgressEvent\n      ) => void = progressEvent => {\n        const loaded = progressEvent.loaded;\n        const total = progressEvent.lengthComputable ? progressEvent.total : -1;\n        if (this.progressCallback_ !== null) {\n          this.progressCallback_(loaded, total);\n        }\n      };\n      if (this.progressCallback_ !== null) {\n        connection.addUploadProgressListener(progressListener);\n      }\n\n      // connection.send() never rejects, so we don't need to have a error handler or use catch on the returned promise.\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      connection\n        .send(this.url_, this.method_, this.body_, this.headers_)\n        .then(() => {\n          if (this.progressCallback_ !== null) {\n            connection.removeUploadProgressListener(progressListener);\n          }\n          this.pendingConnection_ = null;\n          const hitServer = connection.getErrorCode() === ErrorCode.NO_ERROR;\n          const status = connection.getStatus();\n          if (\n            !hitServer ||\n            (isRetryStatusCode(status, this.additionalRetryCodes_) &&\n              this.retry)\n          ) {\n            const wasCanceled = connection.getErrorCode() === ErrorCode.ABORT;\n            backoffCallback(\n              false,\n              new RequestEndStatus(false, null, wasCanceled)\n            );\n            return;\n          }\n          const successCode = this.successCodes_.indexOf(status) !== -1;\n          backoffCallback(true, new RequestEndStatus(successCode, connection));\n        });\n    };\n\n    /**\n     * @param requestWentThrough - True if the request eventually went\n     *     through, false if it hit the retry limit or was canceled.\n     */\n    const backoffDone: (\n      requestWentThrough: boolean,\n      status: RequestEndStatus<I>\n    ) => void = (requestWentThrough, status) => {\n      const resolve = this.resolve_;\n      const reject = this.reject_;\n      const connection = status.connection as Connection<I>;\n      if (status.wasSuccessCode) {\n        try {\n          const result = this.callback_(connection, connection.getResponse());\n          if (isJustDef(result)) {\n            resolve(result);\n          } else {\n            resolve();\n          }\n        } catch (e) {\n          reject(e);\n        }\n      } else {\n        if (connection !== null) {\n          const err = unknown();\n          err.serverResponse = connection.getErrorText();\n          if (this.errorCallback_) {\n            reject(this.errorCallback_(connection, err));\n          } else {\n            reject(err);\n          }\n        } else {\n          if (status.canceled) {\n            const err = this.appDelete_ ? appDeleted() : canceled();\n            reject(err);\n          } else {\n            const err = retryLimitExceeded();\n            reject(err);\n          }\n        }\n      }\n    };\n    if (this.canceled_) {\n      backoffDone(false, new RequestEndStatus(false, null, true));\n    } else {\n      this.backoffId_ = start(doTheRequest, backoffDone, this.timeout_);\n    }\n  }\n\n  /** @inheritDoc */\n  getPromise(): Promise<O> {\n    return this.promise_;\n  }\n\n  /** @inheritDoc */\n  cancel(appDelete?: boolean): void {\n    this.canceled_ = true;\n    this.appDelete_ = appDelete || false;\n    if (this.backoffId_ !== null) {\n      stop(this.backoffId_);\n    }\n    if (this.pendingConnection_ !== null) {\n      this.pendingConnection_.abort();\n    }\n  }\n}\n\n/**\n * A collection of information about the result of a network request.\n * @param opt_canceled - Defaults to false.\n */\nexport class RequestEndStatus<I extends ConnectionType> {\n  /**\n   * True if the request was canceled.\n   */\n  canceled: boolean;\n\n  constructor(\n    public wasSuccessCode: boolean,\n    public connection: Connection<I> | null,\n    canceled?: boolean\n  ) {\n    this.canceled = !!canceled;\n  }\n}\n\nexport function addAuthHeader_(\n  headers: Headers,\n  authToken: string | null\n): void {\n  if (authToken !== null && authToken.length > 0) {\n    headers['Authorization'] = 'Firebase ' + authToken;\n  }\n}\n\nexport function addVersionHeader_(\n  headers: Headers,\n  firebaseVersion?: string\n): void {\n  headers['X-Firebase-Storage-Version'] =\n    'webjs/' + (firebaseVersion ?? 'AppManager');\n}\n\nexport function addGmpidHeader_(headers: Headers, appId: string | null): void {\n  if (appId) {\n    headers['X-Firebase-GMPID'] = appId;\n  }\n}\n\nexport function addAppCheckHeader_(\n  headers: Headers,\n  appCheckToken: string | null\n): void {\n  if (appCheckToken !== null) {\n    headers['X-Firebase-AppCheck'] = appCheckToken;\n  }\n}\n\nexport function makeRequest<I extends ConnectionType, O>(\n  requestInfo: RequestInfo<I, O>,\n  appId: string | null,\n  authToken: string | null,\n  appCheckToken: string | null,\n  requestFactory: () => Connection<I>,\n  firebaseVersion?: string,\n  retry = true\n): Request<O> {\n  const queryPart = makeQueryString(requestInfo.urlParams);\n  const url = requestInfo.url + queryPart;\n  const headers = Object.assign({}, requestInfo.headers);\n  addGmpidHeader_(headers, appId);\n  addAuthHeader_(headers, authToken);\n  addVersionHeader_(headers, firebaseVersion);\n  addAppCheckHeader_(headers, appCheckToken);\n  return new NetworkRequest<I, O>(\n    url,\n    requestInfo.method,\n    headers,\n    requestInfo.body,\n    requestInfo.successCodes,\n    requestInfo.additionalRetryCodes,\n    requestInfo.handler,\n    requestInfo.errorHandler,\n    requestInfo.timeout,\n    requestInfo.progressCallback,\n    requestFactory,\n    retry\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Provides a method for running a function with exponential\n * backoff.\n */\ntype id = (p1: boolean) => void;\n\nexport { id };\n\n/**\n * Accepts a callback for an action to perform (`doRequest`),\n * and then a callback for when the backoff has completed (`backoffCompleteCb`).\n * The callback sent to start requires an argument to call (`onRequestComplete`).\n * When `start` calls `doRequest`, it passes a callback for when the request has\n * completed, `onRequestComplete`. Based on this, the backoff continues, with\n * another call to `doRequest` and the above loop continues until the timeout\n * is hit, or a successful response occurs.\n * @description\n * @param doRequest Callback to perform request\n * @param backoffCompleteCb Callback to call when backoff has been completed\n */\nexport function start(\n  doRequest: (\n    onRequestComplete: (success: boolean) => void,\n    canceled: boolean\n  ) => void,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  backoffCompleteCb: (...args: any[]) => unknown,\n  timeout: number\n): id {\n  // TODO(andysoto): make this code cleaner (probably refactor into an actual\n  // type instead of a bunch of functions with state shared in the closure)\n  let waitSeconds = 1;\n  // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\n  // TODO: find a way to exclude Node type definition for storage because storage only works in browser\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let retryTimeoutId: any = null;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let globalTimeoutId: any = null;\n  let hitTimeout = false;\n  let cancelState = 0;\n\n  function canceled(): boolean {\n    return cancelState === 2;\n  }\n  let triggeredCallback = false;\n\n  function triggerCallback(...args: any[]): void {\n    if (!triggeredCallback) {\n      triggeredCallback = true;\n      backoffCompleteCb.apply(null, args);\n    }\n  }\n\n  function callWithDelay(millis: number): void {\n    retryTimeoutId = setTimeout(() => {\n      retryTimeoutId = null;\n      doRequest(responseHandler, canceled());\n    }, millis);\n  }\n\n  function clearGlobalTimeout(): void {\n    if (globalTimeoutId) {\n      clearTimeout(globalTimeoutId);\n    }\n  }\n\n  function responseHandler(success: boolean, ...args: any[]): void {\n    if (triggeredCallback) {\n      clearGlobalTimeout();\n      return;\n    }\n    if (success) {\n      clearGlobalTimeout();\n      triggerCallback.call(null, success, ...args);\n      return;\n    }\n    const mustStop = canceled() || hitTimeout;\n    if (mustStop) {\n      clearGlobalTimeout();\n      triggerCallback.call(null, success, ...args);\n      return;\n    }\n    if (waitSeconds < 64) {\n      /* TODO(andysoto): don't back off so quickly if we know we're offline. */\n      waitSeconds *= 2;\n    }\n    let waitMillis;\n    if (cancelState === 1) {\n      cancelState = 2;\n      waitMillis = 0;\n    } else {\n      waitMillis = (waitSeconds + Math.random()) * 1000;\n    }\n    callWithDelay(waitMillis);\n  }\n  let stopped = false;\n\n  function stop(wasTimeout: boolean): void {\n    if (stopped) {\n      return;\n    }\n    stopped = true;\n    clearGlobalTimeout();\n    if (triggeredCallback) {\n      return;\n    }\n    if (retryTimeoutId !== null) {\n      if (!wasTimeout) {\n        cancelState = 2;\n      }\n      clearTimeout(retryTimeoutId);\n      callWithDelay(0);\n    } else {\n      if (!wasTimeout) {\n        cancelState = 1;\n      }\n    }\n  }\n  callWithDelay(0);\n  globalTimeoutId = setTimeout(() => {\n    hitTimeout = true;\n    stop(true);\n  }, timeout);\n  return stop;\n}\n\n/**\n * Stops the retry loop from repeating.\n * If the function is currently \"in between\" retries, it is invoked immediately\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\n * after the current invocation finishes iff the current invocation would have\n * triggered another retry.\n */\nexport function stop(id: id): void {\n  id(false);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Some methods copied from goog.fs.\n * We don't include goog.fs because it pulls in a bunch of Deferred code that\n * bloats the size of the released binary.\n */\nimport { isNativeBlobDefined } from './type';\nimport { StorageErrorCode, StorageError } from './error';\n\nfunction getBlobBuilder(): typeof IBlobBuilder | undefined {\n  if (typeof BlobBuilder !== 'undefined') {\n    return BlobBuilder;\n  } else if (typeof WebKitBlobBuilder !== 'undefined') {\n    return WebKitBlobBuilder;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Concatenates one or more values together and converts them to a Blob.\n *\n * @param args The values that will make up the resulting blob.\n * @return The blob.\n */\nexport function getBlob(...args: Array<string | Blob | ArrayBuffer>): Blob {\n  const BlobBuilder = getBlobBuilder();\n  if (BlobBuilder !== undefined) {\n    const bb = new BlobBuilder();\n    for (let i = 0; i < args.length; i++) {\n      bb.append(args[i]);\n    }\n    return bb.getBlob();\n  } else {\n    if (isNativeBlobDefined()) {\n      return new Blob(args);\n    } else {\n      throw new StorageError(\n        StorageErrorCode.UNSUPPORTED_ENVIRONMENT,\n        \"This browser doesn't seem to support creating Blobs\"\n      );\n    }\n  }\n}\n\n/**\n * Slices the blob. The returned blob contains data from the start byte\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\n *\n * @param blob The blob to be sliced.\n * @param start Index of the starting byte.\n * @param end Index of the ending byte.\n * @return The blob slice or null if not supported.\n */\nexport function sliceBlob(blob: Blob, start: number, end: number): Blob | null {\n  if (blob.webkitSlice) {\n    return blob.webkitSlice(start, end);\n  } else if (blob.mozSlice) {\n    return blob.mozSlice(start, end);\n  } else if (blob.slice) {\n    return blob.slice(start, end);\n  }\n  return null;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { missingPolyFill } from '../../implementation/error';\n\n/** Converts a Base64 encoded string to a binary string. */\nexport function decodeBase64(encoded: string): string {\n  if (typeof atob === 'undefined') {\n    throw missingPolyFill('base-64');\n  }\n  return atob(encoded);\n}\n\nexport function decodeUint8Array(data: Uint8Array): string {\n  return new TextDecoder().decode(data);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { unknown, invalidFormat } from './error';\nimport { decodeBase64 } from '../platform/base64';\n\n/**\n * An enumeration of the possible string formats for upload.\n * @public\n */\nexport type StringFormat = typeof StringFormat[keyof typeof StringFormat];\n/**\n * An enumeration of the possible string formats for upload.\n * @public\n */\nexport const StringFormat = {\n  /**\n   * Indicates the string should be interpreted \"raw\", that is, as normal text.\n   * The string will be interpreted as UTF-16, then uploaded as a UTF-8 byte\n   * sequence.\n   * Example: The string 'Hello! \\\\ud83d\\\\ude0a' becomes the byte sequence\n   * 48 65 6c 6c 6f 21 20 f0 9f 98 8a\n   */\n  RAW: 'raw',\n  /**\n   * Indicates the string should be interpreted as base64-encoded data.\n   * Padding characters (trailing '='s) are optional.\n   * Example: The string 'rWmO++E6t7/rlw==' becomes the byte sequence\n   * ad 69 8e fb e1 3a b7 bf eb 97\n   */\n  BASE64: 'base64',\n  /**\n   * Indicates the string should be interpreted as base64url-encoded data.\n   * Padding characters (trailing '='s) are optional.\n   * Example: The string 'rWmO--E6t7_rlw==' becomes the byte sequence\n   * ad 69 8e fb e1 3a b7 bf eb 97\n   */\n  BASE64URL: 'base64url',\n  /**\n   * Indicates the string is a data URL, such as one obtained from\n   * canvas.toDataURL().\n   * Example: the string 'data:application/octet-stream;base64,aaaa'\n   * becomes the byte sequence\n   * 69 a6 9a\n   * (the content-type \"application/octet-stream\" is also applied, but can\n   * be overridden in the metadata object).\n   */\n  DATA_URL: 'data_url'\n} as const;\n\nexport class StringData {\n  contentType: string | null;\n\n  constructor(public data: Uint8Array, contentType?: string | null) {\n    this.contentType = contentType || null;\n  }\n}\n\n/**\n * @internal\n */\nexport function dataFromString(\n  format: StringFormat,\n  stringData: string\n): StringData {\n  switch (format) {\n    case StringFormat.RAW:\n      return new StringData(utf8Bytes_(stringData));\n    case StringFormat.BASE64:\n    case StringFormat.BASE64URL:\n      return new StringData(base64Bytes_(format, stringData));\n    case StringFormat.DATA_URL:\n      return new StringData(\n        dataURLBytes_(stringData),\n        dataURLContentType_(stringData)\n      );\n    default:\n    // do nothing\n  }\n\n  // assert(false);\n  throw unknown();\n}\n\nexport function utf8Bytes_(value: string): Uint8Array {\n  const b: number[] = [];\n  for (let i = 0; i < value.length; i++) {\n    let c = value.charCodeAt(i);\n    if (c <= 127) {\n      b.push(c);\n    } else {\n      if (c <= 2047) {\n        b.push(192 | (c >> 6), 128 | (c & 63));\n      } else {\n        if ((c & 64512) === 55296) {\n          // The start of a surrogate pair.\n          const valid =\n            i < value.length - 1 && (value.charCodeAt(i + 1) & 64512) === 56320;\n          if (!valid) {\n            // The second surrogate wasn't there.\n            b.push(239, 191, 189);\n          } else {\n            const hi = c;\n            const lo = value.charCodeAt(++i);\n            c = 65536 | ((hi & 1023) << 10) | (lo & 1023);\n            b.push(\n              240 | (c >> 18),\n              128 | ((c >> 12) & 63),\n              128 | ((c >> 6) & 63),\n              128 | (c & 63)\n            );\n          }\n        } else {\n          if ((c & 64512) === 56320) {\n            // Invalid low surrogate.\n            b.push(239, 191, 189);\n          } else {\n            b.push(224 | (c >> 12), 128 | ((c >> 6) & 63), 128 | (c & 63));\n          }\n        }\n      }\n    }\n  }\n  return new Uint8Array(b);\n}\n\nexport function percentEncodedBytes_(value: string): Uint8Array {\n  let decoded;\n  try {\n    decoded = decodeURIComponent(value);\n  } catch (e) {\n    throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');\n  }\n  return utf8Bytes_(decoded);\n}\n\nexport function base64Bytes_(format: StringFormat, value: string): Uint8Array {\n  switch (format) {\n    case StringFormat.BASE64: {\n      const hasMinus = value.indexOf('-') !== -1;\n      const hasUnder = value.indexOf('_') !== -1;\n      if (hasMinus || hasUnder) {\n        const invalidChar = hasMinus ? '-' : '_';\n        throw invalidFormat(\n          format,\n          \"Invalid character '\" +\n            invalidChar +\n            \"' found: is it base64url encoded?\"\n        );\n      }\n      break;\n    }\n    case StringFormat.BASE64URL: {\n      const hasPlus = value.indexOf('+') !== -1;\n      const hasSlash = value.indexOf('/') !== -1;\n      if (hasPlus || hasSlash) {\n        const invalidChar = hasPlus ? '+' : '/';\n        throw invalidFormat(\n          format,\n          \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\"\n        );\n      }\n      value = value.replace(/-/g, '+').replace(/_/g, '/');\n      break;\n    }\n    default:\n    // do nothing\n  }\n  let bytes;\n  try {\n    bytes = decodeBase64(value);\n  } catch (e) {\n    if ((e as Error).message.includes('polyfill')) {\n      throw e;\n    }\n    throw invalidFormat(format, 'Invalid character found');\n  }\n  const array = new Uint8Array(bytes.length);\n  for (let i = 0; i < bytes.length; i++) {\n    array[i] = bytes.charCodeAt(i);\n  }\n  return array;\n}\n\nclass DataURLParts {\n  base64: boolean = false;\n  contentType: string | null = null;\n  rest: string;\n\n  constructor(dataURL: string) {\n    const matches = dataURL.match(/^data:([^,]+)?,/);\n    if (matches === null) {\n      throw invalidFormat(\n        StringFormat.DATA_URL,\n        \"Must be formatted 'data:[<mediatype>][;base64],<data>\"\n      );\n    }\n    const middle = matches[1] || null;\n    if (middle != null) {\n      this.base64 = endsWith(middle, ';base64');\n      this.contentType = this.base64\n        ? middle.substring(0, middle.length - ';base64'.length)\n        : middle;\n    }\n    this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\n  }\n}\n\nexport function dataURLBytes_(dataUrl: string): Uint8Array {\n  const parts = new DataURLParts(dataUrl);\n  if (parts.base64) {\n    return base64Bytes_(StringFormat.BASE64, parts.rest);\n  } else {\n    return percentEncodedBytes_(parts.rest);\n  }\n}\n\nexport function dataURLContentType_(dataUrl: string): string | null {\n  const parts = new DataURLParts(dataUrl);\n  return parts.contentType;\n}\n\nfunction endsWith(s: string, end: string): boolean {\n  const longEnough = s.length >= end.length;\n  if (!longEnough) {\n    return false;\n  }\n\n  return s.substring(s.length - end.length) === end;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @file Provides a Blob-like wrapper for various binary types (including the\n * native Blob type). This makes it possible to upload types like ArrayBuffers,\n * making uploads possible in environments without the native Blob type.\n */\nimport { sliceBlob, getBlob } from './fs';\nimport { StringFormat, dataFromString } from './string';\nimport { isNativeBlob, isNativeBlobDefined, isString } from './type';\n\n/**\n * @param opt_elideCopy - If true, doesn't copy mutable input data\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\n *     modified after this blob's construction.\n *\n * @internal\n */\nexport class FbsBlob {\n  private data_!: Blob | Uint8Array;\n  private size_: number;\n  private type_: string;\n\n  constructor(data: Blob | Uint8Array | ArrayBuffer, elideCopy?: boolean) {\n    let size: number = 0;\n    let blobType: string = '';\n    if (isNativeBlob(data)) {\n      this.data_ = data as Blob;\n      size = (data as Blob).size;\n      blobType = (data as Blob).type;\n    } else if (data instanceof ArrayBuffer) {\n      if (elideCopy) {\n        this.data_ = new Uint8Array(data);\n      } else {\n        this.data_ = new Uint8Array(data.byteLength);\n        this.data_.set(new Uint8Array(data));\n      }\n      size = this.data_.length;\n    } else if (data instanceof Uint8Array) {\n      if (elideCopy) {\n        this.data_ = data as Uint8Array;\n      } else {\n        this.data_ = new Uint8Array(data.length);\n        this.data_.set(data as Uint8Array);\n      }\n      size = data.length;\n    }\n    this.size_ = size;\n    this.type_ = blobType;\n  }\n\n  size(): number {\n    return this.size_;\n  }\n\n  type(): string {\n    return this.type_;\n  }\n\n  slice(startByte: number, endByte: number): FbsBlob | null {\n    if (isNativeBlob(this.data_)) {\n      const realBlob = this.data_ as Blob;\n      const sliced = sliceBlob(realBlob, startByte, endByte);\n      if (sliced === null) {\n        return null;\n      }\n      return new FbsBlob(sliced);\n    } else {\n      const slice = new Uint8Array(\n        (this.data_ as Uint8Array).buffer,\n        startByte,\n        endByte - startByte\n      );\n      return new FbsBlob(slice, true);\n    }\n  }\n\n  static getBlob(...args: Array<string | FbsBlob>): FbsBlob | null {\n    if (isNativeBlobDefined()) {\n      const blobby: Array<Blob | Uint8Array | string> = args.map(\n        (val: string | FbsBlob): Blob | Uint8Array | string => {\n          if (val instanceof FbsBlob) {\n            return val.data_;\n          } else {\n            return val;\n          }\n        }\n      );\n      return new FbsBlob(getBlob.apply(null, blobby));\n    } else {\n      const uint8Arrays: Uint8Array[] = args.map(\n        (val: string | FbsBlob): Uint8Array => {\n          if (isString(val)) {\n            return dataFromString(StringFormat.RAW, val as string).data;\n          } else {\n            // Blobs don't exist, so this has to be a Uint8Array.\n            return (val as FbsBlob).data_ as Uint8Array;\n          }\n        }\n      );\n      let finalLength = 0;\n      uint8Arrays.forEach((array: Uint8Array): void => {\n        finalLength += array.byteLength;\n      });\n      const merged = new Uint8Array(finalLength);\n      let index = 0;\n      uint8Arrays.forEach((array: Uint8Array) => {\n        for (let i = 0; i < array.length; i++) {\n          merged[index++] = array[i];\n        }\n      });\n      return new FbsBlob(merged, true);\n    }\n  }\n\n  uploadData(): Blob | Uint8Array {\n    return this.data_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { isNonArrayObject } from './type';\n\n/**\n * Returns the Object resulting from parsing the given JSON, or null if the\n * given string does not represent a JSON object.\n */\nexport function jsonObjectOrNull(\n  s: string\n): { [name: string]: unknown } | null {\n  let obj;\n  try {\n    obj = JSON.parse(s);\n  } catch (e) {\n    return null;\n  }\n  if (isNonArrayObject(obj)) {\n    return obj;\n  } else {\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Contains helper methods for manipulating paths.\n */\n\n/**\n * @return Null if the path is already at the root.\n */\nexport function parent(path: string): string | null {\n  if (path.length === 0) {\n    return null;\n  }\n  const index = path.lastIndexOf('/');\n  if (index === -1) {\n    return '';\n  }\n  const newPath = path.slice(0, index);\n  return newPath;\n}\n\nexport function child(path: string, childPath: string): string {\n  const canonicalChildPath = childPath\n    .split('/')\n    .filter(component => component.length > 0)\n    .join('/');\n  if (path.length === 0) {\n    return canonicalChildPath;\n  } else {\n    return path + '/' + canonicalChildPath;\n  }\n}\n\n/**\n * Returns the last component of a path.\n * '/foo/bar' -> 'bar'\n * '/foo/bar/baz/' -> 'baz/'\n * '/a' -> 'a'\n */\nexport function lastComponent(path: string): string {\n  const index = path.lastIndexOf('/', path.length - 2);\n  if (index === -1) {\n    return path;\n  } else {\n    return path.slice(index + 1);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Documentation for the metadata format\n */\nimport { Metadata } from '../metadata';\n\nimport { jsonObjectOrNull } from './json';\nimport { Location } from './location';\nimport { lastComponent } from './path';\nimport { isString } from './type';\nimport { makeUrl, makeQueryString } from './url';\nimport { Reference } from '../reference';\nimport { FirebaseStorageImpl } from '../service';\n\nexport function noXform_<T>(metadata: Metadata, value: T): T {\n  return value;\n}\n\nclass Mapping<T> {\n  local: string;\n  writable: boolean;\n  xform: (p1: Metadata, p2?: T) => T | undefined;\n\n  constructor(\n    public server: string,\n    local?: string | null,\n    writable?: boolean,\n    xform?: ((p1: Metadata, p2?: T) => T | undefined) | null\n  ) {\n    this.local = local || server;\n    this.writable = !!writable;\n    this.xform = xform || noXform_;\n  }\n}\ntype Mappings = Array<Mapping<string> | Mapping<number>>;\n\nexport { Mappings };\n\nlet mappings_: Mappings | null = null;\n\nexport function xformPath(fullPath: string | undefined): string | undefined {\n  if (!isString(fullPath) || fullPath.length < 2) {\n    return fullPath;\n  } else {\n    return lastComponent(fullPath);\n  }\n}\n\nexport function getMappings(): Mappings {\n  if (mappings_) {\n    return mappings_;\n  }\n  const mappings: Mappings = [];\n  mappings.push(new Mapping<string>('bucket'));\n  mappings.push(new Mapping<string>('generation'));\n  mappings.push(new Mapping<string>('metageneration'));\n  mappings.push(new Mapping<string>('name', 'fullPath', true));\n\n  function mappingsXformPath(\n    _metadata: Metadata,\n    fullPath: string | undefined\n  ): string | undefined {\n    return xformPath(fullPath);\n  }\n  const nameMapping = new Mapping<string>('name');\n  nameMapping.xform = mappingsXformPath;\n  mappings.push(nameMapping);\n\n  /**\n   * Coerces the second param to a number, if it is defined.\n   */\n  function xformSize(\n    _metadata: Metadata,\n    size?: number | string\n  ): number | undefined {\n    if (size !== undefined) {\n      return Number(size);\n    } else {\n      return size;\n    }\n  }\n  const sizeMapping = new Mapping<number>('size');\n  sizeMapping.xform = xformSize;\n  mappings.push(sizeMapping);\n  mappings.push(new Mapping<number>('timeCreated'));\n  mappings.push(new Mapping<string>('updated'));\n  mappings.push(new Mapping<string>('md5Hash', null, true));\n  mappings.push(new Mapping<string>('cacheControl', null, true));\n  mappings.push(new Mapping<string>('contentDisposition', null, true));\n  mappings.push(new Mapping<string>('contentEncoding', null, true));\n  mappings.push(new Mapping<string>('contentLanguage', null, true));\n  mappings.push(new Mapping<string>('contentType', null, true));\n  mappings.push(new Mapping<string>('metadata', 'customMetadata', true));\n  mappings_ = mappings;\n  return mappings_;\n}\n\nexport function addRef(metadata: Metadata, service: FirebaseStorageImpl): void {\n  function generateRef(): Reference {\n    const bucket: string = metadata['bucket'] as string;\n    const path: string = metadata['fullPath'] as string;\n    const loc = new Location(bucket, path);\n    return service._makeStorageReference(loc);\n  }\n  Object.defineProperty(metadata, 'ref', { get: generateRef });\n}\n\nexport function fromResource(\n  service: FirebaseStorageImpl,\n  resource: { [name: string]: unknown },\n  mappings: Mappings\n): Metadata {\n  const metadata: Metadata = {} as Metadata;\n  metadata['type'] = 'file';\n  const len = mappings.length;\n  for (let i = 0; i < len; i++) {\n    const mapping = mappings[i];\n    metadata[mapping.local] = (mapping as Mapping<unknown>).xform(\n      metadata,\n      resource[mapping.server]\n    );\n  }\n  addRef(metadata, service);\n  return metadata;\n}\n\nexport function fromResourceString(\n  service: FirebaseStorageImpl,\n  resourceString: string,\n  mappings: Mappings\n): Metadata | null {\n  const obj = jsonObjectOrNull(resourceString);\n  if (obj === null) {\n    return null;\n  }\n  const resource = obj as Metadata;\n  return fromResource(service, resource, mappings);\n}\n\nexport function downloadUrlFromResourceString(\n  metadata: Metadata,\n  resourceString: string,\n  host: string,\n  protocol: string\n): string | null {\n  const obj = jsonObjectOrNull(resourceString);\n  if (obj === null) {\n    return null;\n  }\n  if (!isString(obj['downloadTokens'])) {\n    // This can happen if objects are uploaded through GCS and retrieved\n    // through list, so we don't want to throw an Error.\n    return null;\n  }\n  const tokens: string = obj['downloadTokens'] as string;\n  if (tokens.length === 0) {\n    return null;\n  }\n  const encode = encodeURIComponent;\n  const tokensList = tokens.split(',');\n  const urls = tokensList.map((token: string): string => {\n    const bucket: string = metadata['bucket'] as string;\n    const path: string = metadata['fullPath'] as string;\n    const urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\n    const base = makeUrl(urlPart, host, protocol);\n    const queryString = makeQueryString({\n      alt: 'media',\n      token\n    });\n    return base + queryString;\n  });\n  return urls[0];\n}\n\nexport function toResourceString(\n  metadata: Partial<Metadata>,\n  mappings: Mappings\n): string {\n  const resource: {\n    [prop: string]: unknown;\n  } = {};\n  const len = mappings.length;\n  for (let i = 0; i < len; i++) {\n    const mapping = mappings[i];\n    if (mapping.writable) {\n      resource[mapping.server] = metadata[mapping.local];\n    }\n  }\n  return JSON.stringify(resource);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { StorageError } from './error';\nimport { Headers, Connection, ConnectionType } from './connection';\n\n/**\n * Type for url params stored in RequestInfo.\n */\nexport interface UrlParams {\n  [name: string]: string | number;\n}\n\n/**\n * A function that converts a server response to the API type expected by the\n * SDK.\n *\n * @param I - the type of the backend's network response\n * @param O - the output response type used by the rest of the SDK.\n */\nexport type RequestHandler<I extends ConnectionType, O> = (\n  connection: Connection<I>,\n  response: I\n) => O;\n\n/** A function to handle an error. */\nexport type ErrorHandler = (\n  connection: Connection<ConnectionType>,\n  response: StorageError\n) => StorageError;\n\n/**\n * Contains a fully specified request.\n *\n * @param I - the type of the backend's network response.\n * @param O - the output response type used by the rest of the SDK.\n */\nexport class RequestInfo<I extends ConnectionType, O> {\n  urlParams: UrlParams = {};\n  headers: Headers = {};\n  body: Blob | string | Uint8Array | null = null;\n  errorHandler: ErrorHandler | null = null;\n\n  /**\n   * Called with the current number of bytes uploaded and total size (-1 if not\n   * computable) of the request body (i.e. used to report upload progress).\n   */\n  progressCallback: ((p1: number, p2: number) => void) | null = null;\n  successCodes: number[] = [200];\n  additionalRetryCodes: number[] = [];\n\n  constructor(\n    public url: string,\n    public method: string,\n    /**\n     * Returns the value with which to resolve the request's promise. Only called\n     * if the request is successful. Throw from this function to reject the\n     * returned Request's promise with the thrown error.\n     * Note: The XhrIo passed to this function may be reused after this callback\n     * returns. Do not keep a reference to it in any way.\n     */\n    public handler: RequestHandler<I, O>,\n    public timeout: number\n  ) {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines methods for interacting with the network.\n */\n\nimport { Metadata } from '../metadata';\nimport { ListResult } from '../list';\nimport { FbsBlob } from './blob';\nimport {\n  StorageError,\n  cannotSliceBlob,\n  unauthenticated,\n  quotaExceeded,\n  unauthorized,\n  objectNotFound,\n  serverFileWrongSize,\n  unknown,\n  unauthorizedApp\n} from './error';\nimport { Location } from './location';\nimport {\n  Mappings,\n  fromResourceString,\n  downloadUrlFromResourceString,\n  toResourceString\n} from './metadata';\nimport { fromResponseString } from './list';\nimport { RequestInfo, UrlParams } from './requestinfo';\nimport { isString } from './type';\nimport { makeUrl } from './url';\nimport { Connection, ConnectionType } from './connection';\nimport { FirebaseStorageImpl } from '../service';\n\n/**\n * Throws the UNKNOWN StorageError if cndn is false.\n */\nexport function handlerCheck(cndn: boolean): void {\n  if (!cndn) {\n    throw unknown();\n  }\n}\n\nexport function metadataHandler(\n  service: FirebaseStorageImpl,\n  mappings: Mappings\n): (p1: Connection<string>, p2: string) => Metadata {\n  function handler(xhr: Connection<string>, text: string): Metadata {\n    const metadata = fromResourceString(service, text, mappings);\n    handlerCheck(metadata !== null);\n    return metadata as Metadata;\n  }\n  return handler;\n}\n\nexport function listHandler(\n  service: FirebaseStorageImpl,\n  bucket: string\n): (p1: Connection<string>, p2: string) => ListResult {\n  function handler(xhr: Connection<string>, text: string): ListResult {\n    const listResult = fromResponseString(service, bucket, text);\n    handlerCheck(listResult !== null);\n    return listResult as ListResult;\n  }\n  return handler;\n}\n\nexport function downloadUrlHandler(\n  service: FirebaseStorageImpl,\n  mappings: Mappings\n): (p1: Connection<string>, p2: string) => string | null {\n  function handler(xhr: Connection<string>, text: string): string | null {\n    const metadata = fromResourceString(service, text, mappings);\n    handlerCheck(metadata !== null);\n    return downloadUrlFromResourceString(\n      metadata as Metadata,\n      text,\n      service.host,\n      service._protocol\n    );\n  }\n  return handler;\n}\n\nexport function sharedErrorHandler(\n  location: Location\n): (p1: Connection<ConnectionType>, p2: StorageError) => StorageError {\n  function errorHandler(\n    xhr: Connection<ConnectionType>,\n    err: StorageError\n  ): StorageError {\n    let newErr: StorageError;\n    if (xhr.getStatus() === 401) {\n      if (\n        // This exact message string is the only consistent part of the\n        // server's error response that identifies it as an App Check error.\n        xhr.getErrorText().includes('Firebase App Check token is invalid')\n      ) {\n        newErr = unauthorizedApp();\n      } else {\n        newErr = unauthenticated();\n      }\n    } else {\n      if (xhr.getStatus() === 402) {\n        newErr = quotaExceeded(location.bucket);\n      } else {\n        if (xhr.getStatus() === 403) {\n          newErr = unauthorized(location.path);\n        } else {\n          newErr = err;\n        }\n      }\n    }\n    newErr.status = xhr.getStatus();\n    newErr.serverResponse = err.serverResponse;\n    return newErr;\n  }\n  return errorHandler;\n}\n\nexport function objectErrorHandler(\n  location: Location\n): (p1: Connection<ConnectionType>, p2: StorageError) => StorageError {\n  const shared = sharedErrorHandler(location);\n\n  function errorHandler(\n    xhr: Connection<ConnectionType>,\n    err: StorageError\n  ): StorageError {\n    let newErr = shared(xhr, err);\n    if (xhr.getStatus() === 404) {\n      newErr = objectNotFound(location.path);\n    }\n    newErr.serverResponse = err.serverResponse;\n    return newErr;\n  }\n  return errorHandler;\n}\n\nexport function getMetadata(\n  service: FirebaseStorageImpl,\n  location: Location,\n  mappings: Mappings\n): RequestInfo<string, Metadata> {\n  const urlPart = location.fullServerUrl();\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'GET';\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    metadataHandler(service, mappings),\n    timeout\n  );\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function list(\n  service: FirebaseStorageImpl,\n  location: Location,\n  delimiter?: string,\n  pageToken?: string | null,\n  maxResults?: number | null\n): RequestInfo<string, ListResult> {\n  const urlParams: UrlParams = {};\n  if (location.isRoot) {\n    urlParams['prefix'] = '';\n  } else {\n    urlParams['prefix'] = location.path + '/';\n  }\n  if (delimiter && delimiter.length > 0) {\n    urlParams['delimiter'] = delimiter;\n  }\n  if (pageToken) {\n    urlParams['pageToken'] = pageToken;\n  }\n  if (maxResults) {\n    urlParams['maxResults'] = maxResults;\n  }\n  const urlPart = location.bucketOnlyServerUrl();\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'GET';\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    listHandler(service, location.bucket),\n    timeout\n  );\n  requestInfo.urlParams = urlParams;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\nexport function getBytes<I extends ConnectionType>(\n  service: FirebaseStorageImpl,\n  location: Location,\n  maxDownloadSizeBytes?: number\n): RequestInfo<I, I> {\n  const urlPart = location.fullServerUrl();\n  const url = makeUrl(urlPart, service.host, service._protocol) + '?alt=media';\n  const method = 'GET';\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    (_: Connection<I>, data: I) => data,\n    timeout\n  );\n  requestInfo.errorHandler = objectErrorHandler(location);\n  if (maxDownloadSizeBytes !== undefined) {\n    requestInfo.headers['Range'] = `bytes=0-${maxDownloadSizeBytes}`;\n    requestInfo.successCodes = [200 /* OK */, 206 /* Partial Content */];\n  }\n  return requestInfo;\n}\n\nexport function getDownloadUrl(\n  service: FirebaseStorageImpl,\n  location: Location,\n  mappings: Mappings\n): RequestInfo<string, string | null> {\n  const urlPart = location.fullServerUrl();\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'GET';\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    downloadUrlHandler(service, mappings),\n    timeout\n  );\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function updateMetadata(\n  service: FirebaseStorageImpl,\n  location: Location,\n  metadata: Partial<Metadata>,\n  mappings: Mappings\n): RequestInfo<string, Metadata> {\n  const urlPart = location.fullServerUrl();\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'PATCH';\n  const body = toResourceString(metadata, mappings);\n  const headers = { 'Content-Type': 'application/json; charset=utf-8' };\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    metadataHandler(service, mappings),\n    timeout\n  );\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function deleteObject(\n  service: FirebaseStorageImpl,\n  location: Location\n): RequestInfo<string, void> {\n  const urlPart = location.fullServerUrl();\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'DELETE';\n  const timeout = service.maxOperationRetryTime;\n\n  function handler(_xhr: Connection<string>, _text: string): void {}\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.successCodes = [200, 204];\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function determineContentType_(\n  metadata: Metadata | null,\n  blob: FbsBlob | null\n): string {\n  return (\n    (metadata && metadata['contentType']) ||\n    (blob && blob.type()) ||\n    'application/octet-stream'\n  );\n}\n\nexport function metadataForUpload_(\n  location: Location,\n  blob: FbsBlob,\n  metadata?: Metadata | null\n): Metadata {\n  const metadataClone = Object.assign({}, metadata);\n  metadataClone['fullPath'] = location.path;\n  metadataClone['size'] = blob.size();\n  if (!metadataClone['contentType']) {\n    metadataClone['contentType'] = determineContentType_(null, blob);\n  }\n  return metadataClone;\n}\n\n/**\n * Prepare RequestInfo for uploads as Content-Type: multipart.\n */\nexport function multipartUpload(\n  service: FirebaseStorageImpl,\n  location: Location,\n  mappings: Mappings,\n  blob: FbsBlob,\n  metadata?: Metadata | null\n): RequestInfo<string, Metadata> {\n  const urlPart = location.bucketOnlyServerUrl();\n  const headers: { [prop: string]: string } = {\n    'X-Goog-Upload-Protocol': 'multipart'\n  };\n\n  function genBoundary(): string {\n    let str = '';\n    for (let i = 0; i < 2; i++) {\n      str = str + Math.random().toString().slice(2);\n    }\n    return str;\n  }\n  const boundary = genBoundary();\n  headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\n  const metadata_ = metadataForUpload_(location, blob, metadata);\n  const metadataString = toResourceString(metadata_, mappings);\n  const preBlobPart =\n    '--' +\n    boundary +\n    '\\r\\n' +\n    'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' +\n    metadataString +\n    '\\r\\n--' +\n    boundary +\n    '\\r\\n' +\n    'Content-Type: ' +\n    metadata_['contentType'] +\n    '\\r\\n\\r\\n';\n  const postBlobPart = '\\r\\n--' + boundary + '--';\n  const body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n  const urlParams: UrlParams = { name: metadata_['fullPath']! };\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'POST';\n  const timeout = service.maxUploadRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    metadataHandler(service, mappings),\n    timeout\n  );\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\n/**\n * @param current The number of bytes that have been uploaded so far.\n * @param total The total number of bytes in the upload.\n * @param opt_finalized True if the server has finished the upload.\n * @param opt_metadata The upload metadata, should\n *     only be passed if opt_finalized is true.\n */\nexport class ResumableUploadStatus {\n  finalized: boolean;\n  metadata: Metadata | null;\n\n  constructor(\n    public current: number,\n    public total: number,\n    finalized?: boolean,\n    metadata?: Metadata | null\n  ) {\n    this.finalized = !!finalized;\n    this.metadata = metadata || null;\n  }\n}\n\nexport function checkResumeHeader_(\n  xhr: Connection<string>,\n  allowed?: string[]\n): string {\n  let status: string | null = null;\n  try {\n    status = xhr.getResponseHeader('X-Goog-Upload-Status');\n  } catch (e) {\n    handlerCheck(false);\n  }\n  const allowedStatus = allowed || ['active'];\n  handlerCheck(!!status && allowedStatus.indexOf(status) !== -1);\n  return status as string;\n}\n\nexport function createResumableUpload(\n  service: FirebaseStorageImpl,\n  location: Location,\n  mappings: Mappings,\n  blob: FbsBlob,\n  metadata?: Metadata | null\n): RequestInfo<string, string> {\n  const urlPart = location.bucketOnlyServerUrl();\n  const metadataForUpload = metadataForUpload_(location, blob, metadata);\n  const urlParams: UrlParams = { name: metadataForUpload['fullPath']! };\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'POST';\n  const headers = {\n    'X-Goog-Upload-Protocol': 'resumable',\n    'X-Goog-Upload-Command': 'start',\n    'X-Goog-Upload-Header-Content-Length': `${blob.size()}`,\n    'X-Goog-Upload-Header-Content-Type': metadataForUpload['contentType']!,\n    'Content-Type': 'application/json; charset=utf-8'\n  };\n  const body = toResourceString(metadataForUpload, mappings);\n  const timeout = service.maxUploadRetryTime;\n\n  function handler(xhr: Connection<string>): string {\n    checkResumeHeader_(xhr);\n    let url;\n    try {\n      url = xhr.getResponseHeader('X-Goog-Upload-URL');\n    } catch (e) {\n      handlerCheck(false);\n    }\n    handlerCheck(isString(url));\n    return url as string;\n  }\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\n/**\n * @param url From a call to fbs.requests.createResumableUpload.\n */\nexport function getResumableUploadStatus(\n  service: FirebaseStorageImpl,\n  location: Location,\n  url: string,\n  blob: FbsBlob\n): RequestInfo<string, ResumableUploadStatus> {\n  const headers = { 'X-Goog-Upload-Command': 'query' };\n\n  function handler(xhr: Connection<string>): ResumableUploadStatus {\n    const status = checkResumeHeader_(xhr, ['active', 'final']);\n    let sizeString: string | null = null;\n    try {\n      sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\n    } catch (e) {\n      handlerCheck(false);\n    }\n\n    if (!sizeString) {\n      // null or empty string\n      handlerCheck(false);\n    }\n\n    const size = Number(sizeString);\n    handlerCheck(!isNaN(size));\n    return new ResumableUploadStatus(size, blob.size(), status === 'final');\n  }\n  const method = 'POST';\n  const timeout = service.maxUploadRetryTime;\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\n/**\n * Any uploads via the resumable upload API must transfer a number of bytes\n * that is a multiple of this number.\n */\nexport const RESUMABLE_UPLOAD_CHUNK_SIZE: number = 256 * 1024;\n\n/**\n * @param url From a call to fbs.requests.createResumableUpload.\n * @param chunkSize Number of bytes to upload.\n * @param status The previous status.\n *     If not passed or null, we start from the beginning.\n * @throws fbs.Error If the upload is already complete, the passed in status\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\n *     for upload.\n */\nexport function continueResumableUpload(\n  location: Location,\n  service: FirebaseStorageImpl,\n  url: string,\n  blob: FbsBlob,\n  chunkSize: number,\n  mappings: Mappings,\n  status?: ResumableUploadStatus | null,\n  progressCallback?: ((p1: number, p2: number) => void) | null\n): RequestInfo<string, ResumableUploadStatus> {\n  // TODO(andysoto): standardize on internal asserts\n  // assert(!(opt_status && opt_status.finalized));\n  const status_ = new ResumableUploadStatus(0, 0);\n  if (status) {\n    status_.current = status.current;\n    status_.total = status.total;\n  } else {\n    status_.current = 0;\n    status_.total = blob.size();\n  }\n  if (blob.size() !== status_.total) {\n    throw serverFileWrongSize();\n  }\n  const bytesLeft = status_.total - status_.current;\n  let bytesToUpload = bytesLeft;\n  if (chunkSize > 0) {\n    bytesToUpload = Math.min(bytesToUpload, chunkSize);\n  }\n  const startByte = status_.current;\n  const endByte = startByte + bytesToUpload;\n  let uploadCommand = '';\n  if (bytesToUpload === 0) {\n    uploadCommand = 'finalize';\n  } else if (bytesLeft === bytesToUpload) {\n    uploadCommand = 'upload, finalize';\n  } else {\n    uploadCommand = 'upload';\n  }\n  const headers = {\n    'X-Goog-Upload-Command': uploadCommand,\n    'X-Goog-Upload-Offset': `${status_.current}`\n  };\n  const body = blob.slice(startByte, endByte);\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n\n  function handler(\n    xhr: Connection<string>,\n    text: string\n  ): ResumableUploadStatus {\n    // TODO(andysoto): Verify the MD5 of each uploaded range:\n    // the 'x-range-md5' header comes back with status code 308 responses.\n    // We'll only be able to bail out though, because you can't re-upload a\n    // range that you previously uploaded.\n    const uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\n    const newCurrent = status_.current + bytesToUpload;\n    const size = blob.size();\n    let metadata;\n    if (uploadStatus === 'final') {\n      metadata = metadataHandler(service, mappings)(xhr, text);\n    } else {\n      metadata = null;\n    }\n    return new ResumableUploadStatus(\n      newCurrent,\n      size,\n      uploadStatus === 'final',\n      metadata\n    );\n  }\n  const method = 'POST';\n  const timeout = service.maxUploadRetryTime;\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.progressCallback = progressCallback || null;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Enumerations used for upload tasks.\n */\n\n/**\n * An event that is triggered on a task.\n * @internal\n */\nexport type TaskEvent = string;\n\n/**\n * An event that is triggered on a task.\n * @internal\n */\nexport const TaskEvent = {\n  /**\n   * For this event,\n   * <ul>\n   *   <li>The `next` function is triggered on progress updates and when the\n   *       task is paused/resumed with an `UploadTaskSnapshot` as the first\n   *       argument.</li>\n   *   <li>The `error` function is triggered if the upload is canceled or fails\n   *       for another reason.</li>\n   *   <li>The `complete` function is triggered if the upload completes\n   *       successfully.</li>\n   * </ul>\n   */\n  STATE_CHANGED: 'state_changed'\n};\n\n/**\n * Internal enum for task state.\n */\nexport const enum InternalTaskState {\n  RUNNING = 'running',\n  PAUSING = 'pausing',\n  PAUSED = 'paused',\n  SUCCESS = 'success',\n  CANCELING = 'canceling',\n  CANCELED = 'canceled',\n  ERROR = 'error'\n}\n\n/**\n * Represents the current state of a running upload.\n * @internal\n */\nexport type TaskState = typeof TaskState[keyof typeof TaskState];\n\n// type keys = keyof TaskState\n/**\n * Represents the current state of a running upload.\n * @internal\n */\nexport const TaskState = {\n  /** The task is currently transferring data. */\n  RUNNING: 'running',\n\n  /** The task was paused by the user. */\n  PAUSED: 'paused',\n\n  /** The task completed successfully. */\n  SUCCESS: 'success',\n\n  /** The task was canceled. */\n  CANCELED: 'canceled',\n\n  /** The task failed with an error. */\n  ERROR: 'error'\n} as const;\n\nexport function taskStateFromInternalTaskState(\n  state: InternalTaskState\n): TaskState {\n  switch (state) {\n    case InternalTaskState.RUNNING:\n    case InternalTaskState.PAUSING:\n    case InternalTaskState.CANCELING:\n      return TaskState.RUNNING;\n    case InternalTaskState.PAUSED:\n      return TaskState.PAUSED;\n    case InternalTaskState.SUCCESS:\n      return TaskState.SUCCESS;\n    case InternalTaskState.CANCELED:\n      return TaskState.CANCELED;\n    case InternalTaskState.ERROR:\n      return TaskState.ERROR;\n    default:\n      // TODO(andysoto): assert(false);\n      return TaskState.ERROR;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { isFunction } from './type';\nimport { StorageError } from './error';\n\n/**\n * Function that is called once for each value in a stream of values.\n */\nexport type NextFn<T> = (value: T) => void;\n\n/**\n * A function that is called with a `StorageError`\n * if the event stream ends due to an error.\n */\nexport type ErrorFn = (error: StorageError) => void;\n\n/**\n * A function that is called if the event stream ends normally.\n */\nexport type CompleteFn = () => void;\n\n/**\n * Unsubscribes from a stream.\n */\nexport type Unsubscribe = () => void;\n\n/**\n * An observer identical to the `Observer` defined in packages/util except the\n * error passed into the ErrorFn is specifically a `StorageError`.\n */\nexport interface StorageObserver<T> {\n  /**\n   * Function that is called once for each value in the event stream.\n   */\n  next?: NextFn<T>;\n  /**\n   * A function that is called with a `StorageError`\n   * if the event stream ends due to an error.\n   */\n  error?: ErrorFn;\n  /**\n   * A function that is called if the event stream ends normally.\n   */\n  complete?: CompleteFn;\n}\n\n/**\n * Subscribes to an event stream.\n */\nexport type Subscribe<T> = (\n  next?: NextFn<T> | StorageObserver<T>,\n  error?: ErrorFn,\n  complete?: CompleteFn\n) => Unsubscribe;\n\nexport class Observer<T> implements StorageObserver<T> {\n  next?: NextFn<T>;\n  error?: ErrorFn;\n  complete?: CompleteFn;\n\n  constructor(\n    nextOrObserver?: NextFn<T> | StorageObserver<T>,\n    error?: ErrorFn,\n    complete?: CompleteFn\n  ) {\n    const asFunctions =\n      isFunction(nextOrObserver) || error != null || complete != null;\n    if (asFunctions) {\n      this.next = nextOrObserver as NextFn<T>;\n      this.error = error ?? undefined;\n      this.complete = complete ?? undefined;\n    } else {\n      const observer = nextOrObserver as {\n        next?: NextFn<T>;\n        error?: ErrorFn;\n        complete?: CompleteFn;\n      };\n      this.next = observer.next;\n      this.error = observer.error;\n      this.complete = observer.complete;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a function that invokes f with its arguments asynchronously as a\n * microtask, i.e. as soon as possible after the current script returns back\n * into browser code.\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function async(f: Function): Function {\n  return (...argsToForward: unknown[]) => {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    Promise.resolve().then(() => f(...argsToForward));\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Connection,\n  ConnectionType,\n  ErrorCode,\n  Headers\n} from '../../implementation/connection';\nimport { internalError } from '../../implementation/error';\n\n/** An override for the text-based Connection. Used in tests. */\nlet textFactoryOverride: (() => Connection<string>) | null = null;\n\n/**\n * Network layer for browsers. We use this instead of goog.net.XhrIo because\n * goog.net.XhrIo is hyuuuuge and doesn't work in React Native on Android.\n */\nabstract class XhrConnection<T extends ConnectionType>\n  implements Connection<T>\n{\n  protected xhr_: XMLHttpRequest;\n  private errorCode_: ErrorCode;\n  private sendPromise_: Promise<void>;\n  protected sent_: boolean = false;\n\n  constructor() {\n    this.xhr_ = new XMLHttpRequest();\n    this.initXhr();\n    this.errorCode_ = ErrorCode.NO_ERROR;\n    this.sendPromise_ = new Promise(resolve => {\n      this.xhr_.addEventListener('abort', () => {\n        this.errorCode_ = ErrorCode.ABORT;\n        resolve();\n      });\n      this.xhr_.addEventListener('error', () => {\n        this.errorCode_ = ErrorCode.NETWORK_ERROR;\n        resolve();\n      });\n      this.xhr_.addEventListener('load', () => {\n        resolve();\n      });\n    });\n  }\n\n  abstract initXhr(): void;\n\n  send(\n    url: string,\n    method: string,\n    body?: ArrayBufferView | Blob | string,\n    headers?: Headers\n  ): Promise<void> {\n    if (this.sent_) {\n      throw internalError('cannot .send() more than once');\n    }\n    this.sent_ = true;\n    this.xhr_.open(method, url, true);\n    if (headers !== undefined) {\n      for (const key in headers) {\n        if (headers.hasOwnProperty(key)) {\n          this.xhr_.setRequestHeader(key, headers[key].toString());\n        }\n      }\n    }\n    if (body !== undefined) {\n      this.xhr_.send(body);\n    } else {\n      this.xhr_.send();\n    }\n    return this.sendPromise_;\n  }\n\n  getErrorCode(): ErrorCode {\n    if (!this.sent_) {\n      throw internalError('cannot .getErrorCode() before sending');\n    }\n    return this.errorCode_;\n  }\n\n  getStatus(): number {\n    if (!this.sent_) {\n      throw internalError('cannot .getStatus() before sending');\n    }\n    try {\n      return this.xhr_.status;\n    } catch (e) {\n      return -1;\n    }\n  }\n\n  getResponse(): T {\n    if (!this.sent_) {\n      throw internalError('cannot .getResponse() before sending');\n    }\n    return this.xhr_.response;\n  }\n\n  getErrorText(): string {\n    if (!this.sent_) {\n      throw internalError('cannot .getErrorText() before sending');\n    }\n    return this.xhr_.statusText;\n  }\n\n  /** Aborts the request. */\n  abort(): void {\n    this.xhr_.abort();\n  }\n\n  getResponseHeader(header: string): string | null {\n    return this.xhr_.getResponseHeader(header);\n  }\n\n  addUploadProgressListener(listener: (p1: ProgressEvent) => void): void {\n    if (this.xhr_.upload != null) {\n      this.xhr_.upload.addEventListener('progress', listener);\n    }\n  }\n\n  removeUploadProgressListener(listener: (p1: ProgressEvent) => void): void {\n    if (this.xhr_.upload != null) {\n      this.xhr_.upload.removeEventListener('progress', listener);\n    }\n  }\n}\n\nexport class XhrTextConnection extends XhrConnection<string> {\n  initXhr(): void {\n    this.xhr_.responseType = 'text';\n  }\n}\n\nexport function newTextConnection(): Connection<string> {\n  return textFactoryOverride ? textFactoryOverride() : new XhrTextConnection();\n}\n\nexport class XhrBytesConnection extends XhrConnection<ArrayBuffer> {\n  private data_?: ArrayBuffer;\n\n  initXhr(): void {\n    this.xhr_.responseType = 'arraybuffer';\n  }\n}\n\nexport function newBytesConnection(): Connection<ArrayBuffer> {\n  return new XhrBytesConnection();\n}\n\nexport class XhrBlobConnection extends XhrConnection<Blob> {\n  initXhr(): void {\n    this.xhr_.responseType = 'blob';\n  }\n}\n\nexport function newBlobConnection(): Connection<Blob> {\n  return new XhrBlobConnection();\n}\n\nexport function newStreamConnection(): Connection<NodeJS.ReadableStream> {\n  throw new Error('Streams are only supported on Node');\n}\n\nexport function injectTestConnection(\n  factory: (() => Connection<string>) | null\n): void {\n  textFactoryOverride = factory;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Defines types for interacting with blob transfer tasks.\n */\n\nimport { FbsBlob } from './implementation/blob';\nimport {\n  canceled,\n  StorageErrorCode,\n  StorageError,\n  retryLimitExceeded\n} from './implementation/error';\nimport {\n  InternalTaskState,\n  TaskEvent,\n  TaskState,\n  taskStateFromInternalTaskState\n} from './implementation/taskenums';\nimport { Metadata } from './metadata';\nimport {\n  Observer,\n  Subscribe,\n  Unsubscribe,\n  StorageObserver as StorageObserverInternal,\n  NextFn\n} from './implementation/observer';\nimport { Request } from './implementation/request';\nimport { UploadTaskSnapshot, StorageObserver } from './public-types';\nimport { async as fbsAsync } from './implementation/async';\nimport { Mappings, getMappings } from './implementation/metadata';\nimport {\n  createResumableUpload,\n  getResumableUploadStatus,\n  RESUMABLE_UPLOAD_CHUNK_SIZE,\n  ResumableUploadStatus,\n  continueResumableUpload,\n  getMetadata,\n  multipartUpload\n} from './implementation/requests';\nimport { Reference } from './reference';\nimport { newTextConnection } from './platform/connection';\nimport { isRetryStatusCode } from './implementation/utils';\nimport { CompleteFn } from '@firebase/util';\nimport { DEFAULT_MIN_SLEEP_TIME_MILLIS } from './implementation/constants';\n\n/**\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\n * upload and manage callbacks for various events.\n * @internal\n */\nexport class UploadTask {\n  private _ref: Reference;\n  /**\n   * The data to be uploaded.\n   */\n  _blob: FbsBlob;\n  /**\n   * Metadata related to the upload.\n   */\n  _metadata: Metadata | null;\n  private _mappings: Mappings;\n  /**\n   * Number of bytes transferred so far.\n   */\n  _transferred: number = 0;\n  private _needToFetchStatus: boolean = false;\n  private _needToFetchMetadata: boolean = false;\n  private _observers: Array<StorageObserverInternal<UploadTaskSnapshot>> = [];\n  private _resumable: boolean;\n  /**\n   * Upload state.\n   */\n  _state: InternalTaskState;\n  private _error?: StorageError = undefined;\n  private _uploadUrl?: string = undefined;\n  private _request?: Request<unknown> = undefined;\n  private _chunkMultiplier: number = 1;\n  private _errorHandler: (p1: StorageError) => void;\n  private _metadataErrorHandler: (p1: StorageError) => void;\n  private _resolve?: (p1: UploadTaskSnapshot) => void = undefined;\n  private _reject?: (p1: StorageError) => void = undefined;\n  private pendingTimeout?: ReturnType<typeof setTimeout>;\n  private _promise: Promise<UploadTaskSnapshot>;\n\n  private sleepTime: number;\n\n  private maxSleepTime: number;\n\n  isExponentialBackoffExpired(): boolean {\n    return this.sleepTime > this.maxSleepTime;\n  }\n\n  /**\n   * @param ref - The firebaseStorage.Reference object this task came\n   *     from, untyped to avoid cyclic dependencies.\n   * @param blob - The blob to upload.\n   */\n  constructor(ref: Reference, blob: FbsBlob, metadata: Metadata | null = null) {\n    this._ref = ref;\n    this._blob = blob;\n    this._metadata = metadata;\n    this._mappings = getMappings();\n    this._resumable = this._shouldDoResumable(this._blob);\n    this._state = InternalTaskState.RUNNING;\n    this._errorHandler = error => {\n      this._request = undefined;\n      this._chunkMultiplier = 1;\n      if (error._codeEquals(StorageErrorCode.CANCELED)) {\n        this._needToFetchStatus = true;\n        this.completeTransitions_();\n      } else {\n        const backoffExpired = this.isExponentialBackoffExpired();\n        if (isRetryStatusCode(error.status, [])) {\n          if (backoffExpired) {\n            error = retryLimitExceeded();\n          } else {\n            this.sleepTime = Math.max(\n              this.sleepTime * 2,\n              DEFAULT_MIN_SLEEP_TIME_MILLIS\n            );\n            this._needToFetchStatus = true;\n            this.completeTransitions_();\n            return;\n          }\n        }\n        this._error = error;\n        this._transition(InternalTaskState.ERROR);\n      }\n    };\n    this._metadataErrorHandler = error => {\n      this._request = undefined;\n      if (error._codeEquals(StorageErrorCode.CANCELED)) {\n        this.completeTransitions_();\n      } else {\n        this._error = error;\n        this._transition(InternalTaskState.ERROR);\n      }\n    };\n    this.sleepTime = 0;\n    this.maxSleepTime = this._ref.storage.maxUploadRetryTime;\n    this._promise = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n      this._start();\n    });\n\n    // Prevent uncaught rejections on the internal promise from bubbling out\n    // to the top level with a dummy handler.\n    this._promise.then(null, () => {});\n  }\n\n  private _makeProgressCallback(): (p1: number, p2: number) => void {\n    const sizeBefore = this._transferred;\n    return loaded => this._updateProgress(sizeBefore + loaded);\n  }\n\n  private _shouldDoResumable(blob: FbsBlob): boolean {\n    return blob.size() > 256 * 1024;\n  }\n\n  private _start(): void {\n    if (this._state !== InternalTaskState.RUNNING) {\n      // This can happen if someone pauses us in a resume callback, for example.\n      return;\n    }\n    if (this._request !== undefined) {\n      return;\n    }\n    if (this._resumable) {\n      if (this._uploadUrl === undefined) {\n        this._createResumable();\n      } else {\n        if (this._needToFetchStatus) {\n          this._fetchStatus();\n        } else {\n          if (this._needToFetchMetadata) {\n            // Happens if we miss the metadata on upload completion.\n            this._fetchMetadata();\n          } else {\n            this.pendingTimeout = setTimeout(() => {\n              this.pendingTimeout = undefined;\n              this._continueUpload();\n            }, this.sleepTime);\n          }\n        }\n      }\n    } else {\n      this._oneShotUpload();\n    }\n  }\n\n  private _resolveToken(\n    callback: (authToken: string | null, appCheckToken: string | null) => void\n  ): void {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    Promise.all([\n      this._ref.storage._getAuthToken(),\n      this._ref.storage._getAppCheckToken()\n    ]).then(([authToken, appCheckToken]) => {\n      switch (this._state) {\n        case InternalTaskState.RUNNING:\n          callback(authToken, appCheckToken);\n          break;\n        case InternalTaskState.CANCELING:\n          this._transition(InternalTaskState.CANCELED);\n          break;\n        case InternalTaskState.PAUSING:\n          this._transition(InternalTaskState.PAUSED);\n          break;\n        default:\n      }\n    });\n  }\n\n  // TODO(andysoto): assert false\n\n  private _createResumable(): void {\n    this._resolveToken((authToken, appCheckToken) => {\n      const requestInfo = createResumableUpload(\n        this._ref.storage,\n        this._ref._location,\n        this._mappings,\n        this._blob,\n        this._metadata\n      );\n      const createRequest = this._ref.storage._makeRequest(\n        requestInfo,\n        newTextConnection,\n        authToken,\n        appCheckToken\n      );\n      this._request = createRequest;\n      createRequest.getPromise().then((url: string) => {\n        this._request = undefined;\n        this._uploadUrl = url;\n        this._needToFetchStatus = false;\n        this.completeTransitions_();\n      }, this._errorHandler);\n    });\n  }\n\n  private _fetchStatus(): void {\n    // TODO(andysoto): assert(this.uploadUrl_ !== null);\n    const url = this._uploadUrl as string;\n    this._resolveToken((authToken, appCheckToken) => {\n      const requestInfo = getResumableUploadStatus(\n        this._ref.storage,\n        this._ref._location,\n        url,\n        this._blob\n      );\n      const statusRequest = this._ref.storage._makeRequest(\n        requestInfo,\n        newTextConnection,\n        authToken,\n        appCheckToken\n      );\n      this._request = statusRequest;\n      statusRequest.getPromise().then(status => {\n        status = status as ResumableUploadStatus;\n        this._request = undefined;\n        this._updateProgress(status.current);\n        this._needToFetchStatus = false;\n        if (status.finalized) {\n          this._needToFetchMetadata = true;\n        }\n        this.completeTransitions_();\n      }, this._errorHandler);\n    });\n  }\n\n  private _continueUpload(): void {\n    const chunkSize = RESUMABLE_UPLOAD_CHUNK_SIZE * this._chunkMultiplier;\n    const status = new ResumableUploadStatus(\n      this._transferred,\n      this._blob.size()\n    );\n\n    // TODO(andysoto): assert(this.uploadUrl_ !== null);\n    const url = this._uploadUrl as string;\n    this._resolveToken((authToken, appCheckToken) => {\n      let requestInfo;\n      try {\n        requestInfo = continueResumableUpload(\n          this._ref._location,\n          this._ref.storage,\n          url,\n          this._blob,\n          chunkSize,\n          this._mappings,\n          status,\n          this._makeProgressCallback()\n        );\n      } catch (e) {\n        this._error = e as StorageError;\n        this._transition(InternalTaskState.ERROR);\n        return;\n      }\n      const uploadRequest = this._ref.storage._makeRequest(\n        requestInfo,\n        newTextConnection,\n        authToken,\n        appCheckToken,\n        /*retry=*/ false // Upload requests should not be retried as each retry should be preceded by another query request. Which is handled in this file.\n      );\n      this._request = uploadRequest;\n      uploadRequest.getPromise().then((newStatus: ResumableUploadStatus) => {\n        this._increaseMultiplier();\n        this._request = undefined;\n        this._updateProgress(newStatus.current);\n        if (newStatus.finalized) {\n          this._metadata = newStatus.metadata;\n          this._transition(InternalTaskState.SUCCESS);\n        } else {\n          this.completeTransitions_();\n        }\n      }, this._errorHandler);\n    });\n  }\n\n  private _increaseMultiplier(): void {\n    const currentSize = RESUMABLE_UPLOAD_CHUNK_SIZE * this._chunkMultiplier;\n\n    // Max chunk size is 32M.\n    if (currentSize * 2 < 32 * 1024 * 1024) {\n      this._chunkMultiplier *= 2;\n    }\n  }\n\n  private _fetchMetadata(): void {\n    this._resolveToken((authToken, appCheckToken) => {\n      const requestInfo = getMetadata(\n        this._ref.storage,\n        this._ref._location,\n        this._mappings\n      );\n      const metadataRequest = this._ref.storage._makeRequest(\n        requestInfo,\n        newTextConnection,\n        authToken,\n        appCheckToken\n      );\n      this._request = metadataRequest;\n      metadataRequest.getPromise().then(metadata => {\n        this._request = undefined;\n        this._metadata = metadata;\n        this._transition(InternalTaskState.SUCCESS);\n      }, this._metadataErrorHandler);\n    });\n  }\n\n  private _oneShotUpload(): void {\n    this._resolveToken((authToken, appCheckToken) => {\n      const requestInfo = multipartUpload(\n        this._ref.storage,\n        this._ref._location,\n        this._mappings,\n        this._blob,\n        this._metadata\n      );\n      const multipartRequest = this._ref.storage._makeRequest(\n        requestInfo,\n        newTextConnection,\n        authToken,\n        appCheckToken\n      );\n      this._request = multipartRequest;\n      multipartRequest.getPromise().then(metadata => {\n        this._request = undefined;\n        this._metadata = metadata;\n        this._updateProgress(this._blob.size());\n        this._transition(InternalTaskState.SUCCESS);\n      }, this._errorHandler);\n    });\n  }\n\n  private _updateProgress(transferred: number): void {\n    const old = this._transferred;\n    this._transferred = transferred;\n\n    // A progress update can make the \"transferred\" value smaller (e.g. a\n    // partial upload not completed by server, after which the \"transferred\"\n    // value may reset to the value at the beginning of the request).\n    if (this._transferred !== old) {\n      this._notifyObservers();\n    }\n  }\n\n  private _transition(state: InternalTaskState): void {\n    if (this._state === state) {\n      return;\n    }\n    switch (state) {\n      case InternalTaskState.CANCELING:\n      case InternalTaskState.PAUSING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        this._state = state;\n        if (this._request !== undefined) {\n          this._request.cancel();\n        } else if (this.pendingTimeout) {\n          clearTimeout(this.pendingTimeout);\n          this.pendingTimeout = undefined;\n          this.completeTransitions_();\n        }\n        break;\n      case InternalTaskState.RUNNING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        const wasPaused = this._state === InternalTaskState.PAUSED;\n        this._state = state;\n        if (wasPaused) {\n          this._notifyObservers();\n          this._start();\n        }\n        break;\n      case InternalTaskState.PAUSED:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSING);\n        this._state = state;\n        this._notifyObservers();\n        break;\n      case InternalTaskState.CANCELED:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this._error = canceled();\n        this._state = state;\n        this._notifyObservers();\n        break;\n      case InternalTaskState.ERROR:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this._state = state;\n        this._notifyObservers();\n        break;\n      case InternalTaskState.SUCCESS:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this._state = state;\n        this._notifyObservers();\n        break;\n      default: // Ignore\n    }\n  }\n\n  private completeTransitions_(): void {\n    switch (this._state) {\n      case InternalTaskState.PAUSING:\n        this._transition(InternalTaskState.PAUSED);\n        break;\n      case InternalTaskState.CANCELING:\n        this._transition(InternalTaskState.CANCELED);\n        break;\n      case InternalTaskState.RUNNING:\n        this._start();\n        break;\n      default:\n        // TODO(andysoto): assert(false);\n        break;\n    }\n  }\n\n  /**\n   * A snapshot of the current task state.\n   */\n  get snapshot(): UploadTaskSnapshot {\n    const externalState = taskStateFromInternalTaskState(this._state);\n    return {\n      bytesTransferred: this._transferred,\n      totalBytes: this._blob.size(),\n      state: externalState,\n      metadata: this._metadata!,\n      task: this,\n      ref: this._ref\n    };\n  }\n\n  /**\n   * Adds a callback for an event.\n   * @param type - The type of event to listen for.\n   * @param nextOrObserver -\n   *     The `next` function, which gets called for each item in\n   *     the event stream, or an observer object with some or all of these three\n   *     properties (`next`, `error`, `complete`).\n   * @param error - A function that gets called with a `StorageError`\n   *     if the event stream ends due to an error.\n   * @param completed - A function that gets called if the\n   *     event stream ends normally.\n   * @returns\n   *     If only the event argument is passed, returns a function you can use to\n   *     add callbacks (see the examples above). If more than just the event\n   *     argument is passed, returns a function you can call to unregister the\n   *     callbacks.\n   */\n  on(\n    type: TaskEvent,\n    nextOrObserver?:\n      | StorageObserver<UploadTaskSnapshot>\n      | null\n      | ((snapshot: UploadTaskSnapshot) => unknown),\n    error?: ((a: StorageError) => unknown) | null,\n    completed?: CompleteFn | null\n  ): Unsubscribe | Subscribe<UploadTaskSnapshot> {\n    // Note: `type` isn't being used. Its type is also incorrect. TaskEvent should not be a string.\n    const observer = new Observer(\n      (nextOrObserver as\n        | StorageObserverInternal<UploadTaskSnapshot>\n        | NextFn<UploadTaskSnapshot>) || undefined,\n      error || undefined,\n      completed || undefined\n    );\n    this._addObserver(observer);\n    return () => {\n      this._removeObserver(observer);\n    };\n  }\n\n  /**\n   * This object behaves like a Promise, and resolves with its snapshot data\n   * when the upload completes.\n   * @param onFulfilled - The fulfillment callback. Promise chaining works as normal.\n   * @param onRejected - The rejection callback.\n   */\n  then<U>(\n    onFulfilled?: ((value: UploadTaskSnapshot) => U | Promise<U>) | null,\n    onRejected?: ((error: StorageError) => U | Promise<U>) | null\n  ): Promise<U> {\n    // These casts are needed so that TypeScript can infer the types of the\n    // resulting Promise.\n    return this._promise.then<U>(\n      onFulfilled as (value: UploadTaskSnapshot) => U | Promise<U>,\n      onRejected as ((error: unknown) => Promise<never>) | null\n    );\n  }\n\n  /**\n   * Equivalent to calling `then(null, onRejected)`.\n   */\n  catch<T>(onRejected: (p1: StorageError) => T | Promise<T>): Promise<T> {\n    return this.then(null, onRejected);\n  }\n\n  /**\n   * Adds the given observer.\n   */\n  private _addObserver(observer: Observer<UploadTaskSnapshot>): void {\n    this._observers.push(observer);\n    this._notifyObserver(observer);\n  }\n\n  /**\n   * Removes the given observer.\n   */\n  private _removeObserver(observer: Observer<UploadTaskSnapshot>): void {\n    const i = this._observers.indexOf(observer);\n    if (i !== -1) {\n      this._observers.splice(i, 1);\n    }\n  }\n\n  private _notifyObservers(): void {\n    this._finishPromise();\n    const observers = this._observers.slice();\n    observers.forEach(observer => {\n      this._notifyObserver(observer);\n    });\n  }\n\n  private _finishPromise(): void {\n    if (this._resolve !== undefined) {\n      let triggered = true;\n      switch (taskStateFromInternalTaskState(this._state)) {\n        case TaskState.SUCCESS:\n          fbsAsync(this._resolve.bind(null, this.snapshot))();\n          break;\n        case TaskState.CANCELED:\n        case TaskState.ERROR:\n          const toCall = this._reject as (p1: StorageError) => void;\n          fbsAsync(toCall.bind(null, this._error as StorageError))();\n          break;\n        default:\n          triggered = false;\n          break;\n      }\n      if (triggered) {\n        this._resolve = undefined;\n        this._reject = undefined;\n      }\n    }\n  }\n\n  private _notifyObserver(observer: Observer<UploadTaskSnapshot>): void {\n    const externalState = taskStateFromInternalTaskState(this._state);\n    switch (externalState) {\n      case TaskState.RUNNING:\n      case TaskState.PAUSED:\n        if (observer.next) {\n          fbsAsync(observer.next.bind(observer, this.snapshot))();\n        }\n        break;\n      case TaskState.SUCCESS:\n        if (observer.complete) {\n          fbsAsync(observer.complete.bind(observer))();\n        }\n        break;\n      case TaskState.CANCELED:\n      case TaskState.ERROR:\n        if (observer.error) {\n          fbsAsync(\n            observer.error.bind(observer, this._error as StorageError)\n          )();\n        }\n        break;\n      default:\n        // TODO(andysoto): assert(false);\n        if (observer.error) {\n          fbsAsync(\n            observer.error.bind(observer, this._error as StorageError)\n          )();\n        }\n    }\n  }\n\n  /**\n   * Resumes a paused task. Has no effect on a currently running or failed task.\n   * @returns True if the operation took effect, false if ignored.\n   */\n  resume(): boolean {\n    const valid =\n      this._state === InternalTaskState.PAUSED ||\n      this._state === InternalTaskState.PAUSING;\n    if (valid) {\n      this._transition(InternalTaskState.RUNNING);\n    }\n    return valid;\n  }\n\n  /**\n   * Pauses a currently running task. Has no effect on a paused or failed task.\n   * @returns True if the operation took effect, false if ignored.\n   */\n  pause(): boolean {\n    const valid = this._state === InternalTaskState.RUNNING;\n    if (valid) {\n      this._transition(InternalTaskState.PAUSING);\n    }\n    return valid;\n  }\n\n  /**\n   * Cancels a currently running or paused task. Has no effect on a complete or\n   * failed task.\n   * @returns True if the operation took effect, false if ignored.\n   */\n  cancel(): boolean {\n    const valid =\n      this._state === InternalTaskState.RUNNING ||\n      this._state === InternalTaskState.PAUSING;\n    if (valid) {\n      this._transition(InternalTaskState.CANCELING);\n    }\n    return valid;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines the Firebase StorageReference class.\n */\n\nimport { PassThrough, Transform, TransformOptions } from 'stream';\n\nimport { FbsBlob } from './implementation/blob';\nimport { Location } from './implementation/location';\nimport { getMappings } from './implementation/metadata';\nimport { child, lastComponent, parent } from './implementation/path';\nimport {\n  deleteObject as requestsDeleteObject,\n  getBytes,\n  getDownloadUrl as requestsGetDownloadUrl,\n  getMetadata as requestsGetMetadata,\n  list as requestsList,\n  multipartUpload,\n  updateMetadata as requestsUpdateMetadata\n} from './implementation/requests';\nimport { ListOptions, UploadResult } from './public-types';\nimport { dataFromString, StringFormat } from './implementation/string';\nimport { Metadata } from './metadata';\nimport { FirebaseStorageImpl } from './service';\nimport { ListResult } from './list';\nimport { UploadTask } from './task';\nimport { invalidRootOperation, noDownloadURL } from './implementation/error';\nimport { validateNumber } from './implementation/type';\nimport {\n  newBlobConnection,\n  newBytesConnection,\n  newStreamConnection,\n  newTextConnection\n} from './platform/connection';\n\n/**\n * Provides methods to interact with a bucket in the Firebase Storage service.\n * @internal\n * @param _location - An fbs.location, or the URL at\n *     which to base this object, in one of the following forms:\n *         gs://<bucket>/<object-path>\n *         http[s]://firebasestorage.googleapis.com/\n *                     <api-version>/b/<bucket>/o/<object-path>\n *     Any query or fragment strings will be ignored in the http[s]\n *     format. If no value is passed, the storage object will use a URL based on\n *     the project ID of the base firebase.App instance.\n */\nexport class Reference {\n  _location: Location;\n\n  constructor(\n    private _service: FirebaseStorageImpl,\n    location: string | Location\n  ) {\n    if (location instanceof Location) {\n      this._location = location;\n    } else {\n      this._location = Location.makeFromUrl(location, _service.host);\n    }\n  }\n\n  /**\n   * Returns the URL for the bucket and path this object references,\n   *     in the form gs://<bucket>/<object-path>\n   * @override\n   */\n  toString(): string {\n    return 'gs://' + this._location.bucket + '/' + this._location.path;\n  }\n\n  protected _newRef(\n    service: FirebaseStorageImpl,\n    location: Location\n  ): Reference {\n    return new Reference(service, location);\n  }\n\n  /**\n   * A reference to the root of this object's bucket.\n   */\n  get root(): Reference {\n    const location = new Location(this._location.bucket, '');\n    return this._newRef(this._service, location);\n  }\n\n  /**\n   * The name of the bucket containing this reference's object.\n   */\n  get bucket(): string {\n    return this._location.bucket;\n  }\n\n  /**\n   * The full path of this object.\n   */\n  get fullPath(): string {\n    return this._location.path;\n  }\n\n  /**\n   * The short name of this object, which is the last component of the full path.\n   * For example, if fullPath is 'full/path/image.png', name is 'image.png'.\n   */\n  get name(): string {\n    return lastComponent(this._location.path);\n  }\n\n  /**\n   * The `StorageService` instance this `StorageReference` is associated with.\n   */\n  get storage(): FirebaseStorageImpl {\n    return this._service;\n  }\n\n  /**\n   * A `StorageReference` pointing to the parent location of this `StorageReference`, or null if\n   * this reference is the root.\n   */\n  get parent(): Reference | null {\n    const newPath = parent(this._location.path);\n    if (newPath === null) {\n      return null;\n    }\n    const location = new Location(this._location.bucket, newPath);\n    return new Reference(this._service, location);\n  }\n\n  /**\n   * Utility function to throw an error in methods that do not accept a root reference.\n   */\n  _throwIfRoot(name: string): void {\n    if (this._location.path === '') {\n      throw invalidRootOperation(name);\n    }\n  }\n}\n\n/**\n * Download the bytes at the object's location.\n * @returns A Promise containing the downloaded bytes.\n */\nexport function getBytesInternal(\n  ref: Reference,\n  maxDownloadSizeBytes?: number\n): Promise<ArrayBuffer> {\n  ref._throwIfRoot('getBytes');\n  const requestInfo = getBytes(\n    ref.storage,\n    ref._location,\n    maxDownloadSizeBytes\n  );\n  return ref.storage\n    .makeRequestWithTokens(requestInfo, newBytesConnection)\n    .then(bytes =>\n      maxDownloadSizeBytes !== undefined\n        ? // GCS may not honor the Range header for small files\n          (bytes as ArrayBuffer).slice(0, maxDownloadSizeBytes)\n        : (bytes as ArrayBuffer)\n    );\n}\n\n/**\n * Download the bytes at the object's location.\n * @returns A Promise containing the downloaded blob.\n */\nexport function getBlobInternal(\n  ref: Reference,\n  maxDownloadSizeBytes?: number\n): Promise<Blob> {\n  ref._throwIfRoot('getBlob');\n  const requestInfo = getBytes(\n    ref.storage,\n    ref._location,\n    maxDownloadSizeBytes\n  );\n  return ref.storage\n    .makeRequestWithTokens(requestInfo, newBlobConnection)\n    .then(blob =>\n      maxDownloadSizeBytes !== undefined\n        ? // GCS may not honor the Range header for small files\n          (blob as Blob).slice(0, maxDownloadSizeBytes)\n        : (blob as Blob)\n    );\n}\n\n/** Stream the bytes at the object's location. */\nexport function getStreamInternal(\n  ref: Reference,\n  maxDownloadSizeBytes?: number\n): NodeJS.ReadableStream {\n  ref._throwIfRoot('getStream');\n  const requestInfo = getBytes(\n    ref.storage,\n    ref._location,\n    maxDownloadSizeBytes\n  );\n\n  /** A transformer that passes through the first n bytes. */\n  const newMaxSizeTransform: (n: number) => TransformOptions = n => {\n    let missingBytes = n;\n    return {\n      transform(chunk, encoding, callback) {\n        // GCS may not honor the Range header for small files\n        if (chunk.length < missingBytes) {\n          this.push(chunk);\n          missingBytes -= chunk.length;\n        } else {\n          this.push(chunk.slice(0, missingBytes));\n          this.emit('end');\n        }\n        callback();\n      }\n    } as TransformOptions;\n  };\n\n  const result =\n    maxDownloadSizeBytes !== undefined\n      ? new Transform(newMaxSizeTransform(maxDownloadSizeBytes))\n      : new PassThrough();\n\n  ref.storage\n    .makeRequestWithTokens(requestInfo, newStreamConnection)\n    .then(stream => (stream as NodeJS.ReadableStream).pipe(result))\n    .catch(e => result.destroy(e));\n  return result;\n}\n\n/**\n * Uploads data to this object's location.\n * The upload is not resumable.\n *\n * @param ref - StorageReference where data should be uploaded.\n * @param data - The data to upload.\n * @param metadata - Metadata for the newly uploaded data.\n * @returns A Promise containing an UploadResult\n */\nexport function uploadBytes(\n  ref: Reference,\n  data: Blob | Uint8Array | ArrayBuffer,\n  metadata?: Metadata\n): Promise<UploadResult> {\n  ref._throwIfRoot('uploadBytes');\n  const requestInfo = multipartUpload(\n    ref.storage,\n    ref._location,\n    getMappings(),\n    new FbsBlob(data, true),\n    metadata\n  );\n  return ref.storage\n    .makeRequestWithTokens(requestInfo, newTextConnection)\n    .then(finalMetadata => {\n      return {\n        metadata: finalMetadata,\n        ref\n      };\n    });\n}\n\n/**\n * Uploads data to this object's location.\n * The upload can be paused and resumed, and exposes progress updates.\n * @public\n * @param ref - StorageReference where data should be uploaded.\n * @param data - The data to upload.\n * @param metadata - Metadata for the newly uploaded data.\n * @returns An UploadTask\n */\nexport function uploadBytesResumable(\n  ref: Reference,\n  data: Blob | Uint8Array | ArrayBuffer,\n  metadata?: Metadata\n): UploadTask {\n  ref._throwIfRoot('uploadBytesResumable');\n  return new UploadTask(ref, new FbsBlob(data), metadata);\n}\n\n/**\n * Uploads a string to this object's location.\n * The upload is not resumable.\n * @public\n * @param ref - StorageReference where string should be uploaded.\n * @param value - The string to upload.\n * @param format - The format of the string to upload.\n * @param metadata - Metadata for the newly uploaded string.\n * @returns A Promise containing an UploadResult\n */\nexport function uploadString(\n  ref: Reference,\n  value: string,\n  format: StringFormat = StringFormat.RAW,\n  metadata?: Metadata\n): Promise<UploadResult> {\n  ref._throwIfRoot('uploadString');\n  const data = dataFromString(format, value);\n  const metadataClone = { ...metadata } as Metadata;\n  if (metadataClone['contentType'] == null && data.contentType != null) {\n    metadataClone['contentType'] = data.contentType!;\n  }\n  return uploadBytes(ref, data.data, metadataClone);\n}\n\n/**\n * List all items (files) and prefixes (folders) under this storage reference.\n *\n * This is a helper method for calling list() repeatedly until there are\n * no more results. The default pagination size is 1000.\n *\n * Note: The results may not be consistent if objects are changed while this\n * operation is running.\n *\n * Warning: listAll may potentially consume too many resources if there are\n * too many results.\n * @public\n * @param ref - StorageReference to get list from.\n *\n * @returns A Promise that resolves with all the items and prefixes under\n *      the current storage reference. `prefixes` contains references to\n *      sub-directories and `items` contains references to objects in this\n *      folder. `nextPageToken` is never returned.\n */\nexport function listAll(ref: Reference): Promise<ListResult> {\n  const accumulator: ListResult = {\n    prefixes: [],\n    items: []\n  };\n  return listAllHelper(ref, accumulator).then(() => accumulator);\n}\n\n/**\n * Separated from listAll because async functions can't use \"arguments\".\n * @param ref\n * @param accumulator\n * @param pageToken\n */\nasync function listAllHelper(\n  ref: Reference,\n  accumulator: ListResult,\n  pageToken?: string\n): Promise<void> {\n  const opt: ListOptions = {\n    // maxResults is 1000 by default.\n    pageToken\n  };\n  const nextPage = await list(ref, opt);\n  accumulator.prefixes.push(...nextPage.prefixes);\n  accumulator.items.push(...nextPage.items);\n  if (nextPage.nextPageToken != null) {\n    await listAllHelper(ref, accumulator, nextPage.nextPageToken);\n  }\n}\n\n/**\n * List items (files) and prefixes (folders) under this storage reference.\n *\n * List API is only available for Firebase Rules Version 2.\n *\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\n * delimited folder structure.\n * Refer to GCS's List API if you want to learn more.\n *\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\n * support objects whose paths end with \"/\" or contain two consecutive\n * \"/\"s. Firebase Storage List API will filter these unsupported objects.\n * list() may fail if there are too many unsupported objects in the bucket.\n * @public\n *\n * @param ref - StorageReference to get list from.\n * @param options - See ListOptions for details.\n * @returns A Promise that resolves with the items and prefixes.\n *      `prefixes` contains references to sub-folders and `items`\n *      contains references to objects in this folder. `nextPageToken`\n *      can be used to get the rest of the results.\n */\nexport function list(\n  ref: Reference,\n  options?: ListOptions | null\n): Promise<ListResult> {\n  if (options != null) {\n    if (typeof options.maxResults === 'number') {\n      validateNumber(\n        'options.maxResults',\n        /* minValue= */ 1,\n        /* maxValue= */ 1000,\n        options.maxResults\n      );\n    }\n  }\n  const op = options || {};\n  const requestInfo = requestsList(\n    ref.storage,\n    ref._location,\n    /*delimiter= */ '/',\n    op.pageToken,\n    op.maxResults\n  );\n  return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection);\n}\n\n/**\n * A `Promise` that resolves with the metadata for this object. If this\n * object doesn't exist or metadata cannot be retreived, the promise is\n * rejected.\n * @public\n * @param ref - StorageReference to get metadata from.\n */\nexport function getMetadata(ref: Reference): Promise<Metadata> {\n  ref._throwIfRoot('getMetadata');\n  const requestInfo = requestsGetMetadata(\n    ref.storage,\n    ref._location,\n    getMappings()\n  );\n  return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection);\n}\n\n/**\n * Updates the metadata for this object.\n * @public\n * @param ref - StorageReference to update metadata for.\n * @param metadata - The new metadata for the object.\n *     Only values that have been explicitly set will be changed. Explicitly\n *     setting a value to null will remove the metadata.\n * @returns A `Promise` that resolves\n *     with the new metadata for this object.\n *     See `firebaseStorage.Reference.prototype.getMetadata`\n */\nexport function updateMetadata(\n  ref: Reference,\n  metadata: Partial<Metadata>\n): Promise<Metadata> {\n  ref._throwIfRoot('updateMetadata');\n  const requestInfo = requestsUpdateMetadata(\n    ref.storage,\n    ref._location,\n    metadata,\n    getMappings()\n  );\n  return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection);\n}\n\n/**\n * Returns the download URL for the given Reference.\n * @public\n * @returns A `Promise` that resolves with the download\n *     URL for this object.\n */\nexport function getDownloadURL(ref: Reference): Promise<string> {\n  ref._throwIfRoot('getDownloadURL');\n  const requestInfo = requestsGetDownloadUrl(\n    ref.storage,\n    ref._location,\n    getMappings()\n  );\n  return ref.storage\n    .makeRequestWithTokens(requestInfo, newTextConnection)\n    .then(url => {\n      if (url === null) {\n        throw noDownloadURL();\n      }\n      return url;\n    });\n}\n\n/**\n * Deletes the object at this location.\n * @public\n * @param ref - StorageReference for object to delete.\n * @returns A `Promise` that resolves if the deletion succeeds.\n */\nexport function deleteObject(ref: Reference): Promise<void> {\n  ref._throwIfRoot('deleteObject');\n  const requestInfo = requestsDeleteObject(ref.storage, ref._location);\n  return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection);\n}\n\n/**\n * Returns reference for object obtained by appending `childPath` to `ref`.\n *\n * @param ref - StorageReference to get child of.\n * @param childPath - Child path from provided ref.\n * @returns A reference to the object obtained by\n * appending childPath, removing any duplicate, beginning, or trailing\n * slashes.\n *\n */\nexport function _getChild(ref: Reference, childPath: string): Reference {\n  const newPath = child(ref._location.path, childPath);\n  const location = new Location(ref._location.bucket, newPath);\n  return new Reference(ref.storage, location);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Location } from './implementation/location';\nimport { FailRequest } from './implementation/failrequest';\nimport { Request, makeRequest } from './implementation/request';\nimport { RequestInfo } from './implementation/requestinfo';\nimport { Reference, _getChild } from './reference';\nimport { Provider } from '@firebase/component';\nimport { FirebaseAuthInternalName } from '@firebase/auth-interop-types';\nimport { AppCheckInternalComponentName } from '@firebase/app-check-interop-types';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { FirebaseApp, FirebaseOptions } from '@firebase/app';\nimport {\n  CONFIG_STORAGE_BUCKET_KEY,\n  DEFAULT_HOST,\n  DEFAULT_MAX_OPERATION_RETRY_TIME,\n  DEFAULT_MAX_UPLOAD_RETRY_TIME\n} from './implementation/constants';\nimport {\n  invalidArgument,\n  appDeleted,\n  noDefaultBucket\n} from './implementation/error';\nimport { validateNumber } from './implementation/type';\nimport { FirebaseStorage } from './public-types';\nimport { createMockUserToken, EmulatorMockTokenOptions } from '@firebase/util';\nimport { Connection, ConnectionType } from './implementation/connection';\n\nexport function isUrl(path?: string): boolean {\n  return /^[A-Za-z]+:\\/\\//.test(path as string);\n}\n\n/**\n * Returns a firebaseStorage.Reference for the given url.\n */\nfunction refFromURL(service: FirebaseStorageImpl, url: string): Reference {\n  return new Reference(service, url);\n}\n\n/**\n * Returns a firebaseStorage.Reference for the given path in the default\n * bucket.\n */\nfunction refFromPath(\n  ref: FirebaseStorageImpl | Reference,\n  path?: string\n): Reference {\n  if (ref instanceof FirebaseStorageImpl) {\n    const service = ref;\n    if (service._bucket == null) {\n      throw noDefaultBucket();\n    }\n    const reference = new Reference(service, service._bucket!);\n    if (path != null) {\n      return refFromPath(reference, path);\n    } else {\n      return reference;\n    }\n  } else {\n    // ref is a Reference\n    if (path !== undefined) {\n      return _getChild(ref, path);\n    } else {\n      return ref;\n    }\n  }\n}\n\n/**\n * Returns a storage Reference for the given url.\n * @param storage - `Storage` instance.\n * @param url - URL. If empty, returns root reference.\n * @public\n */\nexport function ref(storage: FirebaseStorageImpl, url?: string): Reference;\n/**\n * Returns a storage Reference for the given path in the\n * default bucket.\n * @param storageOrRef - `Storage` service or storage `Reference`.\n * @param pathOrUrlStorage - path. If empty, returns root reference (if Storage\n * instance provided) or returns same reference (if Reference provided).\n * @public\n */\nexport function ref(\n  storageOrRef: FirebaseStorageImpl | Reference,\n  path?: string\n): Reference;\nexport function ref(\n  serviceOrRef: FirebaseStorageImpl | Reference,\n  pathOrUrl?: string\n): Reference | null {\n  if (pathOrUrl && isUrl(pathOrUrl)) {\n    if (serviceOrRef instanceof FirebaseStorageImpl) {\n      return refFromURL(serviceOrRef, pathOrUrl);\n    } else {\n      throw invalidArgument(\n        'To use ref(service, url), the first argument must be a Storage instance.'\n      );\n    }\n  } else {\n    return refFromPath(serviceOrRef, pathOrUrl);\n  }\n}\n\nfunction extractBucket(\n  host: string,\n  config?: FirebaseOptions\n): Location | null {\n  const bucketString = config?.[CONFIG_STORAGE_BUCKET_KEY];\n  if (bucketString == null) {\n    return null;\n  }\n  return Location.makeFromBucketSpec(bucketString, host);\n}\n\nexport function connectStorageEmulator(\n  storage: FirebaseStorageImpl,\n  host: string,\n  port: number,\n  options: {\n    mockUserToken?: EmulatorMockTokenOptions | string;\n  } = {}\n): void {\n  storage.host = `${host}:${port}`;\n  storage._protocol = 'http';\n  const { mockUserToken } = options;\n  if (mockUserToken) {\n    storage._overrideAuthToken =\n      typeof mockUserToken === 'string'\n        ? mockUserToken\n        : createMockUserToken(mockUserToken, storage.app.options.projectId);\n  }\n}\n\n/**\n * A service that provides Firebase Storage Reference instances.\n * @param opt_url - gs:// url to a custom Storage Bucket\n *\n * @internal\n */\nexport class FirebaseStorageImpl implements FirebaseStorage {\n  _bucket: Location | null = null;\n  /**\n   * This string can be in the formats:\n   * - host\n   * - host:port\n   */\n  private _host: string = DEFAULT_HOST;\n  _protocol: string = 'https';\n  protected readonly _appId: string | null = null;\n  private readonly _requests: Set<Request<unknown>>;\n  private _deleted: boolean = false;\n  private _maxOperationRetryTime: number;\n  private _maxUploadRetryTime: number;\n  _overrideAuthToken?: string;\n\n  constructor(\n    /**\n     * FirebaseApp associated with this StorageService instance.\n     */\n    readonly app: FirebaseApp,\n    readonly _authProvider: Provider<FirebaseAuthInternalName>,\n    /**\n     * @internal\n     */\n    readonly _appCheckProvider: Provider<AppCheckInternalComponentName>,\n    /**\n     * @internal\n     */\n    readonly _url?: string,\n    readonly _firebaseVersion?: string\n  ) {\n    this._maxOperationRetryTime = DEFAULT_MAX_OPERATION_RETRY_TIME;\n    this._maxUploadRetryTime = DEFAULT_MAX_UPLOAD_RETRY_TIME;\n    this._requests = new Set();\n    if (_url != null) {\n      this._bucket = Location.makeFromBucketSpec(_url, this._host);\n    } else {\n      this._bucket = extractBucket(this._host, this.app.options);\n    }\n  }\n\n  /**\n   * The host string for this service, in the form of `host` or\n   * `host:port`.\n   */\n  get host(): string {\n    return this._host;\n  }\n\n  set host(host: string) {\n    this._host = host;\n    if (this._url != null) {\n      this._bucket = Location.makeFromBucketSpec(this._url, host);\n    } else {\n      this._bucket = extractBucket(host, this.app.options);\n    }\n  }\n\n  /**\n   * The maximum time to retry uploads in milliseconds.\n   */\n  get maxUploadRetryTime(): number {\n    return this._maxUploadRetryTime;\n  }\n\n  set maxUploadRetryTime(time: number) {\n    validateNumber(\n      'time',\n      /* minValue=*/ 0,\n      /* maxValue= */ Number.POSITIVE_INFINITY,\n      time\n    );\n    this._maxUploadRetryTime = time;\n  }\n\n  /**\n   * The maximum time to retry operations other than uploads or downloads in\n   * milliseconds.\n   */\n  get maxOperationRetryTime(): number {\n    return this._maxOperationRetryTime;\n  }\n\n  set maxOperationRetryTime(time: number) {\n    validateNumber(\n      'time',\n      /* minValue=*/ 0,\n      /* maxValue= */ Number.POSITIVE_INFINITY,\n      time\n    );\n    this._maxOperationRetryTime = time;\n  }\n\n  async _getAuthToken(): Promise<string | null> {\n    if (this._overrideAuthToken) {\n      return this._overrideAuthToken;\n    }\n    const auth = this._authProvider.getImmediate({ optional: true });\n    if (auth) {\n      const tokenData = await auth.getToken();\n      if (tokenData !== null) {\n        return tokenData.accessToken;\n      }\n    }\n    return null;\n  }\n\n  async _getAppCheckToken(): Promise<string | null> {\n    const appCheck = this._appCheckProvider.getImmediate({ optional: true });\n    if (appCheck) {\n      const result = await appCheck.getToken();\n      // TODO: What do we want to do if there is an error getting the token?\n      // Context: appCheck.getToken() will never throw even if an error happened. In the error case, a dummy token will be\n      // returned along with an error field describing the error. In general, we shouldn't care about the error condition and just use\n      // the token (actual or dummy) to send requests.\n      return result.token;\n    }\n    return null;\n  }\n\n  /**\n   * Stop running requests and prevent more from being created.\n   */\n  _delete(): Promise<void> {\n    if (!this._deleted) {\n      this._deleted = true;\n      this._requests.forEach(request => request.cancel());\n      this._requests.clear();\n    }\n    return Promise.resolve();\n  }\n\n  /**\n   * Returns a new firebaseStorage.Reference object referencing this StorageService\n   * at the given Location.\n   */\n  _makeStorageReference(loc: Location): Reference {\n    return new Reference(this, loc);\n  }\n\n  /**\n   * @param requestInfo - HTTP RequestInfo object\n   * @param authToken - Firebase auth token\n   */\n  _makeRequest<I extends ConnectionType, O>(\n    requestInfo: RequestInfo<I, O>,\n    requestFactory: () => Connection<I>,\n    authToken: string | null,\n    appCheckToken: string | null,\n    retry = true\n  ): Request<O> {\n    if (!this._deleted) {\n      const request = makeRequest(\n        requestInfo,\n        this._appId,\n        authToken,\n        appCheckToken,\n        requestFactory,\n        this._firebaseVersion,\n        retry\n      );\n      this._requests.add(request);\n      // Request removes itself from set when complete.\n      request.getPromise().then(\n        () => this._requests.delete(request),\n        () => this._requests.delete(request)\n      );\n      return request;\n    } else {\n      return new FailRequest(appDeleted());\n    }\n  }\n\n  async makeRequestWithTokens<I extends ConnectionType, O>(\n    requestInfo: RequestInfo<I, O>,\n    requestFactory: () => Connection<I>\n  ): Promise<O> {\n    const [authToken, appCheckToken] = await Promise.all([\n      this._getAuthToken(),\n      this._getAppCheckToken()\n    ]);\n\n    return this._makeRequest(\n      requestInfo,\n      requestFactory,\n      authToken,\n      appCheckToken\n    ).getPromise();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Type constant for Firebase Storage.\n */\nexport const STORAGE_TYPE = 'storage';\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { _getProvider, FirebaseApp, getApp } from '@firebase/app';\n\nimport {\n  ref as refInternal,\n  FirebaseStorageImpl,\n  connectStorageEmulator as connectEmulatorInternal\n} from './service';\nimport { Provider } from '@firebase/component';\n\nimport {\n  StorageReference,\n  FirebaseStorage,\n  UploadResult,\n  ListOptions,\n  ListResult,\n  UploadTask,\n  SettableMetadata,\n  UploadMetadata,\n  FullMetadata\n} from './public-types';\nimport { Metadata as MetadataInternal } from './metadata';\nimport {\n  uploadBytes as uploadBytesInternal,\n  uploadBytesResumable as uploadBytesResumableInternal,\n  uploadString as uploadStringInternal,\n  getMetadata as getMetadataInternal,\n  updateMetadata as updateMetadataInternal,\n  list as listInternal,\n  listAll as listAllInternal,\n  getDownloadURL as getDownloadURLInternal,\n  deleteObject as deleteObjectInternal,\n  Reference,\n  _getChild as _getChildInternal,\n  getBytesInternal\n} from './reference';\nimport { STORAGE_TYPE } from './constants';\nimport {\n  EmulatorMockTokenOptions,\n  getModularInstance,\n  getDefaultEmulatorHostnameAndPort\n} from '@firebase/util';\nimport { StringFormat } from './implementation/string';\n\nexport { EmulatorMockTokenOptions } from '@firebase/util';\n\nexport { StorageError, StorageErrorCode } from './implementation/error';\n\n/**\n * Public types.\n */\nexport * from './public-types';\n\nexport { Location as _Location } from './implementation/location';\nexport { UploadTask as _UploadTask } from './task';\nexport type { Reference as _Reference } from './reference';\nexport type { FirebaseStorageImpl as _FirebaseStorageImpl } from './service';\nexport { FbsBlob as _FbsBlob } from './implementation/blob';\nexport { dataFromString as _dataFromString } from './implementation/string';\nexport {\n  invalidRootOperation as _invalidRootOperation,\n  invalidArgument as _invalidArgument\n} from './implementation/error';\nexport {\n  TaskEvent as _TaskEvent,\n  TaskState as _TaskState\n} from './implementation/taskenums';\nexport { StringFormat };\n\n/**\n * Downloads the data at the object's location. Returns an error if the object\n * is not found.\n *\n * To use this functionality, you have to whitelist your app's origin in your\n * Cloud Storage bucket. See also\n * https://cloud.google.com/storage/docs/configuring-cors\n *\n * @public\n * @param ref - StorageReference where data should be downloaded.\n * @param maxDownloadSizeBytes - If set, the maximum allowed size in bytes to\n * retrieve.\n * @returns A Promise containing the object's bytes\n */\nexport function getBytes(\n  ref: StorageReference,\n  maxDownloadSizeBytes?: number\n): Promise<ArrayBuffer> {\n  ref = getModularInstance(ref);\n  return getBytesInternal(ref as Reference, maxDownloadSizeBytes);\n}\n\n/**\n * Uploads data to this object's location.\n * The upload is not resumable.\n * @public\n * @param ref - {@link StorageReference} where data should be uploaded.\n * @param data - The data to upload.\n * @param metadata - Metadata for the data to upload.\n * @returns A Promise containing an UploadResult\n */\nexport function uploadBytes(\n  ref: StorageReference,\n  data: Blob | Uint8Array | ArrayBuffer,\n  metadata?: UploadMetadata\n): Promise<UploadResult> {\n  ref = getModularInstance(ref);\n  return uploadBytesInternal(\n    ref as Reference,\n    data,\n    metadata as MetadataInternal\n  );\n}\n\n/**\n * Uploads a string to this object's location.\n * The upload is not resumable.\n * @public\n * @param ref - {@link StorageReference} where string should be uploaded.\n * @param value - The string to upload.\n * @param format - The format of the string to upload.\n * @param metadata - Metadata for the string to upload.\n * @returns A Promise containing an UploadResult\n */\nexport function uploadString(\n  ref: StorageReference,\n  value: string,\n  format?: StringFormat,\n  metadata?: UploadMetadata\n): Promise<UploadResult> {\n  ref = getModularInstance(ref);\n  return uploadStringInternal(\n    ref as Reference,\n    value,\n    format,\n    metadata as MetadataInternal\n  );\n}\n\n/**\n * Uploads data to this object's location.\n * The upload can be paused and resumed, and exposes progress updates.\n * @public\n * @param ref - {@link StorageReference} where data should be uploaded.\n * @param data - The data to upload.\n * @param metadata - Metadata for the data to upload.\n * @returns An UploadTask\n */\nexport function uploadBytesResumable(\n  ref: StorageReference,\n  data: Blob | Uint8Array | ArrayBuffer,\n  metadata?: UploadMetadata\n): UploadTask {\n  ref = getModularInstance(ref);\n  return uploadBytesResumableInternal(\n    ref as Reference,\n    data,\n    metadata as MetadataInternal\n  ) as UploadTask;\n}\n\n/**\n * A `Promise` that resolves with the metadata for this object. If this\n * object doesn't exist or metadata cannot be retreived, the promise is\n * rejected.\n * @public\n * @param ref - {@link StorageReference} to get metadata from.\n */\nexport function getMetadata(ref: StorageReference): Promise<FullMetadata> {\n  ref = getModularInstance(ref);\n  return getMetadataInternal(ref as Reference) as Promise<FullMetadata>;\n}\n\n/**\n * Updates the metadata for this object.\n * @public\n * @param ref - {@link StorageReference} to update metadata for.\n * @param metadata - The new metadata for the object.\n *     Only values that have been explicitly set will be changed. Explicitly\n *     setting a value to null will remove the metadata.\n * @returns A `Promise` that resolves with the new metadata for this object.\n */\nexport function updateMetadata(\n  ref: StorageReference,\n  metadata: SettableMetadata\n): Promise<FullMetadata> {\n  ref = getModularInstance(ref);\n  return updateMetadataInternal(\n    ref as Reference,\n    metadata as Partial<MetadataInternal>\n  ) as Promise<FullMetadata>;\n}\n\n/**\n * List items (files) and prefixes (folders) under this storage reference.\n *\n * List API is only available for Firebase Rules Version 2.\n *\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\n * delimited folder structure.\n * Refer to GCS's List API if you want to learn more.\n *\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\n * support objects whose paths end with \"/\" or contain two consecutive\n * \"/\"s. Firebase Storage List API will filter these unsupported objects.\n * list() may fail if there are too many unsupported objects in the bucket.\n * @public\n *\n * @param ref - {@link StorageReference} to get list from.\n * @param options - See {@link ListOptions} for details.\n * @returns A `Promise` that resolves with the items and prefixes.\n *      `prefixes` contains references to sub-folders and `items`\n *      contains references to objects in this folder. `nextPageToken`\n *      can be used to get the rest of the results.\n */\nexport function list(\n  ref: StorageReference,\n  options?: ListOptions\n): Promise<ListResult> {\n  ref = getModularInstance(ref);\n  return listInternal(ref as Reference, options);\n}\n\n/**\n * List all items (files) and prefixes (folders) under this storage reference.\n *\n * This is a helper method for calling list() repeatedly until there are\n * no more results. The default pagination size is 1000.\n *\n * Note: The results may not be consistent if objects are changed while this\n * operation is running.\n *\n * Warning: `listAll` may potentially consume too many resources if there are\n * too many results.\n * @public\n * @param ref - {@link StorageReference} to get list from.\n *\n * @returns A `Promise` that resolves with all the items and prefixes under\n *      the current storage reference. `prefixes` contains references to\n *      sub-directories and `items` contains references to objects in this\n *      folder. `nextPageToken` is never returned.\n */\nexport function listAll(ref: StorageReference): Promise<ListResult> {\n  ref = getModularInstance(ref);\n  return listAllInternal(ref as Reference);\n}\n\n/**\n * Returns the download URL for the given {@link StorageReference}.\n * @public\n * @param ref - {@link StorageReference} to get the download URL for.\n * @returns A `Promise` that resolves with the download\n *     URL for this object.\n */\nexport function getDownloadURL(ref: StorageReference): Promise<string> {\n  ref = getModularInstance(ref);\n  return getDownloadURLInternal(ref as Reference);\n}\n\n/**\n * Deletes the object at this location.\n * @public\n * @param ref - {@link StorageReference} for object to delete.\n * @returns A `Promise` that resolves if the deletion succeeds.\n */\nexport function deleteObject(ref: StorageReference): Promise<void> {\n  ref = getModularInstance(ref);\n  return deleteObjectInternal(ref as Reference);\n}\n\n/**\n * Returns a {@link StorageReference} for the given url.\n * @param storage - {@link FirebaseStorage} instance.\n * @param url - URL. If empty, returns root reference.\n * @public\n */\nexport function ref(storage: FirebaseStorage, url?: string): StorageReference;\n/**\n * Returns a {@link StorageReference} for the given path in the\n * default bucket.\n * @param storageOrRef - {@link FirebaseStorage} or {@link StorageReference}.\n * @param pathOrUrlStorage - path. If empty, returns root reference (if {@link FirebaseStorage}\n * instance provided) or returns same reference (if {@link StorageReference} provided).\n * @public\n */\nexport function ref(\n  storageOrRef: FirebaseStorage | StorageReference,\n  path?: string\n): StorageReference;\nexport function ref(\n  serviceOrRef: FirebaseStorage | StorageReference,\n  pathOrUrl?: string\n): StorageReference | null {\n  serviceOrRef = getModularInstance(serviceOrRef);\n  return refInternal(\n    serviceOrRef as FirebaseStorageImpl | Reference,\n    pathOrUrl\n  );\n}\n\n/**\n * @internal\n */\nexport function _getChild(ref: StorageReference, childPath: string): Reference {\n  return _getChildInternal(ref as Reference, childPath);\n}\n\n/**\n * Gets a {@link FirebaseStorage} instance for the given Firebase app.\n * @public\n * @param app - Firebase app to get {@link FirebaseStorage} instance for.\n * @param bucketUrl - The gs:// url to your Firebase Storage Bucket.\n * If not passed, uses the app's default Storage Bucket.\n * @returns A {@link FirebaseStorage} instance.\n */\nexport function getStorage(\n  app: FirebaseApp = getApp(),\n  bucketUrl?: string\n): FirebaseStorage {\n  app = getModularInstance(app);\n  const storageProvider: Provider<'storage'> = _getProvider(app, STORAGE_TYPE);\n  const storageInstance = storageProvider.getImmediate({\n    identifier: bucketUrl\n  });\n  const emulator = getDefaultEmulatorHostnameAndPort('storage');\n  if (emulator) {\n    connectStorageEmulator(storageInstance, ...emulator);\n  }\n  return storageInstance;\n}\n\n/**\n * Modify this {@link FirebaseStorage} instance to communicate with the Cloud Storage emulator.\n *\n * @param storage - The {@link FirebaseStorage} instance\n * @param host - The emulator host (ex: localhost)\n * @param port - The emulator port (ex: 5001)\n * @param options - Emulator options. `options.mockUserToken` is the mock auth\n * token to use for unit testing Security Rules.\n * @public\n */\nexport function connectStorageEmulator(\n  storage: FirebaseStorage,\n  host: string,\n  port: number,\n  options: {\n    mockUserToken?: EmulatorMockTokenOptions | string;\n  } = {}\n): void {\n  connectEmulatorInternal(storage as FirebaseStorageImpl, host, port, options);\n}\n","/**\n * Cloud Storage for Firebase\n *\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  _registerComponent,\n  registerVersion,\n  SDK_VERSION\n} from '@firebase/app';\n\nimport { FirebaseStorageImpl } from '../src/service';\nimport {\n  Component,\n  ComponentType,\n  ComponentContainer,\n  InstanceFactoryOptions\n} from '@firebase/component';\n\nimport { name, version } from '../package.json';\n\nimport { FirebaseStorage } from './public-types';\nimport { STORAGE_TYPE } from './constants';\n\nexport * from './api';\nexport * from './api.browser';\n\nfunction factory(\n  container: ComponentContainer,\n  { instanceIdentifier: url }: InstanceFactoryOptions\n): FirebaseStorage {\n  const app = container.getProvider('app').getImmediate();\n  const authProvider = container.getProvider('auth-internal');\n  const appCheckProvider = container.getProvider('app-check-internal');\n\n  return new FirebaseStorageImpl(\n    app,\n    authProvider,\n    appCheckProvider,\n    url,\n    SDK_VERSION\n  );\n}\n\nfunction registerStorage(): void {\n  _registerComponent(\n    new Component(\n      STORAGE_TYPE,\n      factory,\n      ComponentType.PUBLIC\n    ).setMultipleInstances(true)\n  );\n  //RUNTIME_ENV will be replaced during the compilation to \"node\" for nodejs and an empty string for browser\n  registerVersion(name, version, '__RUNTIME_ENV__');\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n}\n\nregisterStorage();\n"],"names":["stringToByteArray$1","str","out","p","i","length","c","charCodeAt","base64","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","this","ENCODED_VALS_WEBSAFE","HAS_NATIVE_SUPPORT","atob","encodeByteArray","input","webSafe","Array","isArray","Error","init_","byteToCharMap","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","push","join","encodeString","btoa","decodeString","bytes","pos","c1","String","fromCharCode","c2","u","c3","byteArrayToString","decodeStringToByteArray","charToByteMap","charAt","byte4","DecodeBase64StringError","_Error","_inherits","_super","_createSuper","_this","_classCallCheck","name","_createClass","_wrapNativeSuper","base64urlEncodeWithoutPadding","utf8Bytes","base64Encode","replace","base64Decode","e","console","error","getDefaultsFromGlobal","self","window","global","getGlobal","__FIREBASE_DEFAULTS__","getDefaults","process","defaultsJsonString","JSON","parse","getDefaultsFromEnvVariable","document","match","cookie","decoded","getDefaultsFromCookie","info","concat","getDefaultEmulatorHostnameAndPort","productName","host","_a","_b","emulatorHosts","getDefaultEmulatorHost","separatorIndex","lastIndexOf","port","parseInt","substring","getDefaultAppConfig","config","Deferred","_this2","reject","resolve","promise","Promise","key","value","callback","_this3","catch","createMockUserToken","token","projectId","uid","project","iat","sub","user_id","payload","Object","assign","iss","aud","exp","auth_time","firebase","sign_in_provider","identities","stringify","alg","type","isNode","forceEnvironment","prototype","toString","call","isIndexedDBAvailable","indexedDB","validateIndexedDBOpenable","preExist","DB_CHECK_NAME","request","open","onsuccess","result","close","deleteDatabase","onupgradeneeded","onerror","message","FirebaseError","_Error2","_super2","code","customData","_this4","setPrototypeOf","_assertThisInitialized","captureStackTrace","ErrorFactory","create","service","serviceName","errors","arguments","undefined","fullCode","template","data","PATTERN","_","replaceTemplate","fullMessage","deepEqual","a","b","aKeys","keys","bKeys","_i","_aKeys","k","includes","aProp","bProp","isObject","_i2","_bKeys","thing","getModularInstance","_delegate","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","createSvgIcon","_jsx","getAvatarUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","AvatarRoot","styled","overridesResolver","props","styles","ownerState","root","variant","colorDefault","_ref","theme","_extends","position","display","alignItems","justifyContent","flexShrink","width","height","fontFamily","typography","fontSize","pxToRem","lineHeight","borderRadius","overflow","userSelect","vars","shape","color","palette","background","backgroundColor","Avatar","defaultBg","mode","grey","AvatarImg","img","textAlign","objectFit","textIndent","AvatarFallback","Person","fallback","React","inProps","ref","useThemeProps","alt","childrenProp","children","className","_props$component","component","imgProps","sizes","src","srcSet","_props$variant","other","_objectWithoutPropertiesLoose","loaded","_ref2","crossOrigin","referrerPolicy","_React$useState","_React$useState2","_slicedToArray","setLoaded","active","image","Image","onload","srcset","useLoaded","hasImg","hasImgNotFailing","classes","slots","composeClasses","useUtilityClasses","as","clsx","current","getBadgeUtilityClass","BadgeRoot","verticalAlign","BadgeBadge","badge","capitalize","anchorOrigin","vertical","horizontal","overlap","invisible","_ref3","flexDirection","flexWrap","alignContent","boxSizing","fontWeight","fontWeightMedium","minWidth","RADIUS_STANDARD","padding","zIndex","transition","transitions","easing","easeInOut","duration","enteringScreen","main","contrastText","RADIUS_DOT","_defineProperty","top","right","transform","transformOrigin","badgeClasses","bottom","left","leavingScreen","_slots$root","_slots$badge","_slotProps$root","_slotProps$badge","_props$anchorOrigin","anchorOriginProp","_props$components","components","_props$componentsProp","componentsProps","_props$overlap","overlapProp","_props$color","colorProp","_props$invisible","invisibleProp","_props$max","max","maxProp","badgeContentProp","badgeContent","slotProps","_props$showZero","showZero","variantProp","_useBadge","parameters","_parameters$invisible","_parameters$max","_parameters$showZero","prevProps","usePreviousProps","_ref$max","displayValue","Number","useBadge","invisibleFromHook","displayValueFromHook","_ref12","_ref12$color","_ref12$overlap","_ref12$anchorOrigin","_ref12$variant","_ownerState$classes","RootSlot","Root","BadgeSlot","Badge","rootSlotProps","badgeSlotProps","rootProps","useSlotProps","elementType","externalSlotProps","externalForwardedProps","additionalProps","badgeProps","_jsxs","r","bind","t","n","o","indexOf","decodeURIComponent","toUpperCase","header","split","EN_US","ZH_CN","Locales","register","locale","func","SEC_ARRAY","toDate","Date","isNaN","test","trim","format","date","opts","sec","relativeDate","diffSec","diff","localeFunc","agoIn","totalSec","Math","abs","idx","floor","formatDiff","getLocale","unit","LogLevel","instances","levelStringToEnum","DEBUG","VERBOSE","INFO","WARN","ERROR","SILENT","defaultLogLevel","ConsoleMethod","_ConsoleMethod","defaultLogHandler","instance","logType","logLevel","now","toISOString","method","_console","_len","args","_key","apply","Logger","_logLevel","_logHandler","_userLogHandler","get","set","val","TypeError","_len2","_key2","_len3","_key3","_len4","_key4","_len5","_key5","_len6","_key6","idbProxyableTypes","cursorAdvanceMethods","instanceOfAny","object","constructors","some","cursorRequestMap","WeakMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","idbProxyTraps","target","prop","receiver","IDBTransaction","objectStoreNames","objectStore","wrap","has","wrapFunction","IDBDatabase","transaction","IDBCursor","advance","continue","continuePrimaryKey","unwrap","storeNames","tx","sort","transformCachableValue","done","unlisten","removeEventListener","complete","DOMException","addEventListener","cacheDonePromiseForTransaction","IDBObjectStore","IDBIndex","Proxy","IDBRequest","success","then","promisifyRequest","newValue","readMethods","writeMethods","cachedMethods","Map","getMethod","targetFuncName","useIndex","isWrite","_asyncToGenerator","_regeneratorRuntime","mark","_callee","storeName","_target","_args","_context","prev","next","store","index","shift","all","abrupt","sent","stop","_x","oldTraps","_objectSpread","PlatformLoggerServiceImpl","container","getProviders","map","provider","getComponent","isVersionServiceProvider","getImmediate","library","version","filter","logString","logger","DEFAULT_ENTRY_NAME","PLATFORM_LOG_STRING","_PLATFORM_LOG_STRING","name$o","_apps","_components","_addComponent","app","addComponent","debug","_registerComponent","componentName","_step","values","_iterator","s","err","f","_getProvider","heartbeatController","getProvider","optional","triggerHeartbeat","ERRORS","_ERRORS","ERROR_FACTORY","FirebaseAppImpl","options","_isDeleted","_options","_config","_name","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","_container","Component","checkDestroyed","isDeleted","appName","SDK_VERSION","initializeApp","rawConfig","existingApp","_step2","ComponentContainer","_iterator2","_createForOfIteratorHelper","newApp","getApp","registerVersion","libraryKeyOrName","libraryMismatch","versionMismatch","warning","warn","DB_NAME","DB_VERSION","STORE_NAME","dbPromise","getDbPromise","blocked","upgrade","blocking","terminated","openPromise","event","oldVersion","newVersion","db","openDB","createObjectStore","originalErrorMessage","readHeartbeatsFromIndexedDB","_x2","_readHeartbeatsFromIndexedDB","_callee8","idbGetError","_context8","computeKey","t0","writeHeartbeatsToIndexedDB","_x3","_x4","_writeHeartbeatsToIndexedDB","_callee9","heartbeatObject","_context9","put","appId","HeartbeatServiceImpl","_heartbeatsCache","_storage","HeartbeatStorageImpl","_heartbeatsCachePromise","read","_triggerHeartbeat","platformLogger","agent","getPlatformInfoString","getUTCDateString","lastSentHeartbeatDate","heartbeats","singleDateHeartbeat","hbTimestamp","valueOf","overwrite","_getHeartbeatsHeader","_callee2","_extractHeartbeatsFor","heartbeatsToSend","unsentEntries","headerString","_context2","extractHeartbeatsForHeader","heartbeatsCache","_step3","maxSize","slice","_iterator3","_loop","heartbeatEntry","find","hb","dates","countBytes","pop","_canUseIndexedDBPromise","runIndexedDBEnvironmentCheck","_runIndexedDBEnvironmentCheck","_callee3","_context3","_read","_callee4","idbHeartbeatObject","_context4","_callee5","heartbeatsObject","existingHeartbeatsObject","_context5","_x5","_overwrite","_callee6","_context6","_toConsumableArray","_x6","_add","version$1","instanceFactory","multipleInstances","serviceProps","instantiationMode","onInstanceCreated","Provider","instancesDeferred","instancesOptions","onInitCallbacks","identifier","normalizedIdentifier","normalizeInstanceIdentifier","deferred","isInitialized","shouldAutoInitialize","getOrInitializeService","instanceIdentifier","isComponentEager","entries","_step$value","instanceDeferred","delete","services","from","INTERNAL","_delete","_delete2","_opts$options","isComponentSet","_step2$value","existingCallbacks","Set","add","existingInstance","callbacks","_ref$options","invokeOnInitCallbacks","providers","setComponent","StorageErrorCode","DEFAULT_HOST","CONFIG_STORAGE_BUCKET_KEY","StorageError","_FirebaseError","status_","prependCode","serverResponse","_baseMessage","status","unknown","UNKNOWN","retryLimitExceeded","RETRY_LIMIT_EXCEEDED","canceled","CANCELED","cannotSliceBlob","CANNOT_SLICE_BLOB","invalidArgument","INVALID_ARGUMENT","appDeleted","APP_DELETED","invalidFormat","INVALID_FORMAT","internalError","INTERNAL_ERROR","ErrorCode","Location","bucket","path","path_","encode","encodeURIComponent","bucketString","bucketLocation","makeFromUrl","INVALID_DEFAULT_BUCKET","url","location","bucketDomain","gsRegex","RegExp","httpModify","loc","firebaseStorageHost","groups","regex","indices","postModify","group","captures","exec","bucketValue","pathValue","INVALID_URL","invalidUrl","FailRequest","promise_","isString","isNativeBlob","isNativeBlobDefined","Blob","validateNumber","argument","minValue","maxValue","makeUrl","urlPart","protocol","origin","makeQueryString","params","queryPart","hasOwnProperty","isRetryStatusCode","additionalRetryCodes","isFiveHundredCode","isExtraRetryCode","isAdditionalRetryCode","NetworkRequest","url_","method_","headers_","body_","successCodes_","additionalRetryCodes_","callback_","errorCallback_","timeout_","progressCallback_","connectionFactory_","retry","pendingConnection_","backoffId_","canceled_","appDelete_","resolve_","reject_","start_","backoffDone","requestWentThrough","connection","wasSuccessCode","getResponse","getErrorText","RequestEndStatus","doRequest","backoffCompleteCb","timeout","waitSeconds","retryTimeoutId","globalTimeoutId","hitTimeout","cancelState","triggeredCallback","triggerCallback","callWithDelay","millis","setTimeout","responseHandler","clearGlobalTimeout","clearTimeout","waitMillis","random","stopped","wasTimeout","start","backoffCallback","progressListener","progressEvent","total","lengthComputable","addUploadProgressListener","send","removeUploadProgressListener","hitServer","getErrorCode","NO_ERROR","getStatus","wasCanceled","ABORT","successCode","appDelete","abort","getBlobBuilder","BlobBuilder","WebKitBlobBuilder","getBlob$1","bb","append","getBlob","UNSUPPORTED_ENVIRONMENT","decodeBase64","encoded","polyFill","StringFormat","RAW","BASE64","BASE64URL","DATA_URL","StringData","contentType","dataFromString","stringData","utf8Bytes_","base64Bytes_","dataUrl","parts","DataURLParts","rest","percentEncodedBytes_","dataURLBytes_","Uint8Array","hasMinus","hasUnder","hasPlus","hasSlash","array","dataURL","matches","middle","end","endsWith","FbsBlob","elideCopy","size","blobType","data_","ArrayBuffer","byteLength","size_","type_","startByte","endByte","sliced","blob","webkitSlice","mozSlice","sliceBlob","buffer","blobby","uint8Arrays","finalLength","forEach","merged","jsonObjectOrNull","obj","lastComponent","noXform_","metadata","Mapping","server","local","writable","xform","mappings_","getMappings","mappings","nameMapping","_metadata","fullPath","xformPath","sizeMapping","fromResource","resource","len","mapping","defineProperty","_makeStorageReference","addRef","fromResourceString","resourceString","toResourceString","RequestInfo","handler","urlParams","headers","body","errorHandler","progressCallback","successCodes","handlerCheck","cndn","metadataHandler","xhr","text","downloadUrlHandler","tokens","downloadUrlFromResourceString","_protocol","sharedErrorHandler","newErr","UNAUTHORIZED_APP","UNAUTHENTICATED","QUOTA_EXCEEDED","UNAUTHORIZED","objectErrorHandler","shared","OBJECT_NOT_FOUND","getMetadata$2","fullServerUrl","maxOperationRetryTime","requestInfo","metadataForUpload_","metadataClone","determineContentType_","multipartUpload","bucketOnlyServerUrl","boundary","genBoundary","metadata_","preBlobPart","postBlobPart","maxUploadRetryTime","uploadData","ResumableUploadStatus","finalized","checkResumeHeader_","allowed","getResponseHeader","RESUMABLE_UPLOAD_CHUNK_SIZE","continueResumableUpload","chunkSize","SERVER_FILE_WRONG_SIZE","bytesLeft","bytesToUpload","min","uploadStatus","newCurrent","TaskState","taskStateFromInternalTaskState","state","Observer","nextOrObserver","observer","async","argsToForward","textFactoryOverride","XhrConnection","sent_","xhr_","XMLHttpRequest","initXhr","errorCode_","sendPromise_","NETWORK_ERROR","setRequestHeader","response","statusText","listener","upload","XhrTextConnection","_XhrConnection","responseType","newTextConnection","UploadTask","_this5","_transferred","_needToFetchStatus","_needToFetchMetadata","_observers","_error","_uploadUrl","_request","_chunkMultiplier","_resolve","_reject","_blob","_mappings","_resumable","_shouldDoResumable","_state","_errorHandler","_codeEquals","completeTransitions_","backoffExpired","isExponentialBackoffExpired","sleepTime","_transition","_metadataErrorHandler","maxSleepTime","storage","_promise","_start","_this6","sizeBefore","_updateProgress","_this7","_createResumable","_fetchStatus","_fetchMetadata","pendingTimeout","_continueUpload","_oneShotUpload","_this8","_getAuthToken","_getAppCheckToken","authToken","appCheckToken","_this9","_resolveToken","metadataForUpload","createResumableUpload","_location","createRequest","_makeRequest","getPromise","_this10","sizeString","getResumableUploadStatus","statusRequest","_this11","_makeProgressCallback","uploadRequest","newStatus","_increaseMultiplier","_this12","metadataRequest","_this13","multipartRequest","transferred","old","_notifyObservers","cancel","wasPaused","externalState","bytesTransferred","totalBytes","task","completed","_this14","_addObserver","_removeObserver","onFulfilled","onRejected","_notifyObserver","splice","_this15","_finishPromise","triggered","snapshot","valid","Reference","_service","_newRef","newPath","parent","INVALID_ROOT_OPERATION","invalidRootOperation","getDownloadURL$1","_throwIfRoot","getDownloadUrl","makeRequestWithTokens","NO_DOWNLOAD_URL","_getChild$1","childPath","canonicalChildPath","child","refFromPath","FirebaseStorageImpl","_bucket","NO_DEFAULT_BUCKET","reference","ref$1","serviceOrRef","pathOrUrl","extractBucket","makeFromBucketSpec","_authProvider","_appCheckProvider","_url","_firebaseVersion","_host","_appId","_deleted","_maxOperationRetryTime","_maxUploadRetryTime","_requests","time","POSITIVE_INFINITY","_getAuthToken2","auth","tokenData","_overrideAuthToken","getToken","accessToken","_getAppCheckToken2","appCheck","clear","requestFactory","_this16","firebaseVersion","addGmpidHeader_","addAuthHeader_","addVersionHeader_","addAppCheckHeader_","makeRequest","_makeRequestWithTokens","_yield$Promise$all","_yield$Promise$all2","STORAGE_TYPE","uploadBytesResumable","uploadBytesResumable$1","getDownloadURL","getStorage","bucketUrl","storageInstance","emulator","connectStorageEmulator","mockUserToken","connectStorageEmulator$1","factory","authProvider","appCheckProvider","setMultipleInstances"],"sourceRoot":""}